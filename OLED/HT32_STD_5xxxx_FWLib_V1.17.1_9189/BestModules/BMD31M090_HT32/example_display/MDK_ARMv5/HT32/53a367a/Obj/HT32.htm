<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\HT32\53a367a\Obj\HT32.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\HT32\53a367a\Obj\HT32.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6230001: Last Updated: Thu Jul  3 16:02:21 2025
<BR><P>
<H3>Maximum Stack Usage =        264 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; test_drawString_drawChar_drawNum &rArr; BMD31M090_drawNum &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[e]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[e]">ADC_IRQHandler</a><BR>
 <LI><a href="#[52]">I2C_TargetAddressConfig</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[52]">I2C_TargetAddressConfig</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[e]">ADC_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[f]">AES_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[17]">BFTM0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[18]">BFTM1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[26]">BootProcess</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[d]">COMP_DAC_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[9]">EVWUP_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[12]">GPTM0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from ht32f5xxxx_01_it.o(.text.HardFault_Handler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[19]">I2C0_IRQHandler</a> from i2c_master.o(.text.I2C0_IRQHandler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1a]">I2C1_IRQHandler</a> from i2c_master.o(.text.I2C1_IRQHandler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[22]">I2S_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[6]">LVD_BOD_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[10]">MCTM0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from ht32f5xxxx_01_it.o(.text.NMI_Handler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[24]">PDMA_CH0_1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[25]">PDMA_CH2_5_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[15]">PWM0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[16]">PWM1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from ht32f5xxxx_01_it.o(.text.PendSV_Handler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[11]">QSPI_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[21]">SCI_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[13]">SCTM0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[14]">SCTM1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1b]">SPI0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1c]">SPI1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from ht32f5xxxx_01_it.o(.text.SVC_Handler) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_ht32f5xxxx_03.o(.text.SystemInit) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1f]">UART0_UART2_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[20]">UART1_UART3_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1d]">USART0_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[1e]">USART1_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[23]">USB_IRQHandler</a> from startup_ht32f5xxxx_03.o(RESET) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_ht32f5xxxx_03.o(RESET)
 <LI><a href="#[29]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR><BR>[Calls]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>AES_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>BFTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>BFTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>COMP_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>COMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[9]"></a>EVWUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>GPTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>LVD_BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>MCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PDMA_CH0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PDMA_CH2_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PWM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>QSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>SCI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>SCTM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>SCTM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[1f]"></a>UART0_UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET), UNUSED, KEPT)

<P><STRONG><a name="[20]"></a>UART1_UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[32]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[67]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[68]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[69]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[6a]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[6b]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[30]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[6d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>

<P><STRONG><a name="[6e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[41]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawNum
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_dim
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_invertDisplay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_variousScroll
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawBitmap
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawPixel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
</UL>

<P><STRONG><a name="[42]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawNum
</UL>

<P><STRONG><a name="[2e]"></a>__scatterload</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[6f]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>AFIO_GPxConfig</STRONG> (Thumb, 376 bytes, Stack size 76 bytes, ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = AFIO_GPxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[33]"></a>BMD31M090_Init</STRONG> (Thumb, 1236 bytes, Stack size 64 bytes, bmd31m090.o(.text.BMD31M090_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = BMD31M090_Init &rArr; I2CMaster_Init &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>BMD31M090_clearDisplay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bmd31m090.o(.text.BMD31M090_clearDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BMD31M090_clearDisplay
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawBitmap
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawPixel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
</UL>

<P><STRONG><a name="[3a]"></a>BMD31M090_dim</STRONG> (Thumb, 120 bytes, Stack size 56 bytes, bmd31m090.o(.text.BMD31M090_dim))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BMD31M090_dim &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_dim
</UL>

<P><STRONG><a name="[38]"></a>BMD31M090_display</STRONG> (Thumb, 232 bytes, Stack size 64 bytes, bmd31m090.o(.text.BMD31M090_display))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BMD31M090_display &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawBitmap
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawPixel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>

<P><STRONG><a name="[63]"></a>BMD31M090_drawBitmap</STRONG> (Thumb, 264 bytes, Stack size 68 bytes, bmd31m090.o(.text.BMD31M090_drawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = BMD31M090_drawBitmap
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawBitmap
</UL>

<P><STRONG><a name="[3b]"></a>BMD31M090_drawChar</STRONG> (Thumb, 212 bytes, Stack size 72 bytes, bmd31m090.o(.text.BMD31M090_drawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setPixelRow
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawNum
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawString
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
</UL>

<P><STRONG><a name="[3d]"></a>BMD31M090_drawFastHLine</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bmd31m090.o(.text.BMD31M090_drawFastHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BMD31M090_drawFastHLine &rArr; BMD31M090_drawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
</UL>

<P><STRONG><a name="[3f]"></a>BMD31M090_drawFastVLine</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, bmd31m090.o(.text.BMD31M090_drawFastVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BMD31M090_drawFastVLine &rArr; BMD31M090_drawLine
</UL>
<BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
</UL>

<P><STRONG><a name="[3e]"></a>BMD31M090_drawLine</STRONG> (Thumb, 332 bytes, Stack size 48 bytes, bmd31m090.o(.text.BMD31M090_drawLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BMD31M090_drawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawFastVLine
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawFastHLine
</UL>

<P><STRONG><a name="[40]"></a>BMD31M090_drawNum</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, bmd31m090.o(.text.BMD31M090_drawNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BMD31M090_drawNum &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
</UL>

<P><STRONG><a name="[64]"></a>BMD31M090_drawPixel</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bmd31m090.o(.text.BMD31M090_drawPixel))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawPixel
</UL>

<P><STRONG><a name="[43]"></a>BMD31M090_drawString</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, bmd31m090.o(.text.BMD31M090_drawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = BMD31M090_drawString &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
</UL>

<P><STRONG><a name="[44]"></a>BMD31M090_invertDisplay</STRONG> (Thumb, 72 bytes, Stack size 40 bytes, bmd31m090.o(.text.BMD31M090_invertDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BMD31M090_invertDisplay &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_invertDisplay
</UL>

<P><STRONG><a name="[65]"></a>BMD31M090_setFont</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bmd31m090.o(.text.BMD31M090_setFont))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
</UL>

<P><STRONG><a name="[3c]"></a>BMD31M090_setPixelRow</STRONG> (Thumb, 160 bytes, Stack size 56 bytes, bmd31m090.o(.text.BMD31M090_setPixelRow))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
</UL>

<P><STRONG><a name="[45]"></a>BMD31M090_startScrollLeft</STRONG> (Thumb, 900 bytes, Stack size 64 bytes, bmd31m090.o(.text.BMD31M090_startScrollLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BMD31M090_startScrollLeft &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_variousScroll
</UL>

<P><STRONG><a name="[46]"></a>BMD31M090_startScrollRight</STRONG> (Thumb, 900 bytes, Stack size 64 bytes, bmd31m090.o(.text.BMD31M090_startScrollRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = BMD31M090_startScrollRight &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_variousScroll
</UL>

<P><STRONG><a name="[47]"></a>BMD31M090_stopScroll</STRONG> (Thumb, 60 bytes, Stack size 40 bytes, bmd31m090.o(.text.BMD31M090_stopScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BMD31M090_stopScroll &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_variousScroll
</UL>

<P><STRONG><a name="[59]"></a>CKCU_GetPeripFrequency</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKCU_GetPeripFrequency
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
</UL>

<P><STRONG><a name="[53]"></a>CKCU_PeripClockConfig</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CKCU_PeripClockConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C0_IRQHandler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, i2c_master.o(.text.I2C0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C0_IRQHandler &rArr; I2CMaster_IRQHandler &rArr; I2C_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C1_IRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, i2c_master.o(.text.I2C1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = I2C1_IRQHandler &rArr; I2CMaster_IRQHandler &rArr; I2C_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>I2CMaster_GetStatus</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, i2c_master.o(.text.I2CMaster_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2CMaster_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setPixelRow
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_dim
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_invertDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_stopScroll
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollLeft
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollRight
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>

<P><STRONG><a name="[48]"></a>I2CMaster_IRQHandler</STRONG> (Thumb, 496 bytes, Stack size 24 bytes, i2c_master.o(.text.I2CMaster_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = I2CMaster_IRQHandler &rArr; I2C_ReadRegister
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SendData
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_AckCmd
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReceiveData
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ReadRegister
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GenerateSTOP
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C1_IRQHandler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_IRQHandler
</UL>

<P><STRONG><a name="[34]"></a>I2CMaster_Init</STRONG> (Thumb, 280 bytes, Stack size 48 bytes, i2c_master.o(.text.I2CMaster_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = I2CMaster_Init &rArr; AFIO_GPxConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SequentialFilterConfig
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CombFilterCmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntConfig
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AFIO_GPxConfig
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_PeripClockConfig
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>

<P><STRONG><a name="[58]"></a>I2CMaster_Start</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, i2c_master.o(.text.I2CMaster_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_ClearFlag
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagStatus
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IntConfig
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Write
</UL>

<P><STRONG><a name="[35]"></a>I2CMaster_Write</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, i2c_master.o(.text.I2CMaster_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setPixelRow
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_dim
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_invertDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_stopScroll
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollLeft
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollRight
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>

<P><STRONG><a name="[4e]"></a>I2C_AckCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_AckCmd))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>

<P><STRONG><a name="[4a]"></a>I2C_ClearFlag</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_ClearFlag))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
</UL>

<P><STRONG><a name="[51]"></a>I2C_Cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_Cmd))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
</UL>

<P><STRONG><a name="[56]"></a>I2C_CombFilterCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[4b]"></a>I2C_GenerateSTOP</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
</UL>

<P><STRONG><a name="[4f]"></a>I2C_GetFlagStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
</UL>

<P><STRONG><a name="[55]"></a>I2C_Init</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, ht32f5xxxx_i2c.o(.text.I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = I2C_Init &rArr; CKCU_GetPeripFrequency
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CKCU_GetPeripFrequency
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[49]"></a>I2C_IntConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_IntConfig))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_GetStatus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[4c]"></a>I2C_ReadRegister</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, ht32f5xxxx_i2c.o(.text.I2C_ReadRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = I2C_ReadRegister
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>

<P><STRONG><a name="[4d]"></a>I2C_ReceiveData</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_ReceiveData))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>I2C_SendData</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_SendData))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
</UL>

<P><STRONG><a name="[57]"></a>I2C_SequentialFilterConfig</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_SequentialFilterConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Init
</UL>

<P><STRONG><a name="[52]"></a>I2C_TargetAddressConfig</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_IRQHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TargetAddressConfig
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2CMaster_Start
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ht32f5xxxx_01_it.o(.text.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 364 bytes, Stack size 44 bytes, system_ht32f5xxxx_03.o(.text.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>main</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = main &rArr; test_drawString_drawChar_drawNum &rArr; BMD31M090_drawNum &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_dim
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_invertDisplay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_variousScroll
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawBitmap
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawFastHLine_drawFastVLine
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawPixel
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_drawChar_drawNum
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_8x16
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_drawString_6x8
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[62]"></a>test_dim</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, main.o(.text.test_dim))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = test_dim &rArr; BMD31M090_dim &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_dim
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>test_drawBitmap</STRONG> (Thumb, 512 bytes, Stack size 40 bytes, main.o(.text.test_drawBitmap))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = test_drawBitmap &rArr; BMD31M090_display &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawBitmap
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>test_drawFastHLine_drawFastVLine</STRONG> (Thumb, 628 bytes, Stack size 56 bytes, main.o(.text.test_drawFastHLine_drawFastVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = test_drawFastHLine_drawFastVLine &rArr; BMD31M090_display &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawFastVLine
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawFastHLine
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5d]"></a>test_drawPixel</STRONG> (Thumb, 308 bytes, Stack size 48 bytes, main.o(.text.test_drawPixel))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = test_drawPixel &rArr; BMD31M090_display &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawPixel
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>test_drawString_6x8</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, main.o(.text.test_drawString_6x8))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = test_drawString_6x8 &rArr; BMD31M090_drawString &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setFont
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>test_drawString_8x16</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, main.o(.text.test_drawString_8x16))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = test_drawString_8x16 &rArr; BMD31M090_drawString &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setFont
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>test_drawString_drawChar_drawNum</STRONG> (Thumb, 232 bytes, Stack size 40 bytes, main.o(.text.test_drawString_drawChar_drawNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = test_drawString_drawChar_drawNum &rArr; BMD31M090_drawNum &rArr; BMD31M090_drawChar &rArr; BMD31M090_setPixelRow &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawNum
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawChar
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_drawString
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_setFont
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_display
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_clearDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>test_invertDisplay</STRONG> (Thumb, 264 bytes, Stack size 24 bytes, main.o(.text.test_invertDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = test_invertDisplay &rArr; BMD31M090_invertDisplay &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_invertDisplay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>test_variousScroll</STRONG> (Thumb, 428 bytes, Stack size 24 bytes, main.o(.text.test_variousScroll))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = test_variousScroll &rArr; BMD31M090_startScrollLeft &rArr; I2CMaster_Write &rArr; I2CMaster_Start &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_stopScroll
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollLeft
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BMD31M090_startScrollRight
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[70]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[71]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[72]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[26]"></a>BootProcess</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, startup_ht32f5xxxx_03.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_ht32f5xxxx_03.o(RESET)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
