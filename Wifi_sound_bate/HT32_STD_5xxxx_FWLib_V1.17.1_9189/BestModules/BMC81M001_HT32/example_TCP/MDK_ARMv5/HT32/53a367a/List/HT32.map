Component: Arm Compiler for Embedded 6.23 Tool: armlink [5f102400]

==============================================================================

Section Cross References

    main.o(.text.main) refers to ht32_retarget.o(.text.RETARGET_Configuration) for RETARGET_Configuration
    main.o(.text.main) refers to bmc81m001.o(.text.BMC81M001_Init) for BMC81M001_Init
    main.o(.text.main) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    main.o(.text.main) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_Init) for BMV31T001_Init
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_setPower) for BMV31T001_setPower
    main.o(.text.main) refers to delay.o(.text.delay_ms) for delay_ms
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_setVolume) for BMV31T001_setVolume
    main.o(.text.main) refers to printf6.o(i.__0printf$6) for __2printf
    main.o(.text.main) refers to bmc81m001.o(.text.BMC81M001_connectToAP) for BMC81M001_connectToAP
    main.o(.text.main) refers to bmc81m001.o(.text.BMC81M001_connectTCP) for BMC81M001_connectTCP
    main.o(.text.main) refers to puts.o(i.puts) for puts
    main.o(.text.main) refers to bmc81m001.o(.text.BMC81M001_writeDataTcp) for BMC81M001_writeDataTcp
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_playVoice) for BMV31T001_playVoice
    main.o(.text.main) refers to malloc.o(i.free) for free
    main.o(.text.main) refers to bmc81m001.o(.text.BMC81M001_readDataTcp) for BMC81M001_readDataTcp
    main.o(.text.main) refers to strlen.o(.text) for strlen
    main.o(.text.main) refers to malloc.o(i.malloc) for malloc
    main.o(.text.main) refers to strcmp.o(.text) for strcmp
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_isPlaying) for BMV31T001_isPlaying
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_playStop) for BMV31T001_playStop
    main.o(.text.main) refers to main.o(.text.rtc) for rtc
    main.o(.text.main) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.main) refers to main.o(.data.readDataBuff) for readDataBuff
    main.o(.text.main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.remove_newlines_char) refers to strlen.o(.text) for strlen
    main.o(.text.remove_newlines_char) refers to malloc.o(i.malloc) for malloc
    main.o(.ARM.exidx.text.remove_newlines_char) refers to main.o(.text.remove_newlines_char) for [Anonymous Symbol]
    main.o(.text._delay) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    main.o(.text._delay) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.ARM.exidx.text._delay) refers to main.o(.text._delay) for [Anonymous Symbol]
    main.o(.text.rtc) refers to main.o(.text.Time_Regulate) for Time_Regulate
    main.o(.text.rtc) refers to printf6.o(i.__0printf$6) for __2printf
    main.o(.text.rtc) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    main.o(.text.rtc) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    main.o(.text.rtc) refers to strlen.o(.text) for strlen
    main.o(.text.rtc) refers to bmc81m001.o(.text.BMC81M001_writeDataTcp) for BMC81M001_writeDataTcp
    main.o(.text.rtc) refers to puts.o(i.puts) for puts
    main.o(.text.rtc) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.text.rtc) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.ARM.exidx.text.rtc) refers to main.o(.text.rtc) for [Anonymous Symbol]
    main.o(.text.Time_Regulate) refers to puts.o(i.puts) for puts
    main.o(.text.Time_Regulate) refers to bmc81m001.o(.text.BMC81M001_writeDataTcp) for BMC81M001_writeDataTcp
    main.o(.text.Time_Regulate) refers to main.o(.text.ScanUnsignedDecimal) for ScanUnsignedDecimal
    main.o(.text.Time_Regulate) refers to printf6.o(i.__0printf$6) for __2printf
    main.o(.text.Time_Regulate) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Time_Regulate) refers to main.o(.text.Time_Regulate) for [Anonymous Symbol]
    main.o(.text.Time_Display) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    main.o(.text.Time_Display) refers to printf6.o(i.__0printf$6) for __2printf
    main.o(.text.Time_Display) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.Time_Display) refers to main.o(.text.Time_Display) for [Anonymous Symbol]
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit) for PWRCU_DeInit
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig) for RTC_LSESMConfig
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_rtc.o(.text.RTC_LSECmd) for RTC_LSECmd
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for CKCU_GetClockReadyStatus
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig) for RTC_ClockSourceConfig
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_rtc.o(.text.RTC_IntConfig) for RTC_IntConfig
    main.o(.text.RTC_Configuration) refers to ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler) for RTC_SetPrescaler
    main.o(.ARM.exidx.text.RTC_Configuration) refers to main.o(.text.RTC_Configuration) for [Anonymous Symbol]
    main.o(.text.ScanUnsignedDecimal) refers to printf6.o(i.__0printf$6) for __2printf
    main.o(.text.ScanUnsignedDecimal) refers to malloc.o(i.free) for free
    main.o(.text.ScanUnsignedDecimal) refers to bmc81m001.o(.text.BMC81M001_readDataTcp) for BMC81M001_readDataTcp
    main.o(.text.ScanUnsignedDecimal) refers to strlen.o(.text) for strlen
    main.o(.text.ScanUnsignedDecimal) refers to malloc.o(i.malloc) for malloc
    main.o(.text.ScanUnsignedDecimal) refers to strspn.o(.text) for strspn
    main.o(.text.ScanUnsignedDecimal) refers to atoi.o(.text) for atoi
    main.o(.text.ScanUnsignedDecimal) refers to main.o(.data.readDataBuff) for readDataBuff
    main.o(.ARM.exidx.text.ScanUnsignedDecimal) refers to main.o(.text.ScanUnsignedDecimal) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.ARM.exidx.text.NMI_Handler) refers to ht32f5xxxx_01_it.o(.text.NMI_Handler) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.text.HardFault_Handler) refers to ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.ARM.exidx.text.HardFault_Handler) refers to ht32f5xxxx_01_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.ARM.exidx.text.SVC_Handler) refers to ht32f5xxxx_01_it.o(.text.SVC_Handler) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.ARM.exidx.text.PendSV_Handler) refers to ht32f5xxxx_01_it.o(.text.PendSV_Handler) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_selSerial) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.ARM.exidx.text.BMC81M001_selSerial) refers to bmc81m001.o(.text.BMC81M001_selSerial) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_Init) refers to uart_module.o(.text.UARTM_Init) for UARTM_Init
    bmc81m001.o(.text.BMC81M001_Init) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.ARM.exidx.text.BMC81M001_Init) refers to bmc81m001.o(.text.BMC81M001_Init) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_connectToAP) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_connectToAP) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_connectToAP) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_connectToAP) refers to bmc81m001.o(.rodata..L__const.BMC81M001_connectToAP.cmd) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_connectToAP) refers to bmc81m001.o(.text.BMC81M001_connectToAP) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.text.BMC81M001_readBytes) for BMC81M001_readBytes
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.text.BMC81M001_writeBytes) for BMC81M001_writeBytes
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to strstr.o(.text) for strstr
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.bss.uselessBuff) for uselessBuff
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.bss.BMC81M001_Response) for BMC81M001_Response
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_sendATCommand) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_arrayAdd) refers to strlen.o(.text) for strlen
    bmc81m001.o(.ARM.exidx.text.BMC81M001_arrayAdd) refers to bmc81m001.o(.text.BMC81M001_arrayAdd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to bmc81m001.o(.rodata..L__const.BMC81M001_connectTCP.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_connectTCP) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_connectTCP) refers to bmc81m001.o(.text.BMC81M001_connectTCP) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to bmc81m001.o(.rodata..L__const.BMC81M001_writeDataTcp.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeDataTcp) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.ARM.exidx.text.BMC81M001_writeDataTcp) refers to bmc81m001.o(.text.BMC81M001_writeDataTcp) for [Anonymous Symbol]
    bmc81m001.o(.text._BMC81M001_delay) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text._BMC81M001_delay) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.ARM.exidx.text._BMC81M001_delay) refers to bmc81m001.o(.text._BMC81M001_delay) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to uart_module.o(.text.UARTM_GetReadBufferLength) for UARTM_GetReadBufferLength
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to bmc81m001.o(.text.BMC81M001_readBytes) for BMC81M001_readBytes
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to strstr.o(.text) for strstr
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to strchr.o(.text) for strchr
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to bmc81m001.o(.bss.BMC81M001_Response) for BMC81M001_Response
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.text.BMC81M001_readDataTcp) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.ARM.exidx.text.BMC81M001_readDataTcp) refers to bmc81m001.o(.text.BMC81M001_readDataTcp) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_clearResponse) refers to memseta.o(.text) for __aeabi_memclr
    bmc81m001.o(.text.BMC81M001_clearResponse) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.ARM.exidx.text.BMC81M001_clearResponse) refers to bmc81m001.o(.text.BMC81M001_clearResponse) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_readBytes) refers to strstr.o(.text) for strstr
    bmc81m001.o(.text.BMC81M001_readBytes) refers to uart_module.o(.text.UARTM_GetReadBufferLength) for UARTM_GetReadBufferLength
    bmc81m001.o(.text.BMC81M001_readBytes) refers to uart_module.o(.text.UARTM_ReadByte) for UARTM_ReadByte
    bmc81m001.o(.text.BMC81M001_readBytes) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_readBytes) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text.BMC81M001_readBytes) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.text.BMC81M001_readBytes) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.text.BMC81M001_readBytes) refers to bmc81m001.o(.bss.BMC81M001_Response) for BMC81M001_Response
    bmc81m001.o(.text.BMC81M001_readBytes) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_readBytes) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.ARM.exidx.text.BMC81M001_readBytes) refers to bmc81m001.o(.text.BMC81M001_readBytes) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdCLIENTID) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdUSERNAME) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdPASSWORD) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_configMqtt) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_configMqtt) refers to bmc81m001.o(.text.BMC81M001_configMqtt) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setPublishTopic) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_setPublishTopic) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_setPublishTopic) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_setPublishTopic) refers to bmc81m001.o(.rodata..L__const.BMC81M001_setTopic.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setPublishTopic) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_setPublishTopic) refers to bmc81m001.o(.text.BMC81M001_setPublishTopic) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setSubscribetopic) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_setSubscribetopic) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_setSubscribetopic) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_setSubscribetopic) refers to bmc81m001.o(.rodata..L__const.BMC81M001_setTopic.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setSubscribetopic) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_setSubscribetopic) refers to bmc81m001.o(.text.BMC81M001_setSubscribetopic) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setTopic) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_setTopic) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_setTopic) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_setTopic) refers to bmc81m001.o(.rodata..L__const.BMC81M001_setTopic.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_setTopic) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_setTopic) refers to bmc81m001.o(.text.BMC81M001_setTopic) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeByte) refers to memcpya.o(.text) for __aeabi_memcpy4
    bmc81m001.o(.text.BMC81M001_writeByte) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_writeByte) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    bmc81m001.o(.text.BMC81M001_writeByte) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_writeByte) refers to bmc81m001.o(.rodata..L__const.BMC81M001_writeByte.cmd) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeByte) refers to bmc81m001.o(.rodata.str1.1) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text.BMC81M001_writeByte) refers to bmc81m001.o(.text.BMC81M001_writeByte) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_readIotData) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_readIotData) refers to uart_module.o(.text.UARTM_GetReadBufferLength) for UARTM_GetReadBufferLength
    bmc81m001.o(.text.BMC81M001_readIotData) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text.BMC81M001_readIotData) refers to strstr.o(.text) for strstr
    bmc81m001.o(.text.BMC81M001_readIotData) refers to uart_module.o(.text.UARTM_ReadByte) for UARTM_ReadByte
    bmc81m001.o(.text.BMC81M001_readIotData) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_readIotData) refers to bmc81m001.o(.bss.BMC81M001_Response) for BMC81M001_Response
    bmc81m001.o(.text.BMC81M001_readIotData) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.text.BMC81M001_readIotData) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.text.BMC81M001_readIotData) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.text.BMC81M001_readIotData) refers to bmc81m001.o(.bss.OneNetReciveBuff) for OneNetReciveBuff
    bmc81m001.o(.ARM.exidx.text.BMC81M001_readIotData) refers to bmc81m001.o(.text.BMC81M001_readIotData) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_arrayFind) refers to strlen.o(.text) for strlen
    bmc81m001.o(.ARM.exidx.text.BMC81M001_arrayFind) refers to bmc81m001.o(.text.BMC81M001_arrayFind) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to strlen.o(.text) for strlen
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to uart_module.o(.text.UARTM_Write) for UARTM_Write
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to bmc81m001.o(.data.gBMC81M001_SERIAL) for gBMC81M001_SERIAL
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to bmc81m001.o(.bss.OneNetReciveBuff) for OneNetReciveBuff
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.text.BMC81M001_writeBytes) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.ARM.exidx.text.BMC81M001_writeBytes) refers to bmc81m001.o(.text.BMC81M001_writeBytes) for [Anonymous Symbol]
    bmc81m001.o(.text.BMC81M001_reset) refers to bmc81m001.o(.text.BMC81M001_sendATCommand) for BMC81M001_sendATCommand
    bmc81m001.o(.text.BMC81M001_reset) refers to memseta.o(.text) for __aeabi_memclr4
    bmc81m001.o(.text.BMC81M001_reset) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    bmc81m001.o(.text.BMC81M001_reset) refers to bmc81m001.o(.bss.BMC81M001_Response) for BMC81M001_Response
    bmc81m001.o(.text.BMC81M001_reset) refers to bmc81m001.o(.bss.resLength) for resLength
    bmc81m001.o(.text.BMC81M001_reset) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    bmc81m001.o(.ARM.exidx.text.BMC81M001_reset) refers to bmc81m001.o(.text.BMC81M001_reset) for [Anonymous Symbol]
    bmc81m001.o(.ARM.exidx.text._BMC81M001_clearBuf) refers to bmc81m001.o(.text._BMC81M001_clearBuf) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    i2c_master.o(.text.I2CMaster_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for I2C_Init
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for I2C_IntConfig
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd) for I2C_CombFilterCmd
    i2c_master.o(.text.I2CMaster_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig) for I2C_SequentialFilterConfig
    i2c_master.o(.text.I2CMaster_Init) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_Init) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    i2c_master.o(.ARM.exidx.text.I2CMaster_Init) refers to i2c_master.o(.text.I2CMaster_Init) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_Write) refers to i2c_master.o(.text.I2CMaster_Start) for I2CMaster_Start
    i2c_master.o(.ARM.exidx.text.I2CMaster_Write) refers to i2c_master.o(.text.I2CMaster_Write) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_Start) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    i2c_master.o(.text.I2CMaster_Start) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_master.o(.text.I2CMaster_Start) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_master.o(.text.I2CMaster_Start) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_master.o(.text.I2CMaster_Start) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for I2C_IntConfig
    i2c_master.o(.text.I2CMaster_Start) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_master.o(.text.I2CMaster_Start) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_Start) refers to i2c_master.o(.text.I2CMaster_Start) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_Read) refers to i2c_master.o(.text.I2CMaster_Start) for I2CMaster_Start
    i2c_master.o(.ARM.exidx.text.I2CMaster_Read) refers to i2c_master.o(.text.I2CMaster_Read) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_WriteRead) refers to i2c_master.o(.text.I2CMaster_Start) for I2CMaster_Start
    i2c_master.o(.ARM.exidx.text.I2CMaster_WriteRead) refers to i2c_master.o(.text.I2CMaster_WriteRead) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_WriteStopRead) refers to i2c_master.o(.text.I2CMaster_Start) for I2CMaster_Start
    i2c_master.o(.ARM.exidx.text.I2CMaster_WriteStopRead) refers to i2c_master.o(.text.I2CMaster_WriteStopRead) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_GetStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for I2C_IntConfig
    i2c_master.o(.text.I2CMaster_GetStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_master.o(.text.I2CMaster_GetStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_master.o(.text.I2CMaster_GetStatus) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_GetStatus) refers to i2c_master.o(.text.I2CMaster_GetStatus) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_GetRxIndex) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_GetRxIndex) refers to i2c_master.o(.text.I2CMaster_GetRxIndex) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_UpdateRxLength) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_UpdateRxLength) refers to i2c_master.o(.text.I2CMaster_UpdateRxLength) for [Anonymous Symbol]
    i2c_master.o(.text.I2C0_IRQHandler) refers to i2c_master.o(.text.I2CMaster_IRQHandler) for I2CMaster_IRQHandler
    i2c_master.o(.ARM.exidx.text.I2C0_IRQHandler) refers to i2c_master.o(.text.I2C0_IRQHandler) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_ReadRegister) for I2C_ReadRegister
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for I2C_ReceiveData
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for I2C_AckCmd
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for I2C_IntConfig
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_master.o(.text.I2CMaster_IRQHandler) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_IRQHandler) refers to i2c_master.o(.text.I2CMaster_IRQHandler) for [Anonymous Symbol]
    i2c_master.o(.text.I2C1_IRQHandler) refers to i2c_master.o(.text.I2CMaster_IRQHandler) for I2CMaster_IRQHandler
    i2c_master.o(.ARM.exidx.text.I2C1_IRQHandler) refers to i2c_master.o(.text.I2C1_IRQHandler) for [Anonymous Symbol]
    i2c_master.o(.text._I2CMaster_DynamicTimeout) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_master.o(.text._I2CMaster_DynamicTimeout) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text._I2CMaster_DynamicTimeout) refers to i2c_master.o(.text._I2CMaster_DynamicTimeout) for [Anonymous Symbol]
    i2c_master.o(.text.I2CMaster_TimeoutHandler) refers to i2c_master.o(.bss.gI2CMasterState) for [Anonymous Symbol]
    i2c_master.o(.ARM.exidx.text.I2CMaster_TimeoutHandler) refers to i2c_master.o(.text.I2CMaster_TimeoutHandler) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_Init) refers to ht32_usbd_class.o(.text.Buffer_Init) for Buffer_Init
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig) for USART_TXRXTLConfig
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue) for USART_SetTimeOutValue
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for USART_IntConfig
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    uart_module.o(.text.UARTM_Init) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    uart_module.o(.text.UARTM_Init) refers to uart_module.o(.bss.gUARTModuleState) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_Init) refers to uart_module.o(.bss.guUART_TxBuffer) for guUART_TxBuffer
    uart_module.o(.text.UARTM_Init) refers to uart_module.o(.bss.gUART_Tx) for gUART_Tx
    uart_module.o(.text.UARTM_Init) refers to uart_module.o(.bss.guUART_RxBuffer) for guUART_RxBuffer
    uart_module.o(.text.UARTM_Init) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text.UARTM_Init) refers to uart_module.o(.text.UARTM_Init) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_WriteByte) refers to ht32_usbd_class.o(.text.Buffer_WriteByte) for Buffer_WriteByte
    uart_module.o(.text.UARTM_WriteByte) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for USART_IntConfig
    uart_module.o(.text.UARTM_WriteByte) refers to uart_module.o(.bss.gUART_Tx) for gUART_Tx
    uart_module.o(.text.UARTM_WriteByte) refers to uart_module.o(.bss.gUARTModuleState) for [Anonymous Symbol]
    uart_module.o(.ARM.exidx.text.UARTM_WriteByte) refers to uart_module.o(.text.UARTM_WriteByte) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_Write) refers to ht32_usbd_class.o(.text.Buffer_GetLength) for Buffer_GetLength
    uart_module.o(.text.UARTM_Write) refers to ht32_usbd_class.o(.text.Buffer_Write) for Buffer_Write
    uart_module.o(.text.UARTM_Write) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for USART_IntConfig
    uart_module.o(.text.UARTM_Write) refers to uart_module.o(.bss.gUART_Tx) for gUART_Tx
    uart_module.o(.text.UARTM_Write) refers to uart_module.o(.bss.gUARTModuleState) for [Anonymous Symbol]
    uart_module.o(.ARM.exidx.text.UARTM_Write) refers to uart_module.o(.text.UARTM_Write) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_ReadByte) refers to ht32_usbd_class.o(.text.Buffer_ReadByte) for Buffer_ReadByte
    uart_module.o(.text.UARTM_ReadByte) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text.UARTM_ReadByte) refers to uart_module.o(.text.UARTM_ReadByte) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_Read) refers to ht32_usbd_class.o(.text.Buffer_Read) for Buffer_Read
    uart_module.o(.text.UARTM_Read) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text.UARTM_Read) refers to uart_module.o(.text.UARTM_Read) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_GetReadBufferLength) refers to ht32_usbd_class.o(.text.Buffer_GetLength) for Buffer_GetLength
    uart_module.o(.text.UARTM_GetReadBufferLength) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text.UARTM_GetReadBufferLength) refers to uart_module.o(.text.UARTM_GetReadBufferLength) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_GetWriteBufferLength) refers to ht32_usbd_class.o(.text.Buffer_GetLength) for Buffer_GetLength
    uart_module.o(.text.UARTM_GetWriteBufferLength) refers to uart_module.o(.bss.gUART_Tx) for gUART_Tx
    uart_module.o(.ARM.exidx.text.UARTM_GetWriteBufferLength) refers to uart_module.o(.text.UARTM_GetWriteBufferLength) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_IsTxFinished) refers to uart_module.o(.bss.gUARTModuleState) for [Anonymous Symbol]
    uart_module.o(.ARM.exidx.text.UARTM_IsTxFinished) refers to uart_module.o(.text.UARTM_IsTxFinished) for [Anonymous Symbol]
    uart_module.o(.text.UARTM_DiscardReadBuffer) refers to ht32_usbd_class.o(.text.Buffer_Discard) for Buffer_Discard
    uart_module.o(.text.UARTM_DiscardReadBuffer) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text.UARTM_DiscardReadBuffer) refers to uart_module.o(.text.UARTM_DiscardReadBuffer) for [Anonymous Symbol]
    uart_module.o(.text.USART0_IRQHandler) refers to uart_module.o(.text._UARTM_IRQHandler) for _UARTM_IRQHandler
    uart_module.o(.ARM.exidx.text.USART0_IRQHandler) refers to uart_module.o(.text.USART0_IRQHandler) for [Anonymous Symbol]
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32_usbd_class.o(.text.Buffer_isEmpty) for Buffer_isEmpty
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for USART_IntConfig
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32_usbd_class.o(.text.Buffer_ReadByte) for Buffer_ReadByte
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32f5xxxx_usart.o(.text.USART_ClearFlag) for USART_ClearFlag
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus) for USART_GetFIFOStatus
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32_usbd_class.o(.text.Buffer_WriteByte) for Buffer_WriteByte
    uart_module.o(.text._UARTM_IRQHandler) refers to ht32f5xxxx_usart.o(.text.USART_GetIntStatus) for USART_GetIntStatus
    uart_module.o(.text._UARTM_IRQHandler) refers to uart_module.o(.bss.gUARTModuleState) for [Anonymous Symbol]
    uart_module.o(.text._UARTM_IRQHandler) refers to uart_module.o(.bss.gUART_Tx) for gUART_Tx
    uart_module.o(.text._UARTM_IRQHandler) refers to uart_module.o(.bss.gUART_Rx) for gUART_Rx
    uart_module.o(.ARM.exidx.text._UARTM_IRQHandler) refers to uart_module.o(.text._UARTM_IRQHandler) for [Anonymous Symbol]
    uart_module.o(.text.USART1_IRQHandler) refers to uart_module.o(.text._UARTM_IRQHandler) for _UARTM_IRQHandler
    uart_module.o(.ARM.exidx.text.USART1_IRQHandler) refers to uart_module.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    uart_module.o(.text.UART0_UART2_IRQHandler) refers to uart_module.o(.text._UARTM_IRQHandler) for _UARTM_IRQHandler
    uart_module.o(.ARM.exidx.text.UART0_UART2_IRQHandler) refers to uart_module.o(.text.UART0_UART2_IRQHandler) for [Anonymous Symbol]
    uart_module.o(.text.UART1_UART3_IRQHandler) refers to uart_module.o(.text._UARTM_IRQHandler) for _UARTM_IRQHandler
    uart_module.o(.ARM.exidx.text.UART1_UART3_IRQHandler) refers to uart_module.o(.text.UART1_UART3_IRQHandler) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_module.o(.text.SPIAPI_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for SPI_Init
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for SPI_SELOutputCmd
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi_module.o(.text.SPIAPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for SPI_IntConfig
    spi_module.o(.text.SPIAPI_Init) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.text.SPIAPI_Init) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    spi_module.o(.ARM.exidx.text.SPIAPI_Init) refers to spi_module.o(.text.SPIAPI_Init) for [Anonymous Symbol]
    spi_module.o(.text._SPIAPI_InitAPIParameter) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text._SPIAPI_InitAPIParameter) refers to spi_module.o(.text._SPIAPI_InitAPIParameter) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_WriteRead) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_module.o(.text.SPIAPI_WriteRead) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for SPI_IntConfig
    spi_module.o(.text.SPIAPI_WriteRead) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text.SPIAPI_WriteRead) refers to spi_module.o(.text.SPIAPI_WriteRead) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_GetWriteBufferIndex) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text.SPIAPI_GetWriteBufferIndex) refers to spi_module.o(.text.SPIAPI_GetWriteBufferIndex) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_GetReadBufferIndex) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text.SPIAPI_GetReadBufferIndex) refers to spi_module.o(.text.SPIAPI_GetReadBufferIndex) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_GetStatus) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text.SPIAPI_GetStatus) refers to spi_module.o(.text.SPIAPI_GetStatus) for [Anonymous Symbol]
    spi_module.o(.text._SPIAPI_IsRxFinish) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text._SPIAPI_IsRxFinish) refers to spi_module.o(.text._SPIAPI_IsRxFinish) for [Anonymous Symbol]
    spi_module.o(.text._SPIAPI_IsTxFinish) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text._SPIAPI_IsTxFinish) refers to spi_module.o(.text._SPIAPI_IsTxFinish) for [Anonymous Symbol]
    spi_module.o(.text.SPIAPI_ClearStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_module.o(.text.SPIAPI_ClearStatus) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text.SPIAPI_ClearStatus) refers to spi_module.o(.text.SPIAPI_ClearStatus) for [Anonymous Symbol]
    spi_module.o(.text.SPI0_IRQHandler) refers to spi_module.o(.text._SPIAPI_IRQHandler) for _SPIAPI_IRQHandler
    spi_module.o(.ARM.exidx.text.SPI0_IRQHandler) refers to spi_module.o(.text.SPI0_IRQHandler) for [Anonymous Symbol]
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for SPI_IntConfig
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus) for SPI_GetFIFOStatus
    spi_module.o(.text._SPIAPI_IRQHandler) refers to ht32f5xxxx_spi.o(.text.SPI_ClearFlag) for SPI_ClearFlag
    spi_module.o(.text._SPIAPI_IRQHandler) refers to spi_module.o(.bss.gSPIAPIState) for gSPIAPIState
    spi_module.o(.ARM.exidx.text._SPIAPI_IRQHandler) refers to spi_module.o(.text._SPIAPI_IRQHandler) for [Anonymous Symbol]
    spi_module.o(.text.SPI1_IRQHandler) refers to spi_module.o(.text._SPIAPI_IRQHandler) for _SPIAPI_IRQHandler
    spi_module.o(.ARM.exidx.text.SPI1_IRQHandler) refers to spi_module.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    spi_module.o(.text.QSPI_IRQHandler) refers to spi_module.o(.text._SPIAPI_IRQHandler) for _SPIAPI_IRQHandler
    spi_module.o(.ARM.exidx.text.QSPI_IRQHandler) refers to spi_module.o(.text.QSPI_IRQHandler) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_reset) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.ARM.exidx.text.BMV31T001_reset) refers to bmv31t001.o(.text.BMV31T001_reset) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    bmv31t001.o(.text.BMV31T001_Init) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._flashAddr) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_Init) refers to bmv31t001.o(.text.BMV31T001_Init) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_setVolume) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_setVolume) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setVolume) refers to bmv31t001.o(.text.BMV31T001_setVolume) for [Anonymous Symbol]
    bmv31t001.o(.text.writeCmd) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.writeCmd) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.writeCmd) refers to bmv31t001.o(.text.writeCmd) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playVoice) refers to bmv31t001.o(.text.writeCmd) for writeCmd
    bmv31t001.o(.text.BMV31T001_playVoice) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playVoice) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playVoice) refers to bmv31t001.o(.text.BMV31T001_playVoice) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playSentence) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playSentence) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playSentence) refers to bmv31t001.o(.text.BMV31T001_playSentence) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playStop) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playStop) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playStop) refers to bmv31t001.o(.text.BMV31T001_playStop) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playPause) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playPause) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playPause) refers to bmv31t001.o(.text.BMV31T001_playPause) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playContinue) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playContinue) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playContinue) refers to bmv31t001.o(.text.BMV31T001_playContinue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playRepeat) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playRepeat) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playRepeat) refers to bmv31t001.o(.text.BMV31T001_playRepeat) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isPlaying) refers to bmv31t001.o(.text.BMV31T001_isPlaying) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to delay.o(.text.Get_Sys_ms) for Get_Sys_ms
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.last_tick) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.lastKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.step) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_scanKey) refers to bmv31t001.o(.text.BMV31T001_scanKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_isKeyAction) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isKeyAction) refers to bmv31t001.o(.text.BMV31T001_isKeyAction) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_readKeyValue) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_readKeyValue) refers to bmv31t001.o(.text.BMV31T001_readKeyValue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_setPower) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setPower) refers to bmv31t001.o(.text.BMV31T001_setPower) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setLED) refers to bmv31t001.o(.text.BMV31T001_setLED) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_initAudioUpdate) refers to usb_vcp.o(.text.USBSerial_begin) for USBSerial_begin
    bmv31t001.o(.ARM.exidx.text.BMV31T001_initAudioUpdate) refers to bmv31t001.o(.text.BMV31T001_initAudioUpdate) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_isUpdateBegin) refers to usb_vcp.o(.text.USBSerial_available) for USBSerial_available
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isUpdateBegin) refers to bmv31t001.o(.text.BMV31T001_isUpdateBegin) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_write_byte) for USBSerial_write_byte
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_available) for USBSerial_available
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_readBytes) for USBSerial_readBytes
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.rxBuffer) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.BMV31T001_executeUpdate.dataLength) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.rodata.crc_table) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.dataLength) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.programEntry.retransmissionTimes) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.ack.i) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for SPIFlashWriteEnable
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for SPIFlashWaitForWriteEnd
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashPageWrite) for SPIFlashPageWrite
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.sumDataCnt) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.remainder) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss._flashAddr) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.dummyClocks.i) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.sendData) for sendData
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.deviceSFDPBuf) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.switchSPIMode.correctFlag) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.switchSPIMode.retransmissionTimes) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.BMV31T001_executeUpdate) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for SPIFlashWriteEnable
    bmv31t001.o(.text.SPIFlashPageWrite) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for SPIFlashWaitForWriteEnd
    bmv31t001.o(.ARM.exidx.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashPageWrite) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashWriteEnable) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.SPIFlashWriteEnable) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashWaitForWriteEnd) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.SPIFlashWaitForWriteEnd) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for [Anonymous Symbol]
    bmv31t001.o(.text.sendData) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.sendData) refers to bmv31t001.o(.text.sendData) for [Anonymous Symbol]
    delay.o(.text.Get_Sys_ms) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.Get_Sys_ms) refers to delay.o(.text.Get_Sys_ms) for [Anonymous Symbol]
    delay.o(.text.Get_Sys_us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    delay.o(.text.Get_Sys_us) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.Get_Sys_us) refers to delay.o(.text.Get_Sys_us) for [Anonymous Symbol]
    delay.o(.text.SysTick_Handler) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.SysTick_Handler) refers to delay.o(.text.SysTick_Handler) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_us) refers to delay.o(.text.delay_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_ms) refers to delay.o(.text.delay_ms) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_1) refers to delay.o(.text.rand_0_1) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_3) refers to delay.o(.text.rand_0_3) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_7) refers to delay.o(.text.rand_0_7) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_15) refers to delay.o(.text.rand_0_15) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_31) refers to delay.o(.text.rand_0_31) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_63) refers to delay.o(.text.rand_0_63) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_127) refers to delay.o(.text.rand_0_127) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_MS) refers to delay.o(.text.delay_MS) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Init) refers to ht32_usbd_class.o(.text.Buffer_Init) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_ReadByte) refers to ht32_usbd_class.o(.text.Buffer_ReadByte) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_WriteByte) refers to ht32_usbd_class.o(.text.Buffer_WriteByte) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Read) refers to ht32_usbd_class.o(.text.Buffer_Read) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Write) refers to ht32_usbd_class.o(.text.Buffer_Write) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_isEmpty) refers to ht32_usbd_class.o(.text.Buffer_isEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_isFull) refers to ht32_usbd_class.o(.text.Buffer_isFull) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_GetLength) refers to ht32_usbd_class.o(.text.Buffer_GetLength) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Discard) refers to ht32_usbd_class.o(.text.Buffer_Discard) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.bss.gRingDataBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint3) for USBDClass_Endpoint3
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint2) for USBDClass_Endpoint2
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint1) for USBDClass_Endpoint1
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Request) for USBDClass_Request
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Reset) for USBDClass_Reset
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_MainRoutine) for USBDClass_MainRoutine
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Init) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.text.USBDClass_MainRoutine) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Reset) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Reset) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Reset) refers to ht32_usbd_class.o(.text.USBDClass_Reset) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Request) refers to ht32_usbd_class.o(.bss.USBDClassVCPLineCoding) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Request) refers to ht32_usbd_class.o(.text.USBDClass_Request) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint1) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint1) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint1) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint2) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint2) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for USBD_EPTReadOUTData
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.bss.gOutputDataBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint3) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_CDC_avilable) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USB_CDC_avilable) refers to ht32_usbd_class.o(.text.USB_CDC_avilable) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Serial_rx) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for USBD_EnableINT
    ht32_usbd_class.o(.text.USB_Serial_rx) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USB_Serial_rx) refers to ht32_usbd_class.o(.text.USB_Serial_rx) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Connected) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for USBDCore_GetStatus
    ht32_usbd_class.o(.ARM.exidx.text.USB_Connected) refers to ht32_usbd_class.o(.text.USB_Connected) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Configured) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for USBDCore_GetStatus
    ht32_usbd_class.o(.ARM.exidx.text.USB_Configured) refers to ht32_usbd_class.o(.text.USB_Configured) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.data.gpStringDesc) for gpStringDesc
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.rodata.guUSB_ConfnDesc) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.rodata.guUSB_DeviceDesc) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.ARM.exidx.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.text.USBDDesc_Init) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescLANGID) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescManufacture) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescProduct) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.data.guUSB_StringDescSerialNum) for [Anonymous Symbol]
    usb_init.o(.text.USBCKCU_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    usb_init.o(.ARM.exidx.text.USBCKCU_Configuration) refers to usb_init.o(.text.USBCKCU_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for CKCU_USBPLLInit
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for CKCU_USBPLLCmd
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for CKCU_GetClockReadyStatus
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for CKCU_USBClockConfig
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_descriptor.o(.text.USBDDesc_Init) for USBDDesc_Init
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_class.o(.text.USBDClass_Init) for USBDClass_Init
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_core.o(.text.USBDCore_Init) for USBDCore_Init
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.text.Suspend) for Suspend
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.bss.gUSBDriver) for gUSBDriver
    usb_init.o(.ARM.exidx.text.USB_Configuration) refers to usb_init.o(.text.USB_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for CKCU_USBPLLInit
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for CKCU_USBPLLCmd
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for CKCU_GetClockReadyStatus
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for CKCU_USBClockConfig
    usb_init.o(.ARM.exidx.text.USBPLL_Configuration) refers to usb_init.o(.text.USBPLL_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.Suspend) refers to usb_init.o(.data.gIsLowPowerAllowed) for gIsLowPowerAllowed
    usb_init.o(.text.Suspend) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.ARM.exidx.text.Suspend) refers to usb_init.o(.text.Suspend) for [Anonymous Symbol]
    usb_init.o(.text.USB_Serial) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    usb_init.o(.text.USB_Serial) refers to usb_init.o(.text.USB_Configuration) for USB_Configuration
    usb_init.o(.text.USB_Serial) refers to ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd) for USBD_DPpullupCmd
    usb_init.o(.text.USB_Serial) refers to ht32_usbd_core.o(.text.USBDCore_MainRoutine) for USBDCore_MainRoutine
    usb_init.o(.text.USB_Serial) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.ARM.exidx.text.USB_Serial) refers to usb_init.o(.text.USB_Serial) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_begin) refers to usb_init.o(.text.USB_Serial) for USB_Serial
    usb_vcp.o(.text.USBSerial_begin) refers to usb_vcp.o(.bss._hasBegun) for [Anonymous Symbol]
    usb_vcp.o(.ARM.exidx.text.USBSerial_begin) refers to usb_vcp.o(.text.USBSerial_begin) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_end) refers to usb_vcp.o(.bss._hasBegun) for [Anonymous Symbol]
    usb_vcp.o(.ARM.exidx.text.USBSerial_end) refers to usb_vcp.o(.text.USBSerial_end) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_available) refers to ht32_usbd_class.o(.text.USB_CDC_avilable) for USB_CDC_avilable
    usb_vcp.o(.ARM.exidx.text.USBSerial_available) refers to usb_vcp.o(.text.USBSerial_available) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_readBytes) refers to ht32_usbd_class.o(.text.USB_Serial_rx) for USB_Serial_rx
    usb_vcp.o(.ARM.exidx.text.USBSerial_readBytes) refers to usb_vcp.o(.text.USBSerial_readBytes) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USB_Connected) for USB_Connected
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USB_Configured) for USB_Configured
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for USBDClass_CDC_Tx
    usb_vcp.o(.ARM.exidx.text.USBSerial_write_byte) refers to usb_vcp.o(.text.USBSerial_write_byte) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USB_Connected) for USB_Connected
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USB_Configured) for USB_Configured
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for USBDClass_CDC_Tx
    usb_vcp.o(.ARM.exidx.text.USBSerial_write) refers to usb_vcp.o(.text.USBSerial_write) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    startup_ht32f5xxxx_03.o(RESET) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.NMI_Handler) for NMI_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.SVC_Handler) for SVC_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.PendSV_Handler) for PendSV_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to delay.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to spi_module.o(.text.QSPI_IRQHandler) for QSPI_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to i2c_master.o(.text.I2C0_IRQHandler) for I2C0_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to i2c_master.o(.text.I2C1_IRQHandler) for I2C1_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to spi_module.o(.text.SPI0_IRQHandler) for SPI0_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to spi_module.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to uart_module.o(.text.USART0_IRQHandler) for USART0_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to uart_module.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to uart_module.o(.text.UART0_UART2_IRQHandler) for UART0_UART2_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to uart_module.o(.text.UART1_UART3_IRQHandler) for UART1_UART3_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for SystemInit
    startup_ht32f5xxxx_03.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for USBD_Init
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init) refers to ht32_usbd_core.o(.text.USBDCore_Init) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for USBD_GetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for USBD_ClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for USBD_PowerOff
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for USBD_DeInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for USBD_EPTInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for USBD_EnableINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for USBD_EPTGetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for USBD_ReadSETUPData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for USBD_EPTClearHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for USBD_EPTClearDTG
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for USBD_EPTGetBufferLen
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for USBD_EPTSendSTALL
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for USBD_EPTClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for USBD_EPTReadOUTData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for USBD_GetEPTnINTNumber
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for USBD_EPTGetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for USBD_EPTSetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for USBD_SetAddress
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler) refers to ht32_usbd_core.o(.text.USBDCore_IRQHandler) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_MainRoutine) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for USBD_PowerUp
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine) refers to ht32_usbd_core.o(.text.USBDCore_MainRoutine) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend) refers to ht32_usbd_core.o(.text.USBDCore_IsSuspend) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature) refers to ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for USBD_RemoteWakeup
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup) refers to ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.data.Data) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.SDIV32) for SDIV32
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.UDIV32) for UDIV32
    ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.text.DIV32_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData2) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.bss.Rand_Get) for Rand_Get
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init) refers to ht32_cm0plus_misc.o(.text.Rand_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig) refers to ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler) refers to ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd) refers to ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue) refers to ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT) refers to ht32_cm0plus_misc.o(.text.RBIT) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.text.ADC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ht32f5xxxx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset) refers to ht32f5xxxx_adc.o(.text.ADC_Reset) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ht32f5xxxx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig) refers to ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData) refers to ht32f5xxxx_adc.o(.text.ADC_GetConversionData) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig) refers to ht32f5xxxx_adc.o(.text.ADC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit) refers to ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig) refers to ht32f5xxxx_adc.o(.text.ADC_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd) refers to ht32f5xxxx_adc.o(.text.ADC_VREFCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig) refers to ht32f5xxxx_adc.o(.text.ADC_VREFConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd) refers to ht32f5xxxx_adc.o(.text.ADC_MVDDACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AES_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit) refers to ht32f5xxxx_aes.o(.text.AES_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush) refers to ht32f5xxxx_aes.o(.text.AES_FIFOFlush) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd) refers to ht32f5xxxx_aes.o(.text.AES_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey) refers to ht32f5xxxx_aes.o(.text.AES_StartKey) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init) refers to ht32f5xxxx_aes.o(.text.AES_ECB_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig) refers to ht32f5xxxx_aes.o(.text.AES_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init) refers to ht32f5xxxx_aes.o(.text.AES_CBC_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init) refers to ht32f5xxxx_aes.o(.text.AES_CTR_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd) refers to ht32f5xxxx_aes.o(.text.AES_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData) refers to ht32f5xxxx_aes.o(.text.AES_SetInputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData) refers to ht32f5xxxx_aes.o(.text.AES_GetOutputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable) refers to ht32f5xxxx_aes.o(.text.AES_SetKeyTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable) refers to ht32f5xxxx_aes.o(.text.AES_SetVectorTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.text._AES_CryptData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputIndex) for gu32InputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.text.BFTM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit) refers to ht32f5xxxx_bftm.o(.text.BFTM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig) refers to ht32f5xxxx_bftm.o(.text.BFTM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag) refers to ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHSEGainMode) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetHSEGainMode) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit) refers to ht32f5xxxx_cmp.o(.text.CMP_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init) refers to ht32f5xxxx_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to ht32f5xxxx_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd) refers to ht32f5xxxx_cmp.o(.text.CMP_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag) refers to ht32f5xxxx_cmp.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue) refers to ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.text.CRC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to ht32f5xxxx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init) refers to ht32f5xxxx_crc.o(.text.CRC_Init) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process) refers to ht32f5xxxx_crc.o(.text.CRC_Process) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT) refers to ht32f5xxxx_crc.o(.text.CRC_CCITT) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16) refers to ht32f5xxxx_crc.o(.text.CRC_16) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32) refers to ht32f5xxxx_crc.o(.text.CRC_32) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.text.DAC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit) refers to ht32f5xxxx_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd) refers to ht32f5xxxx_dac.o(.text.DAC_OutBufCmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd) refers to ht32f5xxxx_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData) refers to ht32f5xxxx_dac.o(.text.DAC_SetData) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData) refers to ht32f5xxxx_dac.o(.text.DAC_GetOutData) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit) refers to ht32f5xxxx_div.o(.text.DIV_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32) refers to ht32f5xxxx_div.o(.text.DIV_Div32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.text.DIV_uDiv32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod) refers to ht32f5xxxx_div.o(.text.DIV_Mod) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero) refers to ht32f5xxxx_div.o(.text.DIV_IsDivByZero) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.text.EBI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit) refers to ht32f5xxxx_ebi.o(.text.EBI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit) refers to ht32f5xxxx_ebi.o(.text.EBI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus) refers to ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ht32f5xxxx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd) refers to ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState) refers to ht32f5xxxx_flash.o(.text.FLASH_SetWaitState) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode) refers to ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ht32f5xxxx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd) refers to ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase) refers to ht32f5xxxx_flash.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig) refers to ht32f5xxxx_flash.o(.text.FLASH_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag) refers to ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.GPIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock) refers to ht32f5xxxx_gpio.o(.text.GPIO_PinLock) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID) refers to ht32f5xxxx_gpio.o(.text.GPIO_GetID) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.AFIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._GPIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._AFIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to ht32f5xxxx_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to ht32f5xxxx_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress) refers to ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to ht32f5xxxx_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer) refers to ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.text.I2S_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit) refers to ht32f5xxxx_i2s.o(.text.I2S_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init) refers to ht32f5xxxx_i2s.o(.text.I2S_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd) refers to ht32f5xxxx_i2s.o(.text.I2S_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd) refers to ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd) refers to ht32f5xxxx_i2s.o(.text.I2S_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag) refers to ht32f5xxxx_i2s.o(.text.I2S_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.text.PDMA_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit) refers to ht32f5xxxx_pdma.o(.text.PDMA_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag) refers to ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ht32f5xxxx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd) refers to ht32f5xxxx_rtc.o(.text.RTC_LSECmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd) refers to ht32f5xxxx_rtc.o(.text.RTC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_OutConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_OutCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.text.SCI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit) refers to ht32f5xxxx_sci.o(.text.SCI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init) refers to ht32f5xxxx_sci.o(.text.SCI_Init) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit) refers to ht32f5xxxx_sci.o(.text.SCI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd) refers to ht32f5xxxx_sci.o(.text.SCI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ETUConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd) refers to ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData) refers to ht32f5xxxx_sci.o(.text.SCI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData) refers to ht32f5xxxx_sci.o(.text.SCI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd) refers to ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO) refers to ht32f5xxxx_sci.o(.text.SCI_OutputDIO) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig) refers to ht32f5xxxx_sci.o(.text.SCI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus) refers to ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag) refers to ht32f5xxxx_sci.o(.text.SCI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd) refers to ht32f5xxxx_sci.o(.text.SCI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit) refers to ht32f5xxxx_spi.o(.text.SPI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to ht32f5xxxx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue) refers to ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag) refers to ht32f5xxxx_spi.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELHTConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.text.TM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHPSCConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit) refers to ht32f5xxxx_tm.o(.text.TM_PwmInputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig) refers to ht32f5xxxx_tm.o(.text.TM_StiConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig) refers to ht32f5xxxx_tm.o(.text.TM_PrescalerConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_CounterModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig) refers to ht32f5xxxx_tm.o(.text.TM_DecoderConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF) refers to ht32f5xxxx_tm.o(.text.TM_ForcedOREF) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig) refers to ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_OutputModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd) refers to ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd) refers to ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig) refers to ht32f5xxxx_tm.o(.text.TM_MMSELConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd) refers to ht32f5xxxx_tm.o(.text.TM_TimSyncCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter) refers to ht32f5xxxx_tm.o(.text.TM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload) refers to ht32f5xxxx_tm.o(.text.TM_SetCounterReload) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig) refers to ht32f5xxxx_tm.o(.text.TM_CKDIVConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter) refers to ht32f5xxxx_tm.o(.text.TM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler) refers to ht32f5xxxx_tm.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent) refers to ht32f5xxxx_tm.o(.text.TM_GenerateEvent) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit) refers to ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_InternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig) refers to ht32f5xxxx_tm.o(.text.TM_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit) refers to ht32f5xxxx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init) refers to ht32f5xxxx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit) refers to ht32f5xxxx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to ht32f5xxxx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd) refers to ht32f5xxxx_usart.o(.text.USART_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd) refers to ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd) refers to ht32f5xxxx_usart.o(.text.USART_StickParityCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig) refers to ht32f5xxxx_usart.o(.text.USART_StickParityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to ht32f5xxxx_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig) refers to ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue) refers to ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset) refers to ht32f5xxxx_usart.o(.text.USART_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd) refers to ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler) refers to ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig) refers to ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485AADCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue) refers to ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockStructInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit) refers to ht32f5xxxx_usbd.o(.text.USBD_PreInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.bss.gIsFirstPowered) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReset) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.text.WDT_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit) refers to ht32f5xxxx_wdt.o(.text.WDT_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd) refers to ht32f5xxxx_wdt.o(.text.WDT_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_HaltConfig) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ResetCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart) refers to ht32f5xxxx_wdt.o(.text.WDT_Restart) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus) refers to ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_LockCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_SourceConfig) for [Anonymous Symbol]
    ht32_retarget.o(.text.RETARGET_Configuration) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for HT32F_DVB_COMInit
    ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration) refers to ht32_retarget.o(.text.RETARGET_Configuration) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text.__backspace) refers to ht32_retarget.o(.text.__backspace) for [Anonymous Symbol]
    ht32_retarget.o(.text._read) refers to ht32_serial.o(.text.SERIAL_GetChar) for SERIAL_GetChar
    ht32_retarget.o(.ARM.exidx.text._read) refers to ht32_retarget.o(.text._read) for [Anonymous Symbol]
    ht32_retarget.o(.text._write) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text._write) refers to ht32_retarget.o(.text._write) for [Anonymous Symbol]
    ht32_retarget.o(.text.putchar) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text.putchar) refers to ht32_retarget.o(.text.putchar) for [Anonymous Symbol]
    ht32_retarget.o(.text.fputc) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text.fputc) refers to ht32_retarget.o(.text.fputc) for [Anonymous Symbol]
    ht32_retarget.o(.text.fgetc) refers to ht32_serial.o(.text.SERIAL_GetChar) for SERIAL_GetChar
    ht32_retarget.o(.ARM.exidx.text.fgetc) refers to ht32_retarget.o(.text.fgetc) for [Anonymous Symbol]
    ht32_retarget.o(.text._ttywrch) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text._ttywrch) refers to ht32_retarget.o(.text._ttywrch) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text._sys_exit) refers to ht32_retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar) refers to ht32_serial.o(.text.SERIAL_PutChar) for [Anonymous Symbol]
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar) refers to ht32_serial.o(.text.SERIAL_GetChar) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.text.HT32F_DVB_LEDInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.text.HT32F_DVB_LEDOff) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.text.HT32F_DVB_LEDOn) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for GPIO_InputConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for AFIO_EXTISourceConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for EXTI_Init
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for EXTI_IntConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PINNum) for BUTTON_GPIO_PINNum
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn) for gEXTIn_IRQn
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit) refers to ht32_board.o(.text.HT32F_DVB_PBInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for GPIO_ReadInBit
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.text.HT32F_DVB_PBGetState) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for CKCU_GetClocksFrequency
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for TM_UpdateCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for TM_DeInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for TM_TimeBaseStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for TM_TimeBaseInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for TM_ClearFlag
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for TM_OutputStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for TM_OutputInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for TM_CHCCRPreloadConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for TM_CRRPreloadCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for TM_Cmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun) refers to ht32_board.o(.text.HT32F_DVB_BuzzerFun) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for TM_ChannelConfig
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for EBI_Init
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for EBI_Cmd
    ebi_lcd.o(.text.LCD_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Init) refers to ebi_lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Config) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    ebi_lcd.o(.text.LCD_Config) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Config) refers to ebi_lcd.o(.text.LCD_Config) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg) refers to ebi_lcd.o(.text.LCD_WriteReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_Clear) refers to ebi_lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg) refers to ebi_lcd.o(.text.LCD_ReadReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet) refers to ebi_lcd.o(.text.LCD_StarterSet) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior) refers to ebi_lcd.o(.text.LCD_WriteRAMPrior) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM) refers to ebi_lcd.o(.text.LCD_WriteRAM) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_BackColorSet) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet) refers to ebi_lcd.o(.text.LCD_BackColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_TextColorSet) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet) refers to ebi_lcd.o(.text.LCD_TextColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.rodata.ASCII_Font_Table) for ASCII_Font_Table
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw) refers to ebi_lcd.o(.text.LCD_CharDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff) refers to ebi_lcd.o(.text.LCD_DisplayOff) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn) refers to ebi_lcd.o(.text.LCD_DisplayOn) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for LCD_CharDisplay
    ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_StringLineDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_LineDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw) refers to ebi_lcd.o(.text.LCD_LineDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord) refers to ebi_lcd.o(.text.LCD_WriteRAMWord) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CircleDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw) refers to ebi_lcd.o(.text.LCD_CircleDraw) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_RectDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw) refers to ebi_lcd.o(.text.LCD_RectDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw) refers to ebi_lcd.o(.text.LCD_PicDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea) refers to ebi_lcd.o(.text.LCD_SetDisplayArea) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for I2C_Init
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init) refers to i2c_eeprom.o(.text.I2C_EEPROM_Init) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling) refers to i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for I2C_EEPROM_PageWrite
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for I2C_AckCmd
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for I2C_ReceiveData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for SPI_Init
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for SPI_SELOutputCmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init) refers to spi_flash.o(.text.SPI_FLASH_Init) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_SectorErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte) refers to spi_flash.o(.text.SPI_FLASH_SendByte) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_BlockErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_ChipErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_PageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy) refers to spi_flash.o(.text.SPI_FLASH_BufferWriteBy) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead) refers to spi_flash.o(.text.SPI_FLASH_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead) refers to spi_flash.o(.text.SPI_FLASH_BufferDualRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID) refers to spi_flash.o(.text.SPI_FLASH_ReadJEDECID) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus2) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable) refers to spi_flash.o(.text.SPI_FLASH_WriteDisable) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    puts.o(i.puts) refers to ht32_retarget.o(.text.fputc) for fputc
    puts.o(i.puts) refers to stdout.o(.data) for __stdout
    puts_e.o(.text) refers to ht32_retarget.o(.text.fputc) for fputc
    puts_e.o(.text) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to ht32_retarget.o(.text.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to ht32_retarget.o(.text.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to ht32_retarget.o(.text.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to ht32_retarget.o(.text.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to ht32_retarget.o(.text.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to ht32_retarget.o(.text.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to ht32_retarget.o(.text.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to ht32_retarget.o(.text.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to ht32_retarget.o(.text.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to ht32_retarget.o(.text.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to ht32_retarget.o(.text.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc.o(i.free) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc.o(i.malloc) refers to mvars.o(.data) for __microlib_freelist
    malloc.o(i.malloc) refers to startup_ht32f5xxxx_03.o(HEAP) for __heap_base
    mallocr.o(i.__free$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.__malloc$realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr.o(i.__malloc$realloc) refers to startup_ht32f5xxxx_03.o(HEAP) for __heap_base
    mallocr.o(i.__malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocr.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    mallocr.o(i.realloc) refers to mallocr.o(i.__free$realloc) for __free$realloc
    mallocr.o(i.realloc) refers to mallocr.o(i.internal_alloc) for internal_alloc
    mallocr.o(i.realloc) refers to mallocr.o(i.__malloc$realloc) for __malloc$realloc
    mallocr.o(i.realloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__aligned_malloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca.o(i.__aligned_malloc) refers to startup_ht32f5xxxx_03.o(HEAP) for __heap_base
    malloca.o(i.__free$memalign) refers to mvars.o(.data) for __microlib_freelist
    malloca.o(i.__malloc$memalign) refers to malloca.o(i.__aligned_malloc) for __aligned_malloc
    mallocra.o(i.__aligned_malloc$realloc) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__aligned_malloc$realloc) refers to startup_ht32f5xxxx_03.o(HEAP) for __heap_base
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__aligned_malloc$realloc) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra.o(i.__free$realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.__malloc$realloc$memalign) refers to mallocra.o(i.__aligned_malloc$realloc) for __aligned_malloc$realloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__free$realloc$memalign) for __free$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.internal_alloc) for internal_alloc
    mallocra.o(i.__realloc$memalign) refers to mallocra.o(i.__malloc$realloc$memalign) for __malloc$realloc$memalign
    mallocra.o(i.__realloc$memalign) refers to mvars.o(.data) for __microlib_freelist
    mallocra.o(i.internal_alloc) refers to memcpya.o(.text) for __aeabi_memcpy
    mallocra.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    atoi.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    atoi.o(.text) refers to strtol.o(.text) for strtol
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    strtol.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    strtol.o(.text) refers to _strtoul.o(.text) for _strtoul
    strtol.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    ctype_o.o(.text) refers to ctype_o.o(.constdata) for .constdata
    ctype_o.o(.constdata) refers to ctype_o.o(.constdata) for __ctype_table
    isalnum_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isalpha_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isblank_o.o(.text) refers to ctype_o.o(.constdata) for __ctype_table
    iscntrl_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isgraph_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    islower_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isprint_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    ispunct_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isspace_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isupper_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    isxdigit_o.o(.text) refers to ctype_o.o(.text) for __rt_ctype_table
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to errno.o(i.__aeabi_errno_addr) for __aeabi_errno_addr
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to depilogue.o(i.__ARM_clz) for __ARM_clz
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    depilogue.o(i.__ARM_clz) refers (Special) to iusefp.o(.text) for __I$use$fp


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.remove_newlines_char), (188 bytes).
    Removing main.o(.ARM.exidx.text.remove_newlines_char), (8 bytes).
    Removing main.o(.text._delay), (72 bytes).
    Removing main.o(.ARM.exidx.text._delay), (8 bytes).
    Removing main.o(.ARM.exidx.text.rtc), (8 bytes).
    Removing main.o(.ARM.exidx.text.Time_Regulate), (8 bytes).
    Removing main.o(.text.Time_Display), (64 bytes).
    Removing main.o(.ARM.exidx.text.Time_Display), (8 bytes).
    Removing main.o(.text.RTC_Configuration), (56 bytes).
    Removing main.o(.ARM.exidx.text.RTC_Configuration), (8 bytes).
    Removing main.o(.ARM.exidx.text.ScanUnsignedDecimal), (8 bytes).
    Removing main.o(.data.writeDataBuff), (10 bytes).
    Removing main.o(.bss.gwTimeDisplay), (4 bytes).
    Removing main.o(.bss.TimeReg), (4 bytes).
    Removing main.o(.bss.countdownTime), (4 bytes).
    Removing main.o(.rodata.voice_table), (10 bytes).
    Removing main.o(.data.volume), (1 bytes).
    Removing main.o(.bss.keycode), (1 bytes).
    Removing main.o(.bss.keyStatus), (1 bytes).
    Removing main.o(.bss.lastKeyStatus), (1 bytes).
    Removing main.o(.bss.playStatus), (1 bytes).
    Removing main.o(.bss.playNum), (1 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing ht32f5xxxx_01_it.o(.text), (0 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.NMI_Handler), (8 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing bmc81m001.o(.text), (0 bytes).
    Removing bmc81m001.o(.text.BMC81M001_selSerial), (20 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_selSerial), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_Init), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_connectToAP), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_sendATCommand), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_arrayAdd), (108 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_arrayAdd), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_connectTCP), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_writeDataTcp), (8 bytes).
    Removing bmc81m001.o(.text._BMC81M001_delay), (72 bytes).
    Removing bmc81m001.o(.ARM.exidx.text._BMC81M001_delay), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_readDataTcp), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_clearResponse), (20 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_clearResponse), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_readBytes), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_configMqtt), (492 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_configMqtt), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_setPublishTopic), (88 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_setPublishTopic), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_setSubscribetopic), (88 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_setSubscribetopic), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_setTopic), (88 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_setTopic), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_writeByte), (176 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_writeByte), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_readIotData), (868 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_readIotData), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_arrayFind), (130 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_arrayFind), (8 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_writeBytes), (8 bytes).
    Removing bmc81m001.o(.text.BMC81M001_reset), (128 bytes).
    Removing bmc81m001.o(.ARM.exidx.text.BMC81M001_reset), (8 bytes).
    Removing bmc81m001.o(.text._BMC81M001_clearBuf), (2 bytes).
    Removing bmc81m001.o(.ARM.exidx.text._BMC81M001_clearBuf), (8 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmd), (200 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdCLIENTID), (200 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdUSERNAME), (100 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_configMqtt.cmdPASSWORD), (200 bytes).
    Removing bmc81m001.o(.rodata.str1.4), (16 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_setTopic.cmd), (200 bytes).
    Removing bmc81m001.o(.rodata..L__const.BMC81M001_writeByte.cmd), (200 bytes).
    Removing bmc81m001.o(.bss.BMC81M001_dataBuff), (25 bytes).
    Removing bmc81m001.o(.bss._BMC81M001_len), (1 bytes).
    Removing bmc81m001.o(.bss._BMC81M001_state), (1 bytes).
    Removing bmc81m001.o(.bss._BMC81M001_sum), (1 bytes).
    Removing bmc81m001.o(.bss._BMC81M001_checksum), (1 bytes).
    Removing bmc81m001.o(.bss._BMC81M001_res), (1 bytes).
    Removing i2c_master.o(.text), (0 bytes).
    Removing i2c_master.o(.text.I2CMaster_Init), (316 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_Init), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_Write), (12 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_Write), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_Start), (176 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_Start), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_Read), (12 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_Read), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_WriteRead), (12 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_WriteRead), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_WriteStopRead), (12 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_WriteStopRead), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_GetStatus), (104 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_GetStatus), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_GetRxIndex), (16 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_GetRxIndex), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_UpdateRxLength), (16 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_UpdateRxLength), (8 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2C0_IRQHandler), (8 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_IRQHandler), (8 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2C1_IRQHandler), (8 bytes).
    Removing i2c_master.o(.text._I2CMaster_DynamicTimeout), (44 bytes).
    Removing i2c_master.o(.ARM.exidx.text._I2CMaster_DynamicTimeout), (8 bytes).
    Removing i2c_master.o(.text.I2CMaster_TimeoutHandler), (48 bytes).
    Removing i2c_master.o(.ARM.exidx.text.I2CMaster_TimeoutHandler), (8 bytes).
    Removing uart_module.o(.text), (0 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_Init), (8 bytes).
    Removing uart_module.o(.text.UARTM_WriteByte), (56 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_WriteByte), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_Write), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_ReadByte), (8 bytes).
    Removing uart_module.o(.text.UARTM_Read), (20 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_Read), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_GetReadBufferLength), (8 bytes).
    Removing uart_module.o(.text.UARTM_GetWriteBufferLength), (20 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_GetWriteBufferLength), (8 bytes).
    Removing uart_module.o(.text.UARTM_IsTxFinished), (16 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_IsTxFinished), (8 bytes).
    Removing uart_module.o(.text.UARTM_DiscardReadBuffer), (20 bytes).
    Removing uart_module.o(.ARM.exidx.text.UARTM_DiscardReadBuffer), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.USART0_IRQHandler), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text._UARTM_IRQHandler), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.UART0_UART2_IRQHandler), (8 bytes).
    Removing uart_module.o(.ARM.exidx.text.UART1_UART3_IRQHandler), (8 bytes).
    Removing spi_module.o(.text), (0 bytes).
    Removing spi_module.o(.text.SPIAPI_Init), (592 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_Init), (8 bytes).
    Removing spi_module.o(.text._SPIAPI_InitAPIParameter), (92 bytes).
    Removing spi_module.o(.ARM.exidx.text._SPIAPI_InitAPIParameter), (8 bytes).
    Removing spi_module.o(.text.SPIAPI_WriteRead), (76 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_WriteRead), (8 bytes).
    Removing spi_module.o(.text.SPIAPI_GetWriteBufferIndex), (16 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_GetWriteBufferIndex), (8 bytes).
    Removing spi_module.o(.text.SPIAPI_GetReadBufferIndex), (16 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_GetReadBufferIndex), (8 bytes).
    Removing spi_module.o(.text.SPIAPI_GetStatus), (48 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_GetStatus), (8 bytes).
    Removing spi_module.o(.text._SPIAPI_IsRxFinish), (24 bytes).
    Removing spi_module.o(.ARM.exidx.text._SPIAPI_IsRxFinish), (8 bytes).
    Removing spi_module.o(.text._SPIAPI_IsTxFinish), (20 bytes).
    Removing spi_module.o(.ARM.exidx.text._SPIAPI_IsTxFinish), (8 bytes).
    Removing spi_module.o(.text.SPIAPI_ClearStatus), (44 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPIAPI_ClearStatus), (8 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPI0_IRQHandler), (8 bytes).
    Removing spi_module.o(.ARM.exidx.text._SPIAPI_IRQHandler), (8 bytes).
    Removing spi_module.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing spi_module.o(.ARM.exidx.text.QSPI_IRQHandler), (8 bytes).
    Removing bmv31t001.o(.text), (0 bytes).
    Removing bmv31t001.o(.text.BMV31T001_reset), (36 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_reset), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_Init), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setVolume), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.writeCmd), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playVoice), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playSentence), (512 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playSentence), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playStop), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playPause), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playPause), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playContinue), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playContinue), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playRepeat), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playRepeat), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isPlaying), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_scanKey), (140 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_scanKey), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_isKeyAction), (24 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isKeyAction), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_readKeyValue), (12 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_readKeyValue), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setPower), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_setLED), (20 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setLED), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_initAudioUpdate), (32 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_initAudioUpdate), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_isUpdateBegin), (12 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isUpdateBegin), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_executeUpdate), (3460 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_executeUpdate), (8 bytes).
    Removing bmv31t001.o(.text.SPIFlashPageWrite), (1556 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashPageWrite), (8 bytes).
    Removing bmv31t001.o(.text.SPIFlashWriteEnable), (252 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashWriteEnable), (8 bytes).
    Removing bmv31t001.o(.text.SPIFlashWaitForWriteEnd), (476 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashWaitForWriteEnd), (8 bytes).
    Removing bmv31t001.o(.text.sendData), (140 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.sendData), (8 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.step), (1 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.lastKey), (1 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.last_tick), (4 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_executeUpdate.dataLength), (1 bytes).
    Removing bmv31t001.o(.bss.rxBuffer), (64 bytes).
    Removing bmv31t001.o(.bss.recAudioData.dataLength), (1 bytes).
    Removing bmv31t001.o(.bss.recAudioData.remainder), (1 bytes).
    Removing bmv31t001.o(.bss.recAudioData.sumDataCnt), (4 bytes).
    Removing bmv31t001.o(.bss.switchSPIMode.correctFlag), (1 bytes).
    Removing bmv31t001.o(.bss.switchSPIMode.retransmissionTimes), (1 bytes).
    Removing bmv31t001.o(.bss.deviceSFDPBuf), (4 bytes).
    Removing bmv31t001.o(.bss.programEntry.retransmissionTimes), (1 bytes).
    Removing bmv31t001.o(.bss.ack.i), (1 bytes).
    Removing bmv31t001.o(.bss.dummyClocks.i), (2 bytes).
    Removing bmv31t001.o(.rodata.crc_table), (256 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.text.Get_Sys_ms), (12 bytes).
    Removing delay.o(.ARM.exidx.text.Get_Sys_ms), (8 bytes).
    Removing delay.o(.text.Get_Sys_us), (44 bytes).
    Removing delay.o(.ARM.exidx.text.Get_Sys_us), (8 bytes).
    Removing delay.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing delay.o(.text.rand_0_1), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_1), (8 bytes).
    Removing delay.o(.text.rand_0_3), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_3), (8 bytes).
    Removing delay.o(.text.rand_0_7), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_7), (8 bytes).
    Removing delay.o(.text.rand_0_15), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_15), (8 bytes).
    Removing delay.o(.text.rand_0_31), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_31), (8 bytes).
    Removing delay.o(.text.rand_0_63), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_63), (8 bytes).
    Removing delay.o(.text.rand_0_127), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_127), (8 bytes).
    Removing delay.o(.text.delay_MS), (356 bytes).
    Removing delay.o(.ARM.exidx.text.delay_MS), (8 bytes).
    Removing ht32_usbd_class.o(.text), (0 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Init), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_ReadByte), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_WriteByte), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Read), (54 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Read), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Write), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_isEmpty), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_isFull), (28 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_isFull), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_GetLength), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Discard), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Discard), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Init), (80 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Init), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_MainRoutine), (60 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_MainRoutine), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Reset), (24 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Reset), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Request), (72 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Request), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Endpoint1), (12 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint1), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Endpoint2), (2 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint2), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_Endpoint3), (88 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint3), (8 bytes).
    Removing ht32_usbd_class.o(.text.USBDClass_CDC_Tx), (200 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_CDC_Tx), (8 bytes).
    Removing ht32_usbd_class.o(.text.USB_CDC_avilable), (20 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_CDC_avilable), (8 bytes).
    Removing ht32_usbd_class.o(.text.USB_Serial_rx), (108 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Serial_rx), (8 bytes).
    Removing ht32_usbd_class.o(.text.USB_Connected), (12 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Connected), (8 bytes).
    Removing ht32_usbd_class.o(.text.USB_Configured), (14 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Configured), (8 bytes).
    Removing ht32_usbd_class.o(.bss.gRingBuffer), (16 bytes).
    Removing ht32_usbd_class.o(.bss.gRingDataBuffer), (512 bytes).
    Removing ht32_usbd_class.o(.data.gIsCDCEPINEmpty), (4 bytes).
    Removing ht32_usbd_class.o(.bss.gIsZLP_Require), (1 bytes).
    Removing ht32_usbd_class.o(.bss.USBDClassVCPLineCoding), (8 bytes).
    Removing ht32_usbd_class.o(.bss.gOutputDataBuffer), (64 bytes).
    Removing ht32_usbd_descriptor.o(.text), (0 bytes).
    Removing ht32_usbd_descriptor.o(.text.USBDDesc_Init), (32 bytes).
    Removing ht32_usbd_descriptor.o(.ARM.exidx.text.USBDDesc_Init), (8 bytes).
    Removing ht32_usbd_descriptor.o(.rodata.guUSB_StringDescLANGID), (4 bytes).
    Removing ht32_usbd_descriptor.o(.rodata.guUSB_StringDescManufacture), (14 bytes).
    Removing ht32_usbd_descriptor.o(.rodata.guUSB_StringDescProduct), (26 bytes).
    Removing ht32_usbd_descriptor.o(.data.guUSB_StringDescSerialNum), (20 bytes).
    Removing ht32_usbd_descriptor.o(.data.gpStringDesc), (16 bytes).
    Removing ht32_usbd_descriptor.o(.rodata.guUSB_DeviceDesc), (18 bytes).
    Removing ht32_usbd_descriptor.o(.rodata.guUSB_ConfnDesc), (75 bytes).
    Removing usb_init.o(.text), (0 bytes).
    Removing usb_init.o(.text.USBCKCU_Configuration), (16 bytes).
    Removing usb_init.o(.ARM.exidx.text.USBCKCU_Configuration), (8 bytes).
    Removing usb_init.o(.text.USB_Configuration), (108 bytes).
    Removing usb_init.o(.ARM.exidx.text.USB_Configuration), (8 bytes).
    Removing usb_init.o(.text.USBPLL_Configuration), (46 bytes).
    Removing usb_init.o(.ARM.exidx.text.USBPLL_Configuration), (8 bytes).
    Removing usb_init.o(.text.Suspend), (36 bytes).
    Removing usb_init.o(.ARM.exidx.text.Suspend), (8 bytes).
    Removing usb_init.o(.text.USB_Serial), (40 bytes).
    Removing usb_init.o(.ARM.exidx.text.USB_Serial), (8 bytes).
    Removing usb_init.o(.data.gIsLowPowerAllowed), (4 bytes).
    Removing usb_init.o(.bss.gUSBDriver), (68 bytes).
    Removing usb_init.o(.bss.gUSBCore), (148 bytes).
    Removing usb_vcp.o(.text), (0 bytes).
    Removing usb_vcp.o(.text.USBSerial_begin), (32 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_begin), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_end), (12 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_end), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_available), (8 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_available), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_readBytes), (34 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_readBytes), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_write_byte), (42 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_write_byte), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_write), (50 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_write), (8 bytes).
    Removing usb_vcp.o(.bss._hasBegun), (1 bytes).
    Removing usb_vcp.o(.bss.USBSerialisConnect), (1 bytes).
    Removing system_ht32f5xxxx_03.o(.text), (0 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate), (136 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing ht32_usbd_core.o(.text), (0 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_Init), (28 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_IRQHandler), (1160 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_MainRoutine), (62 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_IsSuspend), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature), (10 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_GetStatus), (16 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus), (8 bytes).
    Removing ht32_usbd_core.o(.bss.pUSBCore), (4 bytes).
    Removing ht32_cm0plus_misc.o(.text), (0 bytes).
    Removing ht32_cm0plus_misc.o(.text.DIV32_Init), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.Rand_Init), (32 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable), (20 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler), (16 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd), (40 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig), (24 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue), (12 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.RBIT), (192 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT), (8 bytes).
    Removing ht32_cm0plus_misc.o(.data.Data), (348 bytes).
    Removing ht32_cm0plus_misc.o(.bss.UDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.bss.SDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData), (308 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData2), (36 bytes).
    Removing ht32_cm0plus_misc.o(.bss.Rand_Get), (4 bytes).
    Removing ht32f5xxxx_adc.o(.text), (0 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_DeInit), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Reset), (34 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Cmd), (54 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig), (36 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig), (28 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig), (14 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig), (4 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetConversionData), (10 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_IntConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetIntStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit), (6 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDConfig), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_PDMAConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFCmd), (20 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_MVDDACmd), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text), (0 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_DeInit), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_FIFOFlush), (24 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_Cmd), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_StartKey), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_ECB_Init), (56 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_IntConfig), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CBC_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CTR_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetStatus), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetInputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetOutputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetKeyTable), (140 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetVectorTable), (18 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text._AES_CryptData), (152 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AESCore_IRQHandler), (112 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler), (8 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32OutputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputSize), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32InputBuff), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32OutputBuff), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.text), (0 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_DeInit), (44 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_IntConfig), (16 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag), (14 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_DeInit), (292 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig), (176 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady), (124 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit), (52 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit), (40 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler), (12 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency), (136 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency), (68 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler), (44 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd), (32 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetHSEGainMode), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHSEGainMode), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text), (0 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_DeInit), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig), (12 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Init), (60 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_StructInit), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Cmd), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_IntConfig), (20 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig), (20 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_ClearFlag), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue), (4 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text), (0 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_DeInit), (16 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Init), (40 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Process), (94 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_CCITT), (120 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_16), (120 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_32), (116 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text), (0 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_DeInit), (28 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ModeConfig), (4 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig), (18 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig), (16 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_OutBufCmd), (26 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_Cmd), (20 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_SetData), (8 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_GetOutData), (10 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData), (8 bytes).
    Removing ht32f5xxxx_div.o(.text), (0 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_DeInit), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Div32), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uDiv32), (156 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder), (12 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Mod), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_IsDivByZero), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero), (8 bytes).
    Removing ht32f5xxxx_div.o(.bss.guRemainder), (4 bytes).
    Removing ht32f5xxxx_ebi.o(.text), (0 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_DeInit), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Init), (120 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_StructInit), (44 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Cmd), (32 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text), (0 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_DeInit), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_Init), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_IntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag), (20 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus), (36 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn), (16 bytes).
    Removing ht32f5xxxx_flash.o(.text), (0 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetWaitState), (44 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd), (24 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ErasePage), (272 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd), (260 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_MassErase), (268 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte), (1228 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus), (68 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_IntConfig), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text), (0 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DeInit), (60 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_InputConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig), (222 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_PinLock), (12 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_DeInit), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig), (44 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._GPIO_ClockControl), (52 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._AFIO_ClockControl), (48 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_DeInit), (40 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_Init), (144 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_StructInit), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd), (18 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CheckStatus), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer), (6 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig), (132 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_DeInit), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Init), (120 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Cmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_PDMACmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOReset), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig), (40 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_IntConfig), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_ClearFlag), (12 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text), (0 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig), (26 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig), (48 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2), (14 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text), (0 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DeInit), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_Config), (48 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_IntConfig), (48 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd), (28 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd), (32 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus), (24 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit), (72 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed), (216 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep), (32 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1), (88 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2), (100 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex), (208 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown), (96 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS), (20 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus), (36 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd), (40 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig), (52 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag), (12 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset), (56 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text), (0 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_DeInit), (60 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSECmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_Cmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCounter), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_IntConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutConfig), (56 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutCmd), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus), (16 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text), (0 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_DeInit), (32 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Init), (30 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_StructInit), (14 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Cmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ETUConfig), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SendData), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_OutputDIO), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_IntConfig), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClearFlag), (28 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text), (0 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DeInit), (68 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Init), (70 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_StructInit), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Cmd), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd), (18 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetDataLength), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELModeConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig), (40 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DUALCmd), (48 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_QuadCmd), (86 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig), (48 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELHTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text), (0 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DeInit), (116 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseInit), (68 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputInit), (176 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureInit), (80 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHPSCConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PwmInputInit), (192 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputStructInit), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureStructInit), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_Cmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig), (34 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_StiConfig), (26 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig), (120 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CounterModeConfig), (28 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DecoderConfig), (60 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ForcedOREF), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChannelConfig), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputModeConfig), (32 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UpdateCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_MMSELConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimSyncCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounterReload), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CKDIVConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetPrescaler), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GenerateEvent), (4 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearFlag), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_IntConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetIntStatus), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_InternalClockConfig), (12 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PDMAConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text), (0 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_DeInit), (112 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StructInit), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SendData), (4 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityCmd), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityConfig), (28 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDACmd), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485AADCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockInit), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockStructInit), (12 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text), (0 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PreInit), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_Init), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DeInit), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerUp), (144 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EnableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerOff), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PowerOn), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull), (12 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_SetAddress), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_GetINT), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_ClearINT), (12 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber), (78 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTInit), (44 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReset), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt), (36 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent), (56 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr), (32 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr), (40 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount), (24 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData), (92 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text._USBD_CopyMemory), (712 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData), (120 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory), (100 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.bss.gIsFirstPowered), (1 bytes).
    Removing ht32f5xxxx_wdt.o(.text), (0 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_DeInit), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Cmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_HaltConfig), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ResetCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Restart), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_LockCmd), (36 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SourceConfig), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig), (8 bytes).
    Removing ht32_retarget.o(.text), (0 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration), (8 bytes).
    Removing ht32_retarget.o(.text.__backspace), (4 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing ht32_retarget.o(.text._read), (42 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._read), (8 bytes).
    Removing ht32_retarget.o(.text._write), (30 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._write), (8 bytes).
    Removing ht32_retarget.o(.text.putchar), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.putchar), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing ht32_retarget.o(.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.text._sys_exit), (2 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing ht32_serial.o(.text), (0 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar), (8 bytes).
    Removing ht32_serial.o(.text.SERIAL_GetChar), (26 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar), (8 bytes).
    Removing ht32_board.o(.text), (0 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDInit), (84 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOff), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOn), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDToggle), (24 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBInit), (184 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBGetState), (24 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState), (8 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerFun), (288 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd), (8 bytes).
    Removing ht32_board.o(.rodata.GPIO_PORT), (24 bytes).
    Removing ht32_board.o(.rodata.LED_GPIO_ID), (3 bytes).
    Removing ht32_board.o(.rodata.LED_GPIO_PIN), (6 bytes).
    Removing ht32_board.o(.rodata.LED_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_ID), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PIN), (6 bytes).
    Removing ht32_board.o(.rodata.BUTTON_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PINNum), (3 bytes).
    Removing ht32_board.o(.rodata.gCOMInfo), (16 bytes).
    Removing ebi_lcd.o(.text), (0 bytes).
    Removing ebi_lcd.o(.text.LCD_Init), (236 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Config), (1180 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Config), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteReg), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Clear), (248 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_ReadReg), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StarterSet), (34 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMPrior), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAM), (16 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_BackColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_TextColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDisplay), (380 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDraw), (272 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOff), (14 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOn), (14 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StringLineDisplay), (46 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_LineDraw), (544 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMWord), (20 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CircleDraw), (480 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_RectDraw), (1188 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_PicDraw), (276 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_SetDisplayArea), (70 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea), (8 bytes).
    Removing ebi_lcd.o(.rodata.ASCII_Font_Table), (4560 bytes).
    Removing ebi_lcd.o(.data.Color_Back), (2 bytes).
    Removing ebi_lcd.o(.bss.Color_Text), (2 bytes).
    Removing i2c_eeprom.o(.text), (0 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_Init), (88 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_PageWrite), (172 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite), (8 bytes).
    Removing i2c_eeprom.o(.text._I2C_EEPROM_AckPolling), (92 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite), (58 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferRead), (232 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead), (8 bytes).
    Removing spi_flash.o(.text), (0 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_Init), (152 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SectorErase), (200 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteEnable), (72 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SendByte), (52 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd), (120 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BlockErase), (200 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ChipErase), (80 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWriteByDMA), (424 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWrite), (260 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWrite), (304 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA), (468 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferWriteBy), (196 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferReadByDMA), (416 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferRead), (252 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualRead), (304 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA), (484 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadRead), (368 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA), (540 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ReadJEDECID), (204 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus), (120 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus2), (164 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteDisable), (72 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable), (8 bytes).
    Removing dadd.o(.text), (356 bytes).
    Removing dmul.o(.text), (208 bytes).
    Removing ddiv.o(.text), (240 bytes).
    Removing dfixul.o(.text), (64 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).
    Removing depilogue.o(i.__ARM_clz), (46 bytes).

1396 unused section(s) (total 57701 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ctype_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalnum_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isalpha_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isblank_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  iscntrl_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isdigit_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isgraph_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  islower_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isprint_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  ispunct_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isspace_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isupper_o.o ABSOLUTE
    ../clib/microlib/ctype/ctype.c           0x00000000   Number         0  isxdigit_o.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts.o ABSOLUTE
    ../clib/microlib/stdio/puts.c            0x00000000   Number         0  puts_e.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strchr.c         0x00000000   Number         0  strchr.o ABSOLUTE
    ../clib/microlib/string/strcmp.c         0x00000000   Number         0  strcmp.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/string/strspn.c         0x00000000   Number         0  strspn.o ABSOLUTE
    ../clib/microlib/string/strstr.c         0x00000000   Number         0  strstr.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  atoi.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtol.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    BMC81M001.c                              0x00000000   Number         0  bmc81m001.o ABSOLUTE
    BMV31T001.c                              0x00000000   Number         0  bmv31t001.o ABSOLUTE
    USB_VCP.c                                0x00000000   Number         0  usb_vcp.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    ebi_lcd.c                                0x00000000   Number         0  ebi_lcd.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    ht32_board.c                             0x00000000   Number         0  ht32_board.o ABSOLUTE
    ht32_cm0plus_misc.c                      0x00000000   Number         0  ht32_cm0plus_misc.o ABSOLUTE
    ht32_op.s                                0x00000000   Number         0  ht32_op.o ABSOLUTE
    ht32_retarget.c                          0x00000000   Number         0  ht32_retarget.o ABSOLUTE
    ht32_serial.c                            0x00000000   Number         0  ht32_serial.o ABSOLUTE
    ht32_usbd_class.c                        0x00000000   Number         0  ht32_usbd_class.o ABSOLUTE
    ht32_usbd_core.c                         0x00000000   Number         0  ht32_usbd_core.o ABSOLUTE
    ht32_usbd_descriptor.c                   0x00000000   Number         0  ht32_usbd_descriptor.o ABSOLUTE
    ht32f5xxxx_01_it.c                       0x00000000   Number         0  ht32f5xxxx_01_it.o ABSOLUTE
    ht32f5xxxx_adc.c                         0x00000000   Number         0  ht32f5xxxx_adc.o ABSOLUTE
    ht32f5xxxx_aes.c                         0x00000000   Number         0  ht32f5xxxx_aes.o ABSOLUTE
    ht32f5xxxx_bftm.c                        0x00000000   Number         0  ht32f5xxxx_bftm.o ABSOLUTE
    ht32f5xxxx_ckcu.c                        0x00000000   Number         0  ht32f5xxxx_ckcu.o ABSOLUTE
    ht32f5xxxx_cmp.c                         0x00000000   Number         0  ht32f5xxxx_cmp.o ABSOLUTE
    ht32f5xxxx_crc.c                         0x00000000   Number         0  ht32f5xxxx_crc.o ABSOLUTE
    ht32f5xxxx_dac.c                         0x00000000   Number         0  ht32f5xxxx_dac.o ABSOLUTE
    ht32f5xxxx_div.c                         0x00000000   Number         0  ht32f5xxxx_div.o ABSOLUTE
    ht32f5xxxx_ebi.c                         0x00000000   Number         0  ht32f5xxxx_ebi.o ABSOLUTE
    ht32f5xxxx_exti.c                        0x00000000   Number         0  ht32f5xxxx_exti.o ABSOLUTE
    ht32f5xxxx_flash.c                       0x00000000   Number         0  ht32f5xxxx_flash.o ABSOLUTE
    ht32f5xxxx_gpio.c                        0x00000000   Number         0  ht32f5xxxx_gpio.o ABSOLUTE
    ht32f5xxxx_i2c.c                         0x00000000   Number         0  ht32f5xxxx_i2c.o ABSOLUTE
    ht32f5xxxx_i2s.c                         0x00000000   Number         0  ht32f5xxxx_i2s.o ABSOLUTE
    ht32f5xxxx_mctm.c                        0x00000000   Number         0  ht32f5xxxx_mctm.o ABSOLUTE
    ht32f5xxxx_pdma.c                        0x00000000   Number         0  ht32f5xxxx_pdma.o ABSOLUTE
    ht32f5xxxx_pwrcu.c                       0x00000000   Number         0  ht32f5xxxx_pwrcu.o ABSOLUTE
    ht32f5xxxx_rstcu.c                       0x00000000   Number         0  ht32f5xxxx_rstcu.o ABSOLUTE
    ht32f5xxxx_rtc.c                         0x00000000   Number         0  ht32f5xxxx_rtc.o ABSOLUTE
    ht32f5xxxx_sci.c                         0x00000000   Number         0  ht32f5xxxx_sci.o ABSOLUTE
    ht32f5xxxx_spi.c                         0x00000000   Number         0  ht32f5xxxx_spi.o ABSOLUTE
    ht32f5xxxx_tm.c                          0x00000000   Number         0  ht32f5xxxx_tm.o ABSOLUTE
    ht32f5xxxx_usart.c                       0x00000000   Number         0  ht32f5xxxx_usart.o ABSOLUTE
    ht32f5xxxx_usbd.c                        0x00000000   Number         0  ht32f5xxxx_usbd.o ABSOLUTE
    ht32f5xxxx_wdt.c                         0x00000000   Number         0  ht32f5xxxx_wdt.o ABSOLUTE
    i2c_eeprom.c                             0x00000000   Number         0  i2c_eeprom.o ABSOLUTE
    i2c_master.c                             0x00000000   Number         0  i2c_master.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    spi_flash.c                              0x00000000   Number         0  spi_flash.o ABSOLUTE
    spi_module.c                             0x00000000   Number         0  spi_module.o ABSOLUTE
    startup_ht32f5xxxx_03.s                  0x00000000   Number         0  startup_ht32f5xxxx_03.o ABSOLUTE
    system_ht32f5xxxx_03.c                   0x00000000   Number         0  system_ht32f5xxxx_03.o ABSOLUTE
    uart_module.c                            0x00000000   Number         0  uart_module.o ABSOLUTE
    usb_init.c                               0x00000000   Number         0  usb_init.o ABSOLUTE
    RESET                                    0x00000000   Section      356  startup_ht32f5xxxx_03.o(RESET)
    BootProcess                              0x000000cd   Thumb Code    94  startup_ht32f5xxxx_03.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000164   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000164   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000168   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x0000016c   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x0000016c   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x0000016c   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000174   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000174   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000174   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000174   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000178   Section        0  memcpya.o(.text)
    .text                                    0x0000019c   Section        0  memseta.o(.text)
    .text                                    0x000001c0   Section        0  strstr.o(.text)
    .text                                    0x000001e8   Section        0  strchr.o(.text)
    .text                                    0x000001fc   Section        0  strlen.o(.text)
    .text                                    0x0000020a   Section        0  strcmp.o(.text)
    .text                                    0x00000226   Section        0  strspn.o(.text)
    .text                                    0x00000246   Section        0  atoi.o(.text)
    .text                                    0x00000260   Section        0  uidiv_div0.o(.text)
    .text                                    0x000002a0   Section        0  strtol.o(.text)
    .text                                    0x00000310   Section       48  init.o(.text)
    .text                                    0x00000340   Section        0  ctype_o.o(.text)
    .text                                    0x00000348   Section        0  _strtoul.o(.text)
    .text                                    0x000003ee   Section        0  _chval.o(.text)
    [Anonymous Symbol]                       0x0000040c   Section        0  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    __arm_cp.19_0                            0x00000584   Number         4  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    [Anonymous Symbol]                       0x00000588   Section        0  bmc81m001.o(.text.BMC81M001_Init)
    [Anonymous Symbol]                       0x000005ac   Section        0  bmc81m001.o(.text.BMC81M001_connectTCP)
    __arm_cp.5_0                             0x00000638   Number         4  bmc81m001.o(.text.BMC81M001_connectTCP)
    __arm_cp.5_1                             0x0000063c   Number         4  bmc81m001.o(.text.BMC81M001_connectTCP)
    [Anonymous Symbol]                       0x00000640   Section        0  bmc81m001.o(.text.BMC81M001_connectToAP)
    __arm_cp.2_0                             0x000006d4   Number         4  bmc81m001.o(.text.BMC81M001_connectToAP)
    [Anonymous Symbol]                       0x000006e8   Section        0  bmc81m001.o(.text.BMC81M001_readBytes)
    [Anonymous Symbol]                       0x000007a0   Section        0  bmc81m001.o(.text.BMC81M001_readDataTcp)
    __arm_cp.8_0                             0x0000085c   Number         4  bmc81m001.o(.text.BMC81M001_readDataTcp)
    __arm_cp.8_1                             0x00000860   Number         4  bmc81m001.o(.text.BMC81M001_readDataTcp)
    __arm_cp.8_2                             0x00000864   Number         4  bmc81m001.o(.text.BMC81M001_readDataTcp)
    __arm_cp.8_4                             0x00000870   Number         4  bmc81m001.o(.text.BMC81M001_readDataTcp)
    [Anonymous Symbol]                       0x00000874   Section        0  bmc81m001.o(.text.BMC81M001_sendATCommand)
    __arm_cp.3_0                             0x00000910   Number         4  bmc81m001.o(.text.BMC81M001_sendATCommand)
    __arm_cp.3_1                             0x00000914   Number         4  bmc81m001.o(.text.BMC81M001_sendATCommand)
    __arm_cp.3_3                             0x00000918   Number         4  bmc81m001.o(.text.BMC81M001_sendATCommand)
    [Anonymous Symbol]                       0x0000091c   Section        0  bmc81m001.o(.text.BMC81M001_writeBytes)
    __arm_cp.18_0                            0x00000a04   Number         4  bmc81m001.o(.text.BMC81M001_writeBytes)
    __arm_cp.18_1                            0x00000a08   Number         4  bmc81m001.o(.text.BMC81M001_writeBytes)
    __arm_cp.18_3                            0x00000a0c   Number         4  bmc81m001.o(.text.BMC81M001_writeBytes)
    [Anonymous Symbol]                       0x00000a10   Section        0  bmc81m001.o(.text.BMC81M001_writeDataTcp)
    __arm_cp.6_0                             0x00000abc   Number         4  bmc81m001.o(.text.BMC81M001_writeDataTcp)
    __arm_cp.6_1                             0x00000ac0   Number         4  bmc81m001.o(.text.BMC81M001_writeDataTcp)
    __arm_cp.6_2                             0x00000ac4   Number         4  bmc81m001.o(.text.BMC81M001_writeDataTcp)
    [Anonymous Symbol]                       0x00000ac8   Section        0  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_0                             0x00000c30   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_1                             0x00000c34   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_2                             0x00000c38   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_3                             0x00000c3c   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_4                             0x00000c40   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_5                             0x00000c44   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    [Anonymous Symbol]                       0x00000c48   Section        0  bmv31t001.o(.text.BMV31T001_isPlaying)
    __arm_cp.10_0                            0x00000c58   Number         4  bmv31t001.o(.text.BMV31T001_isPlaying)
    [Anonymous Symbol]                       0x00000c5c   Section        0  bmv31t001.o(.text.BMV31T001_playStop)
    [Anonymous Symbol]                       0x00000d0c   Section        0  bmv31t001.o(.text.BMV31T001_playVoice)
    [Anonymous Symbol]                       0x00000dd8   Section        0  bmv31t001.o(.text.BMV31T001_setPower)
    [Anonymous Symbol]                       0x00000df8   Section        0  bmv31t001.o(.text.BMV31T001_setVolume)
    __arm_cp.2_0                             0x00000f50   Number         4  bmv31t001.o(.text.BMV31T001_setVolume)
    [Anonymous Symbol]                       0x00000f54   Section        0  ht32_usbd_class.o(.text.Buffer_GetLength)
    [Anonymous Symbol]                       0x00000f68   Section        0  ht32_usbd_class.o(.text.Buffer_Init)
    [Anonymous Symbol]                       0x00000f74   Section        0  ht32_usbd_class.o(.text.Buffer_ReadByte)
    [Anonymous Symbol]                       0x00000f96   Section        0  ht32_usbd_class.o(.text.Buffer_Write)
    [Anonymous Symbol]                       0x00000fda   Section        0  ht32_usbd_class.o(.text.Buffer_WriteByte)
    [Anonymous Symbol]                       0x00001004   Section        0  ht32_usbd_class.o(.text.Buffer_isEmpty)
    [Anonymous Symbol]                       0x00001010   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency)
    __arm_cp.18_0                            0x000010a4   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency)
    __arm_cp.18_1                            0x000010a8   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency)
    [Anonymous Symbol]                       0x000010ac   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    __arm_cp.31_0                            0x000010e0   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    [Anonymous Symbol]                       0x000010e4   Section        0  ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits)
    [Anonymous Symbol]                       0x000010e8   Section        0  ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig)
    [Anonymous Symbol]                       0x000010fc   Section        0  ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig)
    [Anonymous Symbol]                       0x0000111e   Section        0  ht32_board.o(.text.HT32F_DVB_COMInit)
    [Anonymous Symbol]                       0x00001170   Section        0  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    __arm_cp.1_0                             0x0000118c   Number         4  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x00001190   Section        0  i2c_master.o(.text.I2C0_IRQHandler)
    [Anonymous Symbol]                       0x000011a0   Section        0  i2c_master.o(.text.I2C1_IRQHandler)
    [Anonymous Symbol]                       0x000011ac   Section        0  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_0                            0x0000139c   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_1                            0x000013a0   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_2                            0x000013a4   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_3                            0x000013a8   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_4                            0x000013ac   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_5                            0x000013b0   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_6                            0x000013b4   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    __arm_cp.10_7                            0x000013b8   Number         4  i2c_master.o(.text.I2CMaster_IRQHandler)
    [Anonymous Symbol]                       0x000013bc   Section        0  ht32f5xxxx_i2c.o(.text.I2C_AckCmd)
    [Anonymous Symbol]                       0x000013cc   Section        0  ht32f5xxxx_i2c.o(.text.I2C_ClearFlag)
    [Anonymous Symbol]                       0x000013d0   Section        0  ht32f5xxxx_i2c.o(.text.I2C_Cmd)
    [Anonymous Symbol]                       0x000013e2   Section        0  ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP)
    [Anonymous Symbol]                       0x000013ec   Section        0  ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus)
    [Anonymous Symbol]                       0x000013f6   Section        0  ht32f5xxxx_i2c.o(.text.I2C_IntConfig)
    [Anonymous Symbol]                       0x0000140a   Section        0  ht32f5xxxx_i2c.o(.text.I2C_ReadRegister)
    [Anonymous Symbol]                       0x00001420   Section        0  ht32f5xxxx_i2c.o(.text.I2C_ReceiveData)
    [Anonymous Symbol]                       0x00001426   Section        0  ht32f5xxxx_i2c.o(.text.I2C_SendData)
    [Anonymous Symbol]                       0x0000142a   Section        0  ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig)
    [Anonymous Symbol]                       0x00001450   Section        0  ht32f5xxxx_01_it.o(.text.NMI_Handler)
    [Anonymous Symbol]                       0x00001452   Section        0  ht32f5xxxx_01_it.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x00001454   Section        0  spi_module.o(.text.QSPI_IRQHandler)
    [Anonymous Symbol]                       0x0000145e   Section        0  ht32_retarget.o(.text.RETARGET_Configuration)
    [Anonymous Symbol]                       0x00001480   Section        0  ht32_serial.o(.text.SERIAL_PutChar)
    __arm_cp.0_0                             0x000014a8   Number         4  ht32_serial.o(.text.SERIAL_PutChar)
    [Anonymous Symbol]                       0x000014ac   Section        0  spi_module.o(.text.SPI0_IRQHandler)
    [Anonymous Symbol]                       0x000014b6   Section        0  spi_module.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x000014c0   Section        0  ht32f5xxxx_spi.o(.text.SPI_ClearFlag)
    [Anonymous Symbol]                       0x000014c4   Section        0  ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus)
    [Anonymous Symbol]                       0x000014d6   Section        0  ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus)
    [Anonymous Symbol]                       0x000014e0   Section        0  ht32f5xxxx_spi.o(.text.SPI_IntConfig)
    [Anonymous Symbol]                       0x000014f4   Section        0  ht32f5xxxx_spi.o(.text.SPI_ReceiveData)
    [Anonymous Symbol]                       0x000014fa   Section        0  ht32f5xxxx_spi.o(.text.SPI_SendData)
    [Anonymous Symbol]                       0x000014fe   Section        0  ht32f5xxxx_01_it.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x00001500   Section        0  main.o(.text.ScanUnsignedDecimal)
    __arm_cp.7_0                             0x0000161c   Number         4  main.o(.text.ScanUnsignedDecimal)
    [Anonymous Symbol]                       0x00001654   Section        0  delay.o(.text.SysTick_Handler)
    __arm_cp.2_0                             0x00001660   Number         4  delay.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001664   Section        0  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_0                             0x000017d0   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_1                             0x000017d4   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_2                             0x000017d8   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_3                             0x000017dc   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    [Anonymous Symbol]                       0x000017e0   Section        0  main.o(.text.Time_Regulate)
    __arm_cp.4_0                             0x00001864   Number         4  main.o(.text.Time_Regulate)
    __arm_cp.4_2                             0x00001880   Number         4  main.o(.text.Time_Regulate)
    __arm_cp.4_3                             0x00001884   Number         4  main.o(.text.Time_Regulate)
    [Anonymous Symbol]                       0x000018b8   Section        0  uart_module.o(.text.UART0_UART2_IRQHandler)
    [Anonymous Symbol]                       0x000018c2   Section        0  uart_module.o(.text.UART1_UART3_IRQHandler)
    [Anonymous Symbol]                       0x000018d4   Section        0  uart_module.o(.text.UARTM_GetReadBufferLength)
    [Anonymous Symbol]                       0x000018e4   Section        0  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_2                             0x00001b74   Number         4  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_4                             0x00001b78   Number         4  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_6                             0x00001b7c   Number         4  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_7                             0x00001b80   Number         4  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_9                             0x00001b84   Number         4  uart_module.o(.text.UARTM_Init)
    __arm_cp.0_11                            0x00001b88   Number         4  uart_module.o(.text.UARTM_Init)
    [Anonymous Symbol]                       0x00001b8c   Section        0  uart_module.o(.text.UARTM_ReadByte)
    __arm_cp.3_0                             0x00001b9c   Number         4  uart_module.o(.text.UARTM_ReadByte)
    [Anonymous Symbol]                       0x00001ba0   Section        0  uart_module.o(.text.UARTM_Write)
    __arm_cp.2_0                             0x00001bf0   Number         4  uart_module.o(.text.UARTM_Write)
    __arm_cp.2_1                             0x00001bf4   Number         4  uart_module.o(.text.UARTM_Write)
    [Anonymous Symbol]                       0x00001bf8   Section        0  uart_module.o(.text.USART0_IRQHandler)
    [Anonymous Symbol]                       0x00001c02   Section        0  uart_module.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x00001c0c   Section        0  ht32f5xxxx_usart.o(.text.USART_ClearFlag)
    [Anonymous Symbol]                       0x00001c14   Section        0  ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus)
    [Anonymous Symbol]                       0x00001c28   Section        0  ht32f5xxxx_usart.o(.text.USART_GetFlagStatus)
    [Anonymous Symbol]                       0x00001c32   Section        0  ht32f5xxxx_usart.o(.text.USART_GetIntStatus)
    [Anonymous Symbol]                       0x00001c3c   Section        0  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_0                             0x00001cac   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_1                             0x00001cb0   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_2                             0x00001cb4   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_3                             0x00001cb8   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_4                             0x00001cbc   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_5                             0x00001cc0   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    __arm_cp.1_6                             0x00001cc4   Number         4  ht32f5xxxx_usart.o(.text.USART_Init)
    [Anonymous Symbol]                       0x00001cc8   Section        0  ht32f5xxxx_usart.o(.text.USART_IntConfig)
    [Anonymous Symbol]                       0x00001cdc   Section        0  ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue)
    [Anonymous Symbol]                       0x00001cec   Section        0  ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig)
    [Anonymous Symbol]                       0x00001cfe   Section        0  ht32f5xxxx_usart.o(.text.USART_TxRxCmd)
    [Anonymous Symbol]                       0x00001d18   Section        0  spi_module.o(.text._SPIAPI_IRQHandler)
    __arm_cp.10_0                            0x00001f38   Number         4  spi_module.o(.text._SPIAPI_IRQHandler)
    _UARTM_IRQHandler                        0x00001f3d   Thumb Code   428  uart_module.o(.text._UARTM_IRQHandler)
    [Anonymous Symbol]                       0x00001f3c   Section        0  uart_module.o(.text._UARTM_IRQHandler)
    __arm_cp.10_0                            0x000020e8   Number         4  uart_module.o(.text._UARTM_IRQHandler)
    __arm_cp.10_1                            0x000020ec   Number         4  uart_module.o(.text._UARTM_IRQHandler)
    __arm_cp.10_2                            0x000020f0   Number         4  uart_module.o(.text._UARTM_IRQHandler)
    [Anonymous Symbol]                       0x000020f4   Section        0  delay.o(.text.delay_ms)
    __arm_cp.4_0                             0x0000222c   Number         4  delay.o(.text.delay_ms)
    [Anonymous Symbol]                       0x00002230   Section        0  delay.o(.text.delay_us)
    __arm_cp.3_0                             0x00002260   Number         4  delay.o(.text.delay_us)
    [Anonymous Symbol]                       0x00002264   Section        0  ht32_retarget.o(.text.fputc)
    [Anonymous Symbol]                       0x0000226c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x000024b4   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x000024b8   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x000024bc   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x000024c0   Number         4  main.o(.text.main)
    __arm_cp.0_12                            0x00002520   Number         4  main.o(.text.main)
    __arm_cp.0_15                            0x0000254c   Number         4  main.o(.text.main)
    __arm_cp.0_16                            0x00002550   Number         4  main.o(.text.main)
    [Anonymous Symbol]                       0x00002554   Section        0  main.o(.text.rtc)
    __arm_cp.3_1                             0x00002630   Number         4  main.o(.text.rtc)
    __arm_cp.3_2                             0x00002634   Number         4  main.o(.text.rtc)
    __arm_cp.3_3                             0x00002638   Number         4  main.o(.text.rtc)
    __arm_cp.3_5                             0x0000264c   Number         4  main.o(.text.rtc)
    writeCmd                                 0x0000267d   Thumb Code   968  bmv31t001.o(.text.writeCmd)
    [Anonymous Symbol]                       0x0000267c   Section        0  bmv31t001.o(.text.writeCmd)
    __arm_cp.3_0                             0x00002a44   Number         4  bmv31t001.o(.text.writeCmd)
    i.__0printf$6                            0x00002a48   Section        0  printf6.o(i.__0printf$6)
    i.__0sprintf$6                           0x00002a68   Section        0  printf6.o(i.__0sprintf$6)
    i.__aeabi_errno_addr                     0x00002a90   Section        0  errno.o(i.__aeabi_errno_addr)
    i.__scatterload_copy                     0x00002a98   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002aa6   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002aa8   Section       14  handlers.o(i.__scatterload_zeroinit)
    _printf_core                             0x00002ab9   Thumb Code   768  printf6.o(i._printf_core)
    i._printf_core                           0x00002ab8   Section        0  printf6.o(i._printf_core)
    _printf_post_padding                     0x00002dbd   Thumb Code    32  printf6.o(i._printf_post_padding)
    i._printf_post_padding                   0x00002dbc   Section        0  printf6.o(i._printf_post_padding)
    _printf_pre_padding                      0x00002ddd   Thumb Code    44  printf6.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00002ddc   Section        0  printf6.o(i._printf_pre_padding)
    _sputc                                   0x00002e09   Thumb Code    10  printf6.o(i._sputc)
    i._sputc                                 0x00002e08   Section        0  printf6.o(i._sputc)
    i.free                                   0x00002e14   Section        0  malloc.o(i.free)
    i.malloc                                 0x00002e68   Section        0  malloc.o(i.malloc)
    i.puts                                   0x00002ed4   Section        0  puts.o(i.puts)
    .constdata                               0x00002ef4   Section      129  ctype_o.o(.constdata)
    table                                    0x00002f78   Data           4  ctype_o.o(.constdata)
    .constdata                               0x00002f78   Section        4  ctype_o.o(.constdata)
    [Anonymous Symbol]                       0x00002f7c   Section        0  bmc81m001.o(.rodata..L__const.BMC81M001_connectTCP.cmd)
    [Anonymous Symbol]                       0x00003044   Section        0  bmc81m001.o(.rodata..L__const.BMC81M001_connectToAP.cmd)
    [Anonymous Symbol]                       0x0000310c   Section        0  bmc81m001.o(.rodata..L__const.BMC81M001_writeDataTcp.cmd)
    [Anonymous Symbol]                       0x000031d4   Section        0  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00003242   Section        0  bmc81m001.o(.rodata.str1.1)
    .data                                    0x20000000   Section        4  stdout.o(.data)
    .data                                    0x20000004   Section        4  mvars.o(.data)
    .data                                    0x20000008   Section        4  mvars.o(.data)
    _errno                                   0x2000000c   Data           4  errno.o(.data)
    .data                                    0x2000000c   Section        4  errno.o(.data)
    HardFault_Handler.gIsContinue            0x20000100   Data           4  ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue)
    [Anonymous Symbol]                       0x20000100   Section        0  ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue)
    _flashAddr                               0x200001d0   Data           4  bmv31t001.o(.bss._flashAddr)
    [Anonymous Symbol]                       0x200001d0   Section        0  bmv31t001.o(.bss._flashAddr)
    _isKey                                   0x200001d4   Data           1  bmv31t001.o(.bss._isKey)
    [Anonymous Symbol]                       0x200001d4   Section        0  bmv31t001.o(.bss._isKey)
    _keyValue                                0x200001d5   Data           1  bmv31t001.o(.bss._keyValue)
    [Anonymous Symbol]                       0x200001d5   Section        0  bmv31t001.o(.bss._keyValue)
    gI2CMasterState                          0x200001d8   Data         272  i2c_master.o(.bss.gI2CMasterState)
    [Anonymous Symbol]                       0x200001d8   Section        0  i2c_master.o(.bss.gI2CMasterState)
    gUARTModuleState                         0x20000328   Data          40  uart_module.o(.bss.gUARTModuleState)
    [Anonymous Symbol]                       0x20000328   Section        0  uart_module.o(.bss.gUARTModuleState)
    HEAP                                     0x200009c0   Section        0  startup_ht32f5xxxx_03.o(HEAP)
    STACK                                    0x200009c0   Section     1024  startup_ht32f5xxxx_03.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_ht32f5xxxx_03.o(RESET)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x000000c1   Thumb Code    12  startup_ht32f5xxxx_03.o(RESET)
    ADC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    AES_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_DAC_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EVWUP_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI0_1_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI2_3_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI4_15_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    FLASH_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    GPTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2S_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    LVD_BOD_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    MCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH0_1_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH2_5_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    RTC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCI_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USB_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    __main                                   0x00000165   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000165   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000169   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x0000016d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x0000016d   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x0000016d   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x0000016d   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000175   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000175   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    __aeabi_memcpy                           0x00000179   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000179   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000179   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x0000019d   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0000019d   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000019d   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001ab   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001ab   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001ab   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001af   Thumb Code    18  memseta.o(.text)
    strstr                                   0x000001c1   Thumb Code    40  strstr.o(.text)
    strchr                                   0x000001e9   Thumb Code    20  strchr.o(.text)
    strlen                                   0x000001fd   Thumb Code    14  strlen.o(.text)
    strcmp                                   0x0000020b   Thumb Code    28  strcmp.o(.text)
    strspn                                   0x00000227   Thumb Code    32  strspn.o(.text)
    atoi                                     0x00000247   Thumb Code    26  atoi.o(.text)
    __aeabi_uidiv                            0x00000261   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000261   Thumb Code    62  uidiv_div0.o(.text)
    strtol                                   0x000002a1   Thumb Code   108  strtol.o(.text)
    __scatterload                            0x00000311   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000311   Thumb Code     0  init.o(.text)
    __rt_ctype_table                         0x00000341   Thumb Code     4  ctype_o.o(.text)
    _strtoul                                 0x00000349   Thumb Code   166  _strtoul.o(.text)
    _chval                                   0x000003ef   Thumb Code    30  _chval.o(.text)
    AFIO_GPxConfig                           0x0000040d   Thumb Code   376  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    BMC81M001_Init                           0x00000589   Thumb Code    36  bmc81m001.o(.text.BMC81M001_Init)
    BMC81M001_connectTCP                     0x000005ad   Thumb Code   140  bmc81m001.o(.text.BMC81M001_connectTCP)
    BMC81M001_connectToAP                    0x00000641   Thumb Code   148  bmc81m001.o(.text.BMC81M001_connectToAP)
    BMC81M001_readBytes                      0x000006e9   Thumb Code   184  bmc81m001.o(.text.BMC81M001_readBytes)
    BMC81M001_readDataTcp                    0x000007a1   Thumb Code   188  bmc81m001.o(.text.BMC81M001_readDataTcp)
    BMC81M001_sendATCommand                  0x00000875   Thumb Code   156  bmc81m001.o(.text.BMC81M001_sendATCommand)
    BMC81M001_writeBytes                     0x0000091d   Thumb Code   232  bmc81m001.o(.text.BMC81M001_writeBytes)
    BMC81M001_writeDataTcp                   0x00000a11   Thumb Code   172  bmc81m001.o(.text.BMC81M001_writeDataTcp)
    BMV31T001_Init                           0x00000ac9   Thumb Code   360  bmv31t001.o(.text.BMV31T001_Init)
    BMV31T001_isPlaying                      0x00000c49   Thumb Code    16  bmv31t001.o(.text.BMV31T001_isPlaying)
    BMV31T001_playStop                       0x00000c5d   Thumb Code   176  bmv31t001.o(.text.BMV31T001_playStop)
    BMV31T001_playVoice                      0x00000d0d   Thumb Code   204  bmv31t001.o(.text.BMV31T001_playVoice)
    BMV31T001_setPower                       0x00000dd9   Thumb Code    32  bmv31t001.o(.text.BMV31T001_setPower)
    BMV31T001_setVolume                      0x00000df9   Thumb Code   344  bmv31t001.o(.text.BMV31T001_setVolume)
    Buffer_GetLength                         0x00000f55   Thumb Code    20  ht32_usbd_class.o(.text.Buffer_GetLength)
    Buffer_Init                              0x00000f69   Thumb Code    12  ht32_usbd_class.o(.text.Buffer_Init)
    Buffer_ReadByte                          0x00000f75   Thumb Code    34  ht32_usbd_class.o(.text.Buffer_ReadByte)
    Buffer_Write                             0x00000f97   Thumb Code    68  ht32_usbd_class.o(.text.Buffer_Write)
    Buffer_WriteByte                         0x00000fdb   Thumb Code    42  ht32_usbd_class.o(.text.Buffer_WriteByte)
    Buffer_isEmpty                           0x00001005   Thumb Code    12  ht32_usbd_class.o(.text.Buffer_isEmpty)
    CKCU_GetPeripFrequency                   0x00001011   Thumb Code   148  ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency)
    CKCU_PeripClockConfig                    0x000010ad   Thumb Code    52  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    GPIO_ClearOutBits                        0x000010e5   Thumb Code     4  ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits)
    GPIO_DirectionConfig                     0x000010e9   Thumb Code    20  ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig)
    GPIO_PullResistorConfig                  0x000010fd   Thumb Code    34  ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig)
    HT32F_DVB_COMInit                        0x0000111f   Thumb Code    80  ht32_board.o(.text.HT32F_DVB_COMInit)
    HardFault_Handler                        0x00001171   Thumb Code    28  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    I2C0_IRQHandler                          0x00001191   Thumb Code    16  i2c_master.o(.text.I2C0_IRQHandler)
    I2C1_IRQHandler                          0x000011a1   Thumb Code    10  i2c_master.o(.text.I2C1_IRQHandler)
    I2CMaster_IRQHandler                     0x000011ad   Thumb Code   496  i2c_master.o(.text.I2CMaster_IRQHandler)
    I2C_AckCmd                               0x000013bd   Thumb Code    16  ht32f5xxxx_i2c.o(.text.I2C_AckCmd)
    I2C_ClearFlag                            0x000013cd   Thumb Code     4  ht32f5xxxx_i2c.o(.text.I2C_ClearFlag)
    I2C_Cmd                                  0x000013d1   Thumb Code    18  ht32f5xxxx_i2c.o(.text.I2C_Cmd)
    I2C_GenerateSTOP                         0x000013e3   Thumb Code    10  ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP)
    I2C_GetFlagStatus                        0x000013ed   Thumb Code    10  ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus)
    I2C_IntConfig                            0x000013f7   Thumb Code    20  ht32f5xxxx_i2c.o(.text.I2C_IntConfig)
    I2C_ReadRegister                         0x0000140b   Thumb Code    22  ht32f5xxxx_i2c.o(.text.I2C_ReadRegister)
    I2C_ReceiveData                          0x00001421   Thumb Code     6  ht32f5xxxx_i2c.o(.text.I2C_ReceiveData)
    I2C_SendData                             0x00001427   Thumb Code     4  ht32f5xxxx_i2c.o(.text.I2C_SendData)
    I2C_TargetAddressConfig                  0x0000142b   Thumb Code    38  ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig)
    NMI_Handler                              0x00001451   Thumb Code     2  ht32f5xxxx_01_it.o(.text.NMI_Handler)
    PendSV_Handler                           0x00001453   Thumb Code     2  ht32f5xxxx_01_it.o(.text.PendSV_Handler)
    QSPI_IRQHandler                          0x00001455   Thumb Code    10  spi_module.o(.text.QSPI_IRQHandler)
    RETARGET_Configuration                   0x0000145f   Thumb Code    32  ht32_retarget.o(.text.RETARGET_Configuration)
    SERIAL_PutChar                           0x00001481   Thumb Code    40  ht32_serial.o(.text.SERIAL_PutChar)
    SPI0_IRQHandler                          0x000014ad   Thumb Code    10  spi_module.o(.text.SPI0_IRQHandler)
    SPI1_IRQHandler                          0x000014b7   Thumb Code    10  spi_module.o(.text.SPI1_IRQHandler)
    SPI_ClearFlag                            0x000014c1   Thumb Code     4  ht32f5xxxx_spi.o(.text.SPI_ClearFlag)
    SPI_GetFIFOStatus                        0x000014c5   Thumb Code    18  ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus)
    SPI_GetFlagStatus                        0x000014d7   Thumb Code    10  ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus)
    SPI_IntConfig                            0x000014e1   Thumb Code    20  ht32f5xxxx_spi.o(.text.SPI_IntConfig)
    SPI_ReceiveData                          0x000014f5   Thumb Code     6  ht32f5xxxx_spi.o(.text.SPI_ReceiveData)
    SPI_SendData                             0x000014fb   Thumb Code     4  ht32f5xxxx_spi.o(.text.SPI_SendData)
    SVC_Handler                              0x000014ff   Thumb Code     2  ht32f5xxxx_01_it.o(.text.SVC_Handler)
    ScanUnsignedDecimal                      0x00001501   Thumb Code   284  main.o(.text.ScanUnsignedDecimal)
    SysTick_Handler                          0x00001655   Thumb Code    12  delay.o(.text.SysTick_Handler)
    SystemInit                               0x00001665   Thumb Code   364  system_ht32f5xxxx_03.o(.text.SystemInit)
    Time_Regulate                            0x000017e1   Thumb Code   132  main.o(.text.Time_Regulate)
    UART0_UART2_IRQHandler                   0x000018b9   Thumb Code    10  uart_module.o(.text.UART0_UART2_IRQHandler)
    UART1_UART3_IRQHandler                   0x000018c3   Thumb Code    16  uart_module.o(.text.UART1_UART3_IRQHandler)
    UARTM_GetReadBufferLength                0x000018d5   Thumb Code    16  uart_module.o(.text.UARTM_GetReadBufferLength)
    UARTM_Init                               0x000018e5   Thumb Code   656  uart_module.o(.text.UARTM_Init)
    UARTM_ReadByte                           0x00001b8d   Thumb Code    16  uart_module.o(.text.UARTM_ReadByte)
    UARTM_Write                              0x00001ba1   Thumb Code    80  uart_module.o(.text.UARTM_Write)
    USART0_IRQHandler                        0x00001bf9   Thumb Code    10  uart_module.o(.text.USART0_IRQHandler)
    USART1_IRQHandler                        0x00001c03   Thumb Code    10  uart_module.o(.text.USART1_IRQHandler)
    USART_ClearFlag                          0x00001c0d   Thumb Code     8  ht32f5xxxx_usart.o(.text.USART_ClearFlag)
    USART_GetFIFOStatus                      0x00001c15   Thumb Code    20  ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus)
    USART_GetFlagStatus                      0x00001c29   Thumb Code    10  ht32f5xxxx_usart.o(.text.USART_GetFlagStatus)
    USART_GetIntStatus                       0x00001c33   Thumb Code    10  ht32f5xxxx_usart.o(.text.USART_GetIntStatus)
    USART_Init                               0x00001c3d   Thumb Code   112  ht32f5xxxx_usart.o(.text.USART_Init)
    USART_IntConfig                          0x00001cc9   Thumb Code    20  ht32f5xxxx_usart.o(.text.USART_IntConfig)
    USART_SetTimeOutValue                    0x00001cdd   Thumb Code    16  ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue)
    USART_TXRXTLConfig                       0x00001ced   Thumb Code    18  ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig)
    USART_TxRxCmd                            0x00001cff   Thumb Code    24  ht32f5xxxx_usart.o(.text.USART_TxRxCmd)
    _SPIAPI_IRQHandler                       0x00001d19   Thumb Code   544  spi_module.o(.text._SPIAPI_IRQHandler)
    delay_ms                                 0x000020f5   Thumb Code   312  delay.o(.text.delay_ms)
    delay_us                                 0x00002231   Thumb Code    48  delay.o(.text.delay_us)
    fputc                                    0x00002265   Thumb Code     8  ht32_retarget.o(.text.fputc)
    main                                     0x0000226d   Thumb Code   584  main.o(.text.main)
    rtc                                      0x00002555   Thumb Code   188  main.o(.text.rtc)
    __0printf$6                              0x00002a49   Thumb Code    24  printf6.o(i.__0printf$6)
    __1printf$6                              0x00002a49   Thumb Code     0  printf6.o(i.__0printf$6)
    __2printf                                0x00002a49   Thumb Code     0  printf6.o(i.__0printf$6)
    __0sprintf$6                             0x00002a69   Thumb Code    36  printf6.o(i.__0sprintf$6)
    __1sprintf$6                             0x00002a69   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __2sprintf                               0x00002a69   Thumb Code     0  printf6.o(i.__0sprintf$6)
    __aeabi_errno_addr                       0x00002a91   Thumb Code     4  errno.o(i.__aeabi_errno_addr)
    __rt_errno_addr                          0x00002a91   Thumb Code     0  errno.o(i.__aeabi_errno_addr)
    __scatterload_copy                       0x00002a99   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002aa7   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002aa9   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    free                                     0x00002e15   Thumb Code    80  malloc.o(i.free)
    malloc                                   0x00002e69   Thumb Code    92  malloc.o(i.malloc)
    puts                                     0x00002ed5   Thumb Code    28  puts.o(i.puts)
    __ctype_table                            0x00002ef4   Data         129  ctype_o.o(.constdata)
    Region$$Table$$Base                      0x00003258   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003278   Number         0  anon$$obj.o(Region$$Table)
    __stdout                                 0x20000000   Data           4  stdout.o(.data)
    __microlib_freelist                      0x20000004   Data           4  mvars.o(.data)
    __microlib_freelist_initialised          0x20000008   Data           4  mvars.o(.data)
    SystemCoreClock                          0x20000010   Data           4  system_ht32f5xxxx_03.o(.data.SystemCoreClock)
    gBMC81M001_SERIAL                        0x20000014   Data           4  bmc81m001.o(.data.gBMC81M001_SERIAL)
    readDataBuff                             0x20000018   Data          30  main.o(.data.readDataBuff)
    BMC81M001_Response                       0x20000038   Data         200  bmc81m001.o(.bss.BMC81M001_Response)
    OneNetReciveBuff                         0x20000104   Data         200  bmc81m001.o(.bss.OneNetReciveBuff)
    Systick_count                            0x200001cc   Data           4  delay.o(.bss.Systick_count)
    gSPIAPIState                             0x200002e8   Data          64  spi_module.o(.bss.gSPIAPIState)
    gUART_Rx                                 0x20000350   Data          80  uart_module.o(.bss.gUART_Rx)
    gUART_Tx                                 0x200003a0   Data          80  uart_module.o(.bss.gUART_Tx)
    guUART_RxBuffer                          0x200003f0   Data         640  uart_module.o(.bss.guUART_RxBuffer)
    guUART_TxBuffer                          0x20000670   Data         640  uart_module.o(.bss.guUART_TxBuffer)
    resLength                                0x200008f0   Data           4  bmc81m001.o(.bss.resLength)
    uselessBuff                              0x200008f4   Data         200  bmc81m001.o(.bss.uselessBuff)
    __HT_check_heap                          0x200009c0   Data           0  startup_ht32f5xxxx_03.o(HEAP)
    __HT_check_sp                            0x200009c0   Data           0  startup_ht32f5xxxx_03.o(STACK)
    __heap_base                              0x200009c0   Data           0  startup_ht32f5xxxx_03.o(HEAP)
    __heap_limit                             0x200009c0   Data           0  startup_ht32f5xxxx_03.o(HEAP)
    __initial_sp                             0x20000dc0   Data           0  startup_ht32f5xxxx_03.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_1 (Base: 0x00000000, Size: 0x000032b0, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003278, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000164   Code   RO          476  * RESET               startup_ht32f5xxxx_03.o
    0x00000164   0x00000164   0x00000000   Code   RO         1824  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x00000164   0x00000164   0x00000004   Code   RO         2144    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x00000168   0x00000168   0x00000004   Code   RO         2147    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         2149    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         2151    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x0000016c   0x0000016c   0x00000008   Code   RO         2152    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         2154    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         2156    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x00000174   0x00000174   0x00000004   Code   RO         2145    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x00000178   0x00000178   0x00000024   Code   RO         1837    .text               mc_p.l(memcpya.o)
    0x0000019c   0x0000019c   0x00000024   Code   RO         1839    .text               mc_p.l(memseta.o)
    0x000001c0   0x000001c0   0x00000028   Code   RO         1841    .text               mc_p.l(strstr.o)
    0x000001e8   0x000001e8   0x00000014   Code   RO         1843    .text               mc_p.l(strchr.o)
    0x000001fc   0x000001fc   0x0000000e   Code   RO         1845    .text               mc_p.l(strlen.o)
    0x0000020a   0x0000020a   0x0000001c   Code   RO         1847    .text               mc_p.l(strcmp.o)
    0x00000226   0x00000226   0x00000020   Code   RO         1849    .text               mc_p.l(strspn.o)
    0x00000246   0x00000246   0x0000001a   Code   RO         2142    .text               mc_p.l(atoi.o)
    0x00000260   0x00000260   0x0000003e   Code   RO         2163    .text               mc_p.l(uidiv_div0.o)
    0x0000029e   0x0000029e   0x00000002   PAD
    0x000002a0   0x000002a0   0x00000070   Code   RO         2180    .text               mc_p.l(strtol.o)
    0x00000310   0x00000310   0x00000030   Code   RO         2193    .text               mc_p.l(init.o)
    0x00000340   0x00000340   0x00000008   Code   RO         2201    .text               mc_p.l(ctype_o.o)
    0x00000348   0x00000348   0x000000a6   Code   RO         2229    .text               mc_p.l(_strtoul.o)
    0x000003ee   0x000003ee   0x0000001e   Code   RO         2235    .text               mc_p.l(_chval.o)
    0x0000040c   0x0000040c   0x0000017c   Code   RO          965    .text.AFIO_GPxConfig  ht32f5xxxx_gpio.o
    0x00000588   0x00000588   0x00000024   Code   RO           58    .text.BMC81M001_Init  bmc81m001.o
    0x000005ac   0x000005ac   0x00000094   Code   RO           66    .text.BMC81M001_connectTCP  bmc81m001.o
    0x00000640   0x00000640   0x000000a8   Code   RO           60    .text.BMC81M001_connectToAP  bmc81m001.o
    0x000006e8   0x000006e8   0x000000b8   Code   RO           76    .text.BMC81M001_readBytes  bmc81m001.o
    0x000007a0   0x000007a0   0x000000d4   Code   RO           72    .text.BMC81M001_readDataTcp  bmc81m001.o
    0x00000874   0x00000874   0x000000a8   Code   RO           62    .text.BMC81M001_sendATCommand  bmc81m001.o
    0x0000091c   0x0000091c   0x000000f4   Code   RO           92    .text.BMC81M001_writeBytes  bmc81m001.o
    0x00000a10   0x00000a10   0x000000b8   Code   RO           68    .text.BMC81M001_writeDataTcp  bmc81m001.o
    0x00000ac8   0x00000ac8   0x00000180   Code   RO          243    .text.BMV31T001_Init  bmv31t001.o
    0x00000c48   0x00000c48   0x00000014   Code   RO          261    .text.BMV31T001_isPlaying  bmv31t001.o
    0x00000c5c   0x00000c5c   0x000000b0   Code   RO          253    .text.BMV31T001_playStop  bmv31t001.o
    0x00000d0c   0x00000d0c   0x000000cc   Code   RO          249    .text.BMV31T001_playVoice  bmv31t001.o
    0x00000dd8   0x00000dd8   0x00000020   Code   RO          269    .text.BMV31T001_setPower  bmv31t001.o
    0x00000df8   0x00000df8   0x0000015c   Code   RO          245    .text.BMV31T001_setVolume  bmv31t001.o
    0x00000f54   0x00000f54   0x00000014   Code   RO          362    .text.Buffer_GetLength  ht32_usbd_class.o
    0x00000f68   0x00000f68   0x0000000c   Code   RO          348    .text.Buffer_Init   ht32_usbd_class.o
    0x00000f74   0x00000f74   0x00000022   Code   RO          350    .text.Buffer_ReadByte  ht32_usbd_class.o
    0x00000f96   0x00000f96   0x00000044   Code   RO          356    .text.Buffer_Write  ht32_usbd_class.o
    0x00000fda   0x00000fda   0x0000002a   Code   RO          352    .text.Buffer_WriteByte  ht32_usbd_class.o
    0x00001004   0x00001004   0x0000000c   Code   RO          358    .text.Buffer_isEmpty  ht32_usbd_class.o
    0x00001010   0x00001010   0x0000009c   Code   RO          699    .text.CKCU_GetPeripFrequency  ht32f5xxxx_ckcu.o
    0x000010ac   0x000010ac   0x00000038   Code   RO          725    .text.CKCU_PeripClockConfig  ht32f5xxxx_ckcu.o
    0x000010e4   0x000010e4   0x00000004   Code   RO          949    .text.GPIO_ClearOutBits  ht32f5xxxx_gpio.o
    0x000010e8   0x000010e8   0x00000014   Code   RO          929    .text.GPIO_DirectionConfig  ht32f5xxxx_gpio.o
    0x000010fc   0x000010fc   0x00000022   Code   RO          931    .text.GPIO_PullResistorConfig  ht32f5xxxx_gpio.o
    0x0000111e   0x0000111e   0x00000050   Code   RO         1679    .text.HT32F_DVB_COMInit  ht32_board.o
    0x0000116e   0x0000116e   0x00000002   PAD
    0x00001170   0x00001170   0x00000020   Code   RO           42    .text.HardFault_Handler  ht32f5xxxx_01_it.o
    0x00001190   0x00001190   0x00000010   Code   RO          146    .text.I2C0_IRQHandler  i2c_master.o
    0x000011a0   0x000011a0   0x0000000a   Code   RO          150    .text.I2C1_IRQHandler  i2c_master.o
    0x000011aa   0x000011aa   0x00000002   PAD
    0x000011ac   0x000011ac   0x00000210   Code   RO          148    .text.I2CMaster_IRQHandler  i2c_master.o
    0x000013bc   0x000013bc   0x00000010   Code   RO          995    .text.I2C_AckCmd    ht32f5xxxx_i2c.o
    0x000013cc   0x000013cc   0x00000004   Code   RO         1011    .text.I2C_ClearFlag  ht32f5xxxx_i2c.o
    0x000013d0   0x000013d0   0x00000012   Code   RO          987    .text.I2C_Cmd       ht32f5xxxx_i2c.o
    0x000013e2   0x000013e2   0x0000000a   Code   RO          989    .text.I2C_GenerateSTOP  ht32f5xxxx_i2c.o
    0x000013ec   0x000013ec   0x0000000a   Code   RO         1007    .text.I2C_GetFlagStatus  ht32f5xxxx_i2c.o
    0x000013f6   0x000013f6   0x00000014   Code   RO          991    .text.I2C_IntConfig  ht32f5xxxx_i2c.o
    0x0000140a   0x0000140a   0x00000016   Code   RO         1005    .text.I2C_ReadRegister  ht32f5xxxx_i2c.o
    0x00001420   0x00001420   0x00000006   Code   RO         1003    .text.I2C_ReceiveData  ht32f5xxxx_i2c.o
    0x00001426   0x00001426   0x00000004   Code   RO         1001    .text.I2C_SendData  ht32f5xxxx_i2c.o
    0x0000142a   0x0000142a   0x00000026   Code   RO          999    .text.I2C_TargetAddressConfig  ht32f5xxxx_i2c.o
    0x00001450   0x00001450   0x00000002   Code   RO           40    .text.NMI_Handler   ht32f5xxxx_01_it.o
    0x00001452   0x00001452   0x00000002   Code   RO           46    .text.PendSV_Handler  ht32f5xxxx_01_it.o
    0x00001454   0x00001454   0x0000000a   Code   RO          230    .text.QSPI_IRQHandler  spi_module.o
    0x0000145e   0x0000145e   0x00000020   Code   RO         1630    .text.RETARGET_Configuration  ht32_retarget.o
    0x0000147e   0x0000147e   0x00000002   PAD
    0x00001480   0x00001480   0x0000002c   Code   RO         1656    .text.SERIAL_PutChar  ht32_serial.o
    0x000014ac   0x000014ac   0x0000000a   Code   RO          224    .text.SPI0_IRQHandler  spi_module.o
    0x000014b6   0x000014b6   0x0000000a   Code   RO          228    .text.SPI1_IRQHandler  spi_module.o
    0x000014c0   0x000014c0   0x00000004   Code   RO         1311    .text.SPI_ClearFlag  ht32f5xxxx_spi.o
    0x000014c4   0x000014c4   0x00000012   Code   RO         1309    .text.SPI_GetFIFOStatus  ht32f5xxxx_spi.o
    0x000014d6   0x000014d6   0x0000000a   Code   RO         1307    .text.SPI_GetFlagStatus  ht32f5xxxx_spi.o
    0x000014e0   0x000014e0   0x00000014   Code   RO         1305    .text.SPI_IntConfig  ht32f5xxxx_spi.o
    0x000014f4   0x000014f4   0x00000006   Code   RO         1301    .text.SPI_ReceiveData  ht32f5xxxx_spi.o
    0x000014fa   0x000014fa   0x00000004   Code   RO         1299    .text.SPI_SendData  ht32f5xxxx_spi.o
    0x000014fe   0x000014fe   0x00000002   Code   RO           44    .text.SVC_Handler   ht32f5xxxx_01_it.o
    0x00001500   0x00001500   0x00000154   Code   RO           16    .text.ScanUnsignedDecimal  main.o
    0x00001654   0x00001654   0x00000010   Code   RO          317    .text.SysTick_Handler  delay.o
    0x00001664   0x00001664   0x0000017c   Code   RO          462    .text.SystemInit    system_ht32f5xxxx_03.o
    0x000017e0   0x000017e0   0x000000d8   Code   RO           10    .text.Time_Regulate  main.o
    0x000018b8   0x000018b8   0x0000000a   Code   RO          189    .text.UART0_UART2_IRQHandler  uart_module.o
    0x000018c2   0x000018c2   0x00000010   Code   RO          191    .text.UART1_UART3_IRQHandler  uart_module.o
    0x000018d2   0x000018d2   0x00000002   PAD
    0x000018d4   0x000018d4   0x00000010   Code   RO          175    .text.UARTM_GetReadBufferLength  uart_module.o
    0x000018e4   0x000018e4   0x000002a8   Code   RO          165    .text.UARTM_Init    uart_module.o
    0x00001b8c   0x00001b8c   0x00000014   Code   RO          171    .text.UARTM_ReadByte  uart_module.o
    0x00001ba0   0x00001ba0   0x00000058   Code   RO          169    .text.UARTM_Write   uart_module.o
    0x00001bf8   0x00001bf8   0x0000000a   Code   RO          183    .text.USART0_IRQHandler  uart_module.o
    0x00001c02   0x00001c02   0x0000000a   Code   RO          187    .text.USART1_IRQHandler  uart_module.o
    0x00001c0c   0x00001c0c   0x00000008   Code   RO         1453    .text.USART_ClearFlag  ht32f5xxxx_usart.o
    0x00001c14   0x00001c14   0x00000014   Code   RO         1475    .text.USART_GetFIFOStatus  ht32f5xxxx_usart.o
    0x00001c28   0x00001c28   0x0000000a   Code   RO         1449    .text.USART_GetFlagStatus  ht32f5xxxx_usart.o
    0x00001c32   0x00001c32   0x0000000a   Code   RO         1451    .text.USART_GetIntStatus  ht32f5xxxx_usart.o
    0x00001c3c   0x00001c3c   0x0000008c   Code   RO         1441    .text.USART_Init    ht32f5xxxx_usart.o
    0x00001cc8   0x00001cc8   0x00000014   Code   RO         1455    .text.USART_IntConfig  ht32f5xxxx_usart.o
    0x00001cdc   0x00001cdc   0x00000010   Code   RO         1471    .text.USART_SetTimeOutValue  ht32f5xxxx_usart.o
    0x00001cec   0x00001cec   0x00000012   Code   RO         1469    .text.USART_TXRXTLConfig  ht32f5xxxx_usart.o
    0x00001cfe   0x00001cfe   0x00000018   Code   RO         1457    .text.USART_TxRxCmd  ht32f5xxxx_usart.o
    0x00001d16   0x00001d16   0x00000002   PAD
    0x00001d18   0x00001d18   0x00000224   Code   RO          226    .text._SPIAPI_IRQHandler  spi_module.o
    0x00001f3c   0x00001f3c   0x000001b8   Code   RO          185    .text._UARTM_IRQHandler  uart_module.o
    0x000020f4   0x000020f4   0x0000013c   Code   RO          321    .text.delay_ms      delay.o
    0x00002230   0x00002230   0x00000034   Code   RO          319    .text.delay_us      delay.o
    0x00002264   0x00002264   0x00000008   Code   RO         1640    .text.fputc         ht32_retarget.o
    0x0000226c   0x0000226c   0x000002e8   Code   RO            2    .text.main          main.o
    0x00002554   0x00002554   0x00000128   Code   RO            8    .text.rtc           main.o
    0x0000267c   0x0000267c   0x000003cc   Code   RO          247    .text.writeCmd      bmv31t001.o
    0x00002a48   0x00002a48   0x00000020   Code   RO         2008    i.__0printf$6       mc_p.l(printf6.o)
    0x00002a68   0x00002a68   0x00000028   Code   RO         2010    i.__0sprintf$6      mc_p.l(printf6.o)
    0x00002a90   0x00002a90   0x00000008   Code   RO         2173    i.__aeabi_errno_addr  mc_p.l(errno.o)
    0x00002a98   0x00002a98   0x0000000e   Code   RO         2239    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00002aa6   0x00002aa6   0x00000002   Code   RO         2240    i.__scatterload_null  mc_p.l(handlers.o)
    0x00002aa8   0x00002aa8   0x0000000e   Code   RO         2241    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00002ab6   0x00002ab6   0x00000002   PAD
    0x00002ab8   0x00002ab8   0x00000304   Code   RO         2015    i._printf_core      mc_p.l(printf6.o)
    0x00002dbc   0x00002dbc   0x00000020   Code   RO         2016    i._printf_post_padding  mc_p.l(printf6.o)
    0x00002ddc   0x00002ddc   0x0000002c   Code   RO         2017    i._printf_pre_padding  mc_p.l(printf6.o)
    0x00002e08   0x00002e08   0x0000000a   Code   RO         2019    i._sputc            mc_p.l(printf6.o)
    0x00002e12   0x00002e12   0x00000002   PAD
    0x00002e14   0x00002e14   0x00000054   Code   RO         2114    i.free              mc_p.l(malloc.o)
    0x00002e68   0x00002e68   0x0000006c   Code   RO         2115    i.malloc            mc_p.l(malloc.o)
    0x00002ed4   0x00002ed4   0x00000020   Code   RO         1827    i.puts              mc_p.l(puts.o)
    0x00002ef4   0x00002ef4   0x00000081   Data   RO         2202    .constdata          mc_p.l(ctype_o.o)
    0x00002f75   0x00002f75   0x00000003   PAD
    0x00002f78   0x00002f78   0x00000004   Data   RO         2203    .constdata          mc_p.l(ctype_o.o)
    0x00002f7c   0x00002f7c   0x000000c8   Data   RO          102    .rodata..L__const.BMC81M001_connectTCP.cmd  bmc81m001.o
    0x00003044   0x00003044   0x000000c8   Data   RO          100    .rodata..L__const.BMC81M001_connectToAP.cmd  bmc81m001.o
    0x0000310c   0x0000310c   0x000000c8   Data   RO          103    .rodata..L__const.BMC81M001_writeDataTcp.cmd  bmc81m001.o
    0x000031d4   0x000031d4   0x0000006e   Data   RO           26    .rodata.str1.1      main.o
    0x00003242   0x00003242   0x00000014   Data   RO          101    .rodata.str1.1      bmc81m001.o
    0x00003256   0x00003256   0x00000002   PAD
    0x00003258   0x00003258   0x00000020   Data   RO         2238    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003278, Size: 0x00000038, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003278   0x00000004   Data   RW         2158    .data               mc_p.l(stdout.o)
    0x20000004   0x0000327c   0x00000004   Data   RW         2171    .data               mc_p.l(mvars.o)
    0x20000008   0x00003280   0x00000004   Data   RW         2172    .data               mc_p.l(mvars.o)
    0x2000000c   0x00003284   0x00000004   Data   RW         2176    .data               mc_p.l(errno.o)
    0x20000010   0x00003288   0x00000004   Data   RW          466    .data.SystemCoreClock  system_ht32f5xxxx_03.o
    0x20000014   0x0000328c   0x00000004   Data   RW           98    .data.gBMC81M001_SERIAL  bmc81m001.o
    0x20000018   0x00003290   0x0000001e   Data   RW           19    .data.readDataBuff  main.o


    Execution Region ER_ZI (Exec base: 0x20000038, Load base: 0x000032b0, Size: 0x00000d88, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000038        -       0x000000c8   Zero   RW          104    .bss.BMC81M001_Response  bmc81m001.o
    0x20000100        -       0x00000004   Zero   RW           48    .bss.HardFault_Handler.gIsContinue  ht32f5xxxx_01_it.o
    0x20000104        -       0x000000c8   Zero   RW          112    .bss.OneNetReciveBuff  bmc81m001.o
    0x200001cc        -       0x00000004   Zero   RW          339    .bss.Systick_count  delay.o
    0x200001d0        -       0x00000004   Zero   RW          289    .bss._flashAddr     bmv31t001.o
    0x200001d4        -       0x00000001   Zero   RW          288    .bss._isKey         bmv31t001.o
    0x200001d5        -       0x00000001   Zero   RW          287    .bss._keyValue      bmv31t001.o
    0x200001d6   0x000032b0   0x00000002   PAD
    0x200001d8        -       0x00000110   Zero   RW          156    .bss.gI2CMasterState  i2c_master.o
    0x200002e8        -       0x00000040   Zero   RW          232    .bss.gSPIAPIState   spi_module.o
    0x20000328        -       0x00000028   Zero   RW          193    .bss.gUARTModuleState  uart_module.o
    0x20000350        -       0x00000050   Zero   RW          196    .bss.gUART_Rx       uart_module.o
    0x200003a0        -       0x00000050   Zero   RW          194    .bss.gUART_Tx       uart_module.o
    0x200003f0        -       0x00000280   Zero   RW          197    .bss.guUART_RxBuffer  uart_module.o
    0x20000670        -       0x00000280   Zero   RW          195    .bss.guUART_TxBuffer  uart_module.o
    0x200008f0        -       0x00000004   Zero   RW           99    .bss.resLength      bmc81m001.o
    0x200008f4        -       0x000000c8   Zero   RW          113    .bss.uselessBuff    bmc81m001.o
    0x200009bc   0x000032b0   0x00000004   PAD
    0x200009c0        -       0x00000000   Zero   RW          475    HEAP                startup_ht32f5xxxx_03.o
    0x200009c0        -       0x00000400   Zero   RW          474    STACK               startup_ht32f5xxxx_03.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1344         88        620          4        604      19412   bmc81m001.o
      2136         36          0          0          6      21092   bmv31t001.o
       384         12          0          0          4       5255   delay.o
        80          0          0          0          0      12195   ht32_board.o
        40          0          0          0          0       3379   ht32_retarget.o
        44          4          0          0          0       1310   ht32_serial.o
       188          0          0          0          0      11460   ht32_usbd_class.o
        38          4          0          0          4        924   ht32f5xxxx_01_it.o
       212         20          0          0          0      17757   ht32f5xxxx_ckcu.o
       438          4          0          0          0      11492   ht32f5xxxx_gpio.o
       148          0          0          0          0       8968   ht32f5xxxx_i2c.o
        62          0          0          0          0       8231   ht32f5xxxx_spi.o
       266         28          0          0          0      10338   ht32f5xxxx_usart.o
       554         32          0          0        272      10800   i2c_master.o
      1596        408        110         30          0      10630   main.o
       578          4          0          0         64      10665   spi_module.o
       356        238          0          0       1024        752   startup_ht32f5xxxx_03.o
       380         16          0          4          0       3203   system_ht32f5xxxx_03.o
      1290         54          0          0       1480      10272   uart_module.o

    ----------------------------------------------------------------------
     10144        948        764         40       3464     178135   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          2          2          6          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        30          0          0          0          0         60   _chval.o
       166          0          0          0          0         84   _strtoul.o
        26          0          0          0          0         72   atoi.o
         8          4        133          0          0         60   ctype_o.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
         8          4          0          4          0         60   errno.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
       192         20          0          0          0        144   malloc.o
        36          0          0          0          0         60   memcpya.o
        36          0          0          0          0        100   memseta.o
         0          0          0          8          0          0   mvars.o
       930         16          0          0          0        468   printf6.o
        32          4          0          0          0         68   puts.o
         0          0          0          4          0          0   stdout.o
        20          0          0          0          0         60   strchr.o
        28          0          0          0          0         68   strcmp.o
        14          0          0          0          0         60   strlen.o
        32          0          0          0          0         72   strspn.o
        40          0          0          0          0         72   strstr.o
       112          4          0          0          0         76   strtol.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
      1876         70        136         16          0       1724   Library Totals
         6          0          3          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1870         70        133         16          0       1724   mc_p.l

    ----------------------------------------------------------------------
      1876         70        136         16          0       1724   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12020       1018        900         56       3464     178835   Grand Totals
     12020       1018        900         56       3464     178835   ELF Image Totals
     12020       1018        900         56          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12920 (  12.62kB)
    Total RW  Size (RW Data + ZI Data)              3520 (   3.44kB)
    Total ROM Size (Code + RO Data + RW Data)      12976 (  12.67kB)

==============================================================================

