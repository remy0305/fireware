Component: Arm Compiler for Embedded 6.23 Tool: armlink [5f102400]

==============================================================================

Section Cross References

    main.o(.text.main) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    main.o(.text.main) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_Init) for BMV31T001_Init
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_setPower) for BMV31T001_setPower
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_initAudioUpdate) for BMV31T001_initAudioUpdate
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_isUpdateBegin) for BMV31T001_isUpdateBegin
    main.o(.text.main) refers to bmv31t001.o(.text.BMV31T001_executeUpdate) for BMV31T001_executeUpdate
    main.o(.text.main) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.text.HardFault_Handler) refers to ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.ARM.exidx.text.HardFault_Handler) refers to ht32f5xxxx_01_it.o(.text.HardFault_Handler) for [Anonymous Symbol]
    ht32f5xxxx_01_it.o(.text.USB_IRQHandler) refers to ht32_usbd_core.o(.text.USBDCore_IRQHandler) for USBDCore_IRQHandler
    ht32f5xxxx_01_it.o(.text.USB_IRQHandler) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    ht32f5xxxx_01_it.o(.ARM.exidx.text.USB_IRQHandler) refers to ht32f5xxxx_01_it.o(.text.USB_IRQHandler) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_reset) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.ARM.exidx.text.BMV31T001_reset) refers to bmv31t001.o(.text.BMV31T001_reset) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    bmv31t001.o(.text.BMV31T001_Init) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_Init) refers to bmv31t001.o(.bss._flashAddr) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_Init) refers to bmv31t001.o(.text.BMV31T001_Init) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_setVolume) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_setVolume) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setVolume) refers to bmv31t001.o(.text.BMV31T001_setVolume) for [Anonymous Symbol]
    bmv31t001.o(.text.writeCmd) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.writeCmd) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.writeCmd) refers to bmv31t001.o(.text.writeCmd) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playVoice) refers to bmv31t001.o(.text.writeCmd) for writeCmd
    bmv31t001.o(.text.BMV31T001_playVoice) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playVoice) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playVoice) refers to bmv31t001.o(.text.BMV31T001_playVoice) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playSentence) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playSentence) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playSentence) refers to bmv31t001.o(.text.BMV31T001_playSentence) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playStop) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playStop) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playStop) refers to bmv31t001.o(.text.BMV31T001_playStop) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playPause) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playPause) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playPause) refers to bmv31t001.o(.text.BMV31T001_playPause) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playContinue) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playContinue) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playContinue) refers to bmv31t001.o(.text.BMV31T001_playContinue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_playRepeat) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_playRepeat) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.BMV31T001_playRepeat) refers to bmv31t001.o(.text.BMV31T001_playRepeat) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isPlaying) refers to bmv31t001.o(.text.BMV31T001_isPlaying) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to delay.o(.text.Get_Sys_ms) for Get_Sys_ms
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.last_tick) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.lastKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss.BMV31T001_scanKey.step) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_scanKey) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_scanKey) refers to bmv31t001.o(.text.BMV31T001_scanKey) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_isKeyAction) refers to bmv31t001.o(.bss._isKey) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isKeyAction) refers to bmv31t001.o(.text.BMV31T001_isKeyAction) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_readKeyValue) refers to bmv31t001.o(.bss._keyValue) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_readKeyValue) refers to bmv31t001.o(.text.BMV31T001_readKeyValue) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_setPower) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setPower) refers to bmv31t001.o(.text.BMV31T001_setPower) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_setLED) refers to bmv31t001.o(.text.BMV31T001_setLED) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_initAudioUpdate) refers to usb_vcp.o(.text.USBSerial_begin) for USBSerial_begin
    bmv31t001.o(.ARM.exidx.text.BMV31T001_initAudioUpdate) refers to bmv31t001.o(.text.BMV31T001_initAudioUpdate) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_isUpdateBegin) refers to usb_vcp.o(.text.USBSerial_available) for USBSerial_available
    bmv31t001.o(.ARM.exidx.text.BMV31T001_isUpdateBegin) refers to bmv31t001.o(.text.BMV31T001_isUpdateBegin) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_write_byte) for USBSerial_write_byte
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_available) for USBSerial_available
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to usb_vcp.o(.text.USBSerial_readBytes) for USBSerial_readBytes
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to delay.o(.text.delay_ms) for delay_ms
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.rxBuffer) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.BMV31T001_executeUpdate.dataLength) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.rodata.crc_table) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.dataLength) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.programEntry.retransmissionTimes) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.ack.i) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for SPIFlashWriteEnable
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for SPIFlashWaitForWriteEnd
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.SPIFlashPageWrite) for SPIFlashPageWrite
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.sumDataCnt) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.recAudioData.remainder) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss._flashAddr) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.dummyClocks.i) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.sendData) for sendData
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.deviceSFDPBuf) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.switchSPIMode.correctFlag) for [Anonymous Symbol]
    bmv31t001.o(.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.bss.switchSPIMode.retransmissionTimes) for [Anonymous Symbol]
    bmv31t001.o(.ARM.exidx.text.BMV31T001_executeUpdate) refers to bmv31t001.o(.text.BMV31T001_executeUpdate) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for SPIFlashWriteEnable
    bmv31t001.o(.text.SPIFlashPageWrite) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for SPIFlashWaitForWriteEnd
    bmv31t001.o(.ARM.exidx.text.SPIFlashPageWrite) refers to bmv31t001.o(.text.SPIFlashPageWrite) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashWriteEnable) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.SPIFlashWriteEnable) refers to bmv31t001.o(.text.SPIFlashWriteEnable) for [Anonymous Symbol]
    bmv31t001.o(.text.SPIFlashWaitForWriteEnd) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.SPIFlashWaitForWriteEnd) refers to bmv31t001.o(.text.SPIFlashWaitForWriteEnd) for [Anonymous Symbol]
    bmv31t001.o(.text.sendData) refers to delay.o(.text.delay_us) for delay_us
    bmv31t001.o(.ARM.exidx.text.sendData) refers to bmv31t001.o(.text.sendData) for [Anonymous Symbol]
    delay.o(.text.Get_Sys_ms) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.Get_Sys_ms) refers to delay.o(.text.Get_Sys_ms) for [Anonymous Symbol]
    delay.o(.text.Get_Sys_us) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    delay.o(.text.Get_Sys_us) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.Get_Sys_us) refers to delay.o(.text.Get_Sys_us) for [Anonymous Symbol]
    delay.o(.text.SysTick_Handler) refers to delay.o(.bss.Systick_count) for Systick_count
    delay.o(.ARM.exidx.text.SysTick_Handler) refers to delay.o(.text.SysTick_Handler) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_us) refers to delay.o(.text.delay_us) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_ms) refers to delay.o(.text.delay_ms) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_1) refers to delay.o(.text.rand_0_1) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_3) refers to delay.o(.text.rand_0_3) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_7) refers to delay.o(.text.rand_0_7) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_15) refers to delay.o(.text.rand_0_15) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_31) refers to delay.o(.text.rand_0_31) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_63) refers to delay.o(.text.rand_0_63) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.rand_0_127) refers to delay.o(.text.rand_0_127) for [Anonymous Symbol]
    delay.o(.ARM.exidx.text.delay_MS) refers to delay.o(.text.delay_MS) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Init) refers to ht32_usbd_class.o(.text.Buffer_Init) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_ReadByte) refers to ht32_usbd_class.o(.text.Buffer_ReadByte) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_WriteByte) refers to ht32_usbd_class.o(.text.Buffer_WriteByte) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Read) refers to ht32_usbd_class.o(.text.Buffer_Read) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Write) refers to ht32_usbd_class.o(.text.Buffer_Write) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_isEmpty) refers to ht32_usbd_class.o(.text.Buffer_isEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_isFull) refers to ht32_usbd_class.o(.text.Buffer_isFull) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_GetLength) refers to ht32_usbd_class.o(.text.Buffer_GetLength) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.Buffer_Discard) refers to ht32_usbd_class.o(.text.Buffer_Discard) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.bss.gRingDataBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint3) for USBDClass_Endpoint3
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint2) for USBDClass_Endpoint2
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint1) for USBDClass_Endpoint1
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Request) for USBDClass_Request
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Reset) for USBDClass_Reset
    ht32_usbd_class.o(.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_MainRoutine) for USBDClass_MainRoutine
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Init) refers to ht32_usbd_class.o(.text.USBDClass_Init) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_MainRoutine) refers to ht32_usbd_class.o(.text.USBDClass_MainRoutine) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Reset) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Reset) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Reset) refers to ht32_usbd_class.o(.text.USBDClass_Reset) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Request) refers to ht32_usbd_class.o(.bss.USBDClassVCPLineCoding) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Request) refers to ht32_usbd_class.o(.text.USBDClass_Request) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint1) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint1) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint1) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint2) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint2) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for USBD_EPTReadOUTData
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.bss.gOutputDataBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint3) refers to ht32_usbd_class.o(.text.USBDClass_Endpoint3) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.data.gIsCDCEPINEmpty) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    ht32_usbd_class.o(.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.bss.gIsZLP_Require) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USBDClass_CDC_Tx) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_CDC_avilable) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USB_CDC_avilable) refers to ht32_usbd_class.o(.text.USB_CDC_avilable) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Serial_rx) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for USBD_EnableINT
    ht32_usbd_class.o(.text.USB_Serial_rx) refers to ht32_usbd_class.o(.bss.gRingBuffer) for [Anonymous Symbol]
    ht32_usbd_class.o(.ARM.exidx.text.USB_Serial_rx) refers to ht32_usbd_class.o(.text.USB_Serial_rx) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Connected) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for USBDCore_GetStatus
    ht32_usbd_class.o(.ARM.exidx.text.USB_Connected) refers to ht32_usbd_class.o(.text.USB_Connected) for [Anonymous Symbol]
    ht32_usbd_class.o(.text.USB_Configured) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for USBDCore_GetStatus
    ht32_usbd_class.o(.ARM.exidx.text.USB_Configured) refers to ht32_usbd_class.o(.text.USB_Configured) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.data.gpStringDesc) for gpStringDesc
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.rodata.guUSB_ConfnDesc) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.rodata.guUSB_DeviceDesc) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.ARM.exidx.text.USBDDesc_Init) refers to ht32_usbd_descriptor.o(.text.USBDDesc_Init) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescLANGID) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescManufacture) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.rodata.guUSB_StringDescProduct) for [Anonymous Symbol]
    ht32_usbd_descriptor.o(.data.gpStringDesc) refers to ht32_usbd_descriptor.o(.data.guUSB_StringDescSerialNum) for [Anonymous Symbol]
    usb_init.o(.text.USBCKCU_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    usb_init.o(.ARM.exidx.text.USBCKCU_Configuration) refers to usb_init.o(.text.USBCKCU_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for CKCU_USBPLLInit
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for CKCU_USBPLLCmd
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for CKCU_GetClockReadyStatus
    usb_init.o(.text.USB_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for CKCU_USBClockConfig
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_descriptor.o(.text.USBDDesc_Init) for USBDDesc_Init
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_class.o(.text.USBDClass_Init) for USBDClass_Init
    usb_init.o(.text.USB_Configuration) refers to ht32_usbd_core.o(.text.USBDCore_Init) for USBDCore_Init
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.text.Suspend) for Suspend
    usb_init.o(.text.USB_Configuration) refers to usb_init.o(.bss.gUSBDriver) for gUSBDriver
    usb_init.o(.ARM.exidx.text.USB_Configuration) refers to usb_init.o(.text.USB_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for CKCU_USBPLLInit
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for CKCU_USBPLLCmd
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for CKCU_GetClockReadyStatus
    usb_init.o(.text.USBPLL_Configuration) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for CKCU_USBClockConfig
    usb_init.o(.ARM.exidx.text.USBPLL_Configuration) refers to usb_init.o(.text.USBPLL_Configuration) for [Anonymous Symbol]
    usb_init.o(.text.Suspend) refers to usb_init.o(.data.gIsLowPowerAllowed) for gIsLowPowerAllowed
    usb_init.o(.text.Suspend) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.ARM.exidx.text.Suspend) refers to usb_init.o(.text.Suspend) for [Anonymous Symbol]
    usb_init.o(.text.USB_Serial) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    usb_init.o(.text.USB_Serial) refers to usb_init.o(.text.USB_Configuration) for USB_Configuration
    usb_init.o(.text.USB_Serial) refers to ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd) for USBD_DPpullupCmd
    usb_init.o(.text.USB_Serial) refers to ht32_usbd_core.o(.text.USBDCore_MainRoutine) for USBDCore_MainRoutine
    usb_init.o(.text.USB_Serial) refers to usb_init.o(.bss.gUSBCore) for gUSBCore
    usb_init.o(.ARM.exidx.text.USB_Serial) refers to usb_init.o(.text.USB_Serial) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_begin) refers to usb_init.o(.text.USB_Serial) for USB_Serial
    usb_vcp.o(.text.USBSerial_begin) refers to usb_vcp.o(.bss._hasBegun) for [Anonymous Symbol]
    usb_vcp.o(.ARM.exidx.text.USBSerial_begin) refers to usb_vcp.o(.text.USBSerial_begin) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_end) refers to usb_vcp.o(.bss._hasBegun) for [Anonymous Symbol]
    usb_vcp.o(.ARM.exidx.text.USBSerial_end) refers to usb_vcp.o(.text.USBSerial_end) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_available) refers to ht32_usbd_class.o(.text.USB_CDC_avilable) for USB_CDC_avilable
    usb_vcp.o(.ARM.exidx.text.USBSerial_available) refers to usb_vcp.o(.text.USBSerial_available) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_readBytes) refers to ht32_usbd_class.o(.text.USB_Serial_rx) for USB_Serial_rx
    usb_vcp.o(.ARM.exidx.text.USBSerial_readBytes) refers to usb_vcp.o(.text.USBSerial_readBytes) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USB_Connected) for USB_Connected
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USB_Configured) for USB_Configured
    usb_vcp.o(.text.USBSerial_write_byte) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for USBDClass_CDC_Tx
    usb_vcp.o(.ARM.exidx.text.USBSerial_write_byte) refers to usb_vcp.o(.text.USBSerial_write_byte) for [Anonymous Symbol]
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USB_Connected) for USB_Connected
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USB_Configured) for USB_Configured
    usb_vcp.o(.text.USBSerial_write) refers to ht32_usbd_class.o(.text.USBDClass_CDC_Tx) for USBDClass_CDC_Tx
    usb_vcp.o(.ARM.exidx.text.USBSerial_write) refers to usb_vcp.o(.text.USBSerial_write) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for [Anonymous Symbol]
    system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.data.SystemCoreClock) for SystemCoreClock
    system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    startup_ht32f5xxxx_03.o(RESET) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.HardFault_Handler) for HardFault_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to delay.o(.text.SysTick_Handler) for SysTick_Handler
    startup_ht32f5xxxx_03.o(RESET) refers to ht32f5xxxx_01_it.o(.text.USB_IRQHandler) for USB_IRQHandler
    startup_ht32f5xxxx_03.o(RESET) refers to system_ht32f5xxxx_03.o(.text.SystemInit) for SystemInit
    startup_ht32f5xxxx_03.o(RESET) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for USBD_Init
    ht32_usbd_core.o(.text.USBDCore_Init) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init) refers to ht32_usbd_core.o(.text.USBDCore_Init) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for USBD_GetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for USBD_ClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for USBD_PowerOff
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for USBD_DeInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for USBD_EPTInit
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for USBD_EnableINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for USBD_EPTGetINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for USBD_ReadSETUPData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for USBD_EPTClearHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for USBD_EPTClearDTG
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for USBD_EPTGetBufferLen
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for USBD_EPTWriteINData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for USBD_EPTSendSTALL
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for USBD_EPTClearINT
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for USBD_EPTReadOUTData
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for USBD_GetEPTnINTNumber
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for USBD_EPTGetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for USBD_EPTSetHalt
    ht32_usbd_core.o(.text.USBDCore_IRQHandler) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for USBD_SetAddress
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler) refers to ht32_usbd_core.o(.text.USBDCore_IRQHandler) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_MainRoutine) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for USBD_PowerUp
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine) refers to ht32_usbd_core.o(.text.USBDCore_MainRoutine) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend) refers to ht32_usbd_core.o(.text.USBDCore_IsSuspend) for [Anonymous Symbol]
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature) refers to ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for USBD_PowerOn
    ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for USBD_RemoteWakeup
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup) refers to ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup) for [Anonymous Symbol]
    ht32_usbd_core.o(.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.bss.pUSBCore) for pUSBCore
    ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus) refers to ht32_usbd_core.o(.text.USBDCore_GetStatus) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.data.Data) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.SDIV32) for SDIV32
    ht32_cm0plus_misc.o(.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.bss.UDIV32) for UDIV32
    ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init) refers to ht32_cm0plus_misc.o(.text.DIV32_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData2) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.bss.Rand_Get) for Rand_Get
    ht32_cm0plus_misc.o(.text.Rand_Init) refers to ht32_cm0plus_misc.o(.rodata.RandData) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init) refers to ht32_cm0plus_misc.o(.text.Rand_Init) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable) refers to ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig) refers to ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler) refers to ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd) refers to ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig) refers to ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue) refers to ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue) for [Anonymous Symbol]
    ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT) refers to ht32_cm0plus_misc.o(.text.RBIT) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.text.ADC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit) refers to ht32f5xxxx_adc.o(.text.ADC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset) refers to ht32f5xxxx_adc.o(.text.ADC_Reset) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd) refers to ht32f5xxxx_adc.o(.text.ADC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig) refers to ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig) refers to ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd) refers to ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData) refers to ht32f5xxxx_adc.o(.text.ADC_GetConversionData) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig) refers to ht32f5xxxx_adc.o(.text.ADC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit) refers to ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus) refers to ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig) refers to ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig) refers to ht32f5xxxx_adc.o(.text.ADC_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd) refers to ht32f5xxxx_adc.o(.text.ADC_VREFCmd) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig) refers to ht32f5xxxx_adc.o(.text.ADC_VREFConfig) for [Anonymous Symbol]
    ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd) refers to ht32f5xxxx_adc.o(.text.ADC_MVDDACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AES_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit) refers to ht32f5xxxx_aes.o(.text.AES_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush) refers to ht32f5xxxx_aes.o(.text.AES_FIFOFlush) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd) refers to ht32f5xxxx_aes.o(.text.AES_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey) refers to ht32f5xxxx_aes.o(.text.AES_StartKey) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init) refers to ht32f5xxxx_aes.o(.text.AES_ECB_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig) refers to ht32f5xxxx_aes.o(.text.AES_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init) refers to ht32f5xxxx_aes.o(.text.AES_CBC_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init) refers to ht32f5xxxx_aes.o(.text.AES_CTR_Init) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd) refers to ht32f5xxxx_aes.o(.text.AES_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus) refers to ht32f5xxxx_aes.o(.text.AES_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData) refers to ht32f5xxxx_aes.o(.text.AES_SetInputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData) refers to ht32f5xxxx_aes.o(.text.AES_GetOutputData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable) refers to ht32f5xxxx_aes.o(.text.AES_SetKeyTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable) refers to ht32f5xxxx_aes.o(.text.AES_SetVectorTable) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData) refers to ht32f5xxxx_aes.o(.text._AES_CryptData) for [Anonymous Symbol]
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32OutputIndex) for gu32OutputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32OutputBuff) for gpu32OutputBuff
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputIndex) for gu32InputIndex
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gu32InputSize) for gu32InputSize
    ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.bss.gpu32InputBuff) for gpu32InputBuff
    ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler) refers to ht32f5xxxx_aes.o(.text.AESCore_IRQHandler) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.text.BFTM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit) refers to ht32f5xxxx_bftm.o(.text.BFTM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd) refers to ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig) refers to ht32f5xxxx_bftm.o(.text.BFTM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus) refers to ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag) refers to ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED) refers to ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady) refers to ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady) for [Anonymous Symbol]
    ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHSEGainMode) refers to ht32f5xxxx_ckcu.o(.text.CKCU_SetHSEGainMode) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit) refers to ht32f5xxxx_cmp.o(.text.CMP_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init) refers to ht32f5xxxx_cmp.o(.text.CMP_Init) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.text.CMP_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit) refers to ht32f5xxxx_cmp.o(.text.CMP_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd) refers to ht32f5xxxx_cmp.o(.text.CMP_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig) refers to ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag) refers to ht32f5xxxx_cmp.o(.text.CMP_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus) refers to ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus) for [Anonymous Symbol]
    ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue) refers to ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.text.CRC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit) refers to ht32f5xxxx_crc.o(.text.CRC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init) refers to ht32f5xxxx_crc.o(.text.CRC_Init) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process) refers to ht32f5xxxx_crc.o(.text.CRC_Process) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT) refers to ht32f5xxxx_crc.o(.text.CRC_CCITT) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16) refers to ht32f5xxxx_crc.o(.text.CRC_16) for [Anonymous Symbol]
    ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32) refers to ht32f5xxxx_crc.o(.text.CRC_32) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.text.DAC_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit) refers to ht32f5xxxx_dac.o(.text.DAC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig) refers to ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd) refers to ht32f5xxxx_dac.o(.text.DAC_OutBufCmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd) refers to ht32f5xxxx_dac.o(.text.DAC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData) refers to ht32f5xxxx_dac.o(.text.DAC_SetData) for [Anonymous Symbol]
    ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData) refers to ht32f5xxxx_dac.o(.text.DAC_GetOutData) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit) refers to ht32f5xxxx_div.o(.text.DIV_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32) refers to ht32f5xxxx_div.o(.text.DIV_Div32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32) refers to ht32f5xxxx_div.o(.text.DIV_uDiv32) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.bss.guRemainder) for guRemainder
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder) refers to ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod) refers to ht32f5xxxx_div.o(.text.DIV_Mod) for [Anonymous Symbol]
    ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero) refers to ht32f5xxxx_div.o(.text.DIV_IsDivByZero) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.text.EBI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit) refers to ht32f5xxxx_ebi.o(.text.EBI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit) refers to ht32f5xxxx_ebi.o(.text.EBI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus) refers to ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit) refers to ht32f5xxxx_exti.o(.text.EXTI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig) refers to ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd) refers to ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd) for [Anonymous Symbol]
    ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus) refers to ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState) refers to ht32f5xxxx_flash.o(.text.FLASH_SetWaitState) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd) refers to ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode) refers to ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage) refers to ht32f5xxxx_flash.o(.text.FLASH_ErasePage) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd) refers to ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase) refers to ht32f5xxxx_flash.o(.text.FLASH_MassErase) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte) refers to ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig) refers to ht32f5xxxx_flash.o(.text.FLASH_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus) refers to ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag) refers to ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.GPIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig) refers to ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData) refers to ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock) refers to ht32f5xxxx_gpio.o(.text.GPIO_PinLock) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked) refers to ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID) refers to ht32f5xxxx_gpio.o(.text.GPIO_GetID) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.text.AFIO_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._GPIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl) refers to ht32f5xxxx_gpio.o(.text._AFIO_ClockControl) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit) refers to ht32f5xxxx_i2c.o(.text.I2C_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_i2c.o(.text.I2C_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit) refers to ht32f5xxxx_i2c.o(.text.I2C_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress) refers to ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister) refers to ht32f5xxxx_i2c.o(.text.I2C_ReadRegister) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod) refers to ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler) refers to ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer) refers to ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd) refers to ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig) refers to ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.text.I2S_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit) refers to ht32f5xxxx_i2s.o(.text.I2S_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init) refers to ht32f5xxxx_i2s.o(.text.I2S_Init) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd) refers to ht32f5xxxx_i2s.o(.text.I2S_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd) refers to ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd) refers to ht32f5xxxx_i2s.o(.text.I2S_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus) refers to ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig) refers to ht32f5xxxx_i2s.o(.text.I2S_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag) refers to ht32f5xxxx_i2s.o(.text.I2S_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit) refers to ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd) for [Anonymous Symbol]
    ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig) refers to ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.text.PDMA_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit) refers to ht32f5xxxx_pdma.o(.text.PDMA_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig) refers to ht32f5xxxx_pdma.o(.text.PDMA_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd) refers to ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag) refers to ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt) refers to ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd) refers to ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag) for [Anonymous Symbol]
    ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit) refers to ht32f5xxxx_rtc.o(.text.RTC_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd) refers to ht32f5xxxx_rtc.o(.text.RTC_LSECmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler) refers to ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd) refers to ht32f5xxxx_rtc.o(.text.RTC_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_SetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare) refers to ht32f5xxxx_rtc.o(.text.RTC_GetCompare) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig) refers to ht32f5xxxx_rtc.o(.text.RTC_OutConfig) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd) refers to ht32f5xxxx_rtc.o(.text.RTC_OutCmd) for [Anonymous Symbol]
    ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus) refers to ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.text.SCI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit) refers to ht32f5xxxx_sci.o(.text.SCI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init) refers to ht32f5xxxx_sci.o(.text.SCI_Init) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit) refers to ht32f5xxxx_sci.o(.text.SCI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd) refers to ht32f5xxxx_sci.o(.text.SCI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ETUConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue) refers to ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd) refers to ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData) refers to ht32f5xxxx_sci.o(.text.SCI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData) refers to ht32f5xxxx_sci.o(.text.SCI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig) refers to ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd) refers to ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO) refers to ht32f5xxxx_sci.o(.text.SCI_OutputDIO) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig) refers to ht32f5xxxx_sci.o(.text.SCI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus) refers to ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag) refers to ht32f5xxxx_sci.o(.text.SCI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd) refers to ht32f5xxxx_sci.o(.text.SCI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit) refers to ht32f5xxxx_spi.o(.text.SPI_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.text.SPI_StructInit) refers to memseta.o(.text) for __aeabi_memclr4
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit) refers to ht32f5xxxx_spi.o(.text.SPI_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd) refers to ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue) refers to ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig) refers to ht32f5xxxx_spi.o(.text.SPI_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag) refers to ht32f5xxxx_spi.o(.text.SPI_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig) refers to ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig) for [Anonymous Symbol]
    ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig) refers to ht32f5xxxx_spi.o(.text.SPI_SELHTConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.text.TM_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHPSCConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit) refers to ht32f5xxxx_tm.o(.text.TM_PwmInputInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit) refers to ht32f5xxxx_tm.o(.text.TM_CaptureStructInit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig) refers to ht32f5xxxx_tm.o(.text.TM_StiConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig) refers to ht32f5xxxx_tm.o(.text.TM_PrescalerConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_CounterModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig) refers to ht32f5xxxx_tm.o(.text.TM_DecoderConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF) refers to ht32f5xxxx_tm.o(.text.TM_ForcedOREF) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig) refers to ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_OutputModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd) refers to ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd) refers to ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig) refers to ht32f5xxxx_tm.o(.text.TM_MMSELConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig) refers to ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd) refers to ht32f5xxxx_tm.o(.text.TM_TimSyncCmd) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter) refers to ht32f5xxxx_tm.o(.text.TM_SetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload) refers to ht32f5xxxx_tm.o(.text.TM_SetCounterReload) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare) refers to ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig) refers to ht32f5xxxx_tm.o(.text.TM_CKDIVConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare) refers to ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter) refers to ht32f5xxxx_tm.o(.text.TM_GetCounter) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler) refers to ht32f5xxxx_tm.o(.text.TM_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent) refers to ht32f5xxxx_tm.o(.text.TM_GenerateEvent) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig) refers to ht32f5xxxx_tm.o(.text.TM_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus) refers to ht32f5xxxx_tm.o(.text.TM_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit) refers to ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig) refers to ht32f5xxxx_tm.o(.text.TM_InternalClockConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig) refers to ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig) for [Anonymous Symbol]
    ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig) refers to ht32f5xxxx_tm.o(.text.TM_PDMAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit) refers to ht32f5xxxx_usart.o(.text.USART_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.text.USART_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency) for CKCU_GetPeripFrequency
    ht32f5xxxx_usart.o(.text.USART_Init) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init) refers to ht32f5xxxx_usart.o(.text.USART_Init) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit) refers to ht32f5xxxx_usart.o(.text.USART_StructInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData) refers to ht32f5xxxx_usart.o(.text.USART_SendData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetIntStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag) refers to ht32f5xxxx_usart.o(.text.USART_ClearFlag) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig) refers to ht32f5xxxx_usart.o(.text.USART_IntConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd) refers to ht32f5xxxx_usart.o(.text.USART_PDMACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd) refers to ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd) refers to ht32f5xxxx_usart.o(.text.USART_StickParityCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig) refers to ht32f5xxxx_usart.o(.text.USART_StickParityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime) refers to ht32f5xxxx_usart.o(.text.USART_SetGuardTime) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig) refers to ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue) refers to ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset) refers to ht32f5xxxx_usart.o(.text.USART_FIFOReset) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus) refers to ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd) refers to ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDACmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDAConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler) refers to ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig) refers to ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd) refers to ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig) refers to ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd) refers to ht32f5xxxx_usart.o(.text.USART_RS485AADCmd) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue) refers to ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockInit) for [Anonymous Symbol]
    ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit) refers to ht32f5xxxx_usart.o(.text.USART_SynClockStructInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit) refers to ht32f5xxxx_usbd.o(.text.USBD_PreInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init) refers to ht32f5xxxx_usbd.o(.text.USBD_Init) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit) refers to ht32f5xxxx_usbd.o(.text.USBD_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.bss.gIsFirstPowered) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerUp) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOff) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn) refers to ht32f5xxxx_usbd.o(.text.USBD_PowerOn) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd) refers to ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup) refers to ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData) refers to ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress) refers to ht32f5xxxx_usbd.o(.text.USBD_SetAddress) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_DisableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_GetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_ClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber) refers to ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTInit) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReset) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData) for [Anonymous Symbol]
    ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text._USBD_CopyMemory) for _USBD_CopyMemory
    ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory) refers to ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.text.WDT_DeInit) refers to ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset) for RSTCU_PeripReset
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit) refers to ht32f5xxxx_wdt.o(.text.WDT_DeInit) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd) refers to ht32f5xxxx_wdt.o(.text.WDT_Cmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_HaltConfig) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ResetCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue) refers to ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler) refers to ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart) refers to ht32f5xxxx_wdt.o(.text.WDT_Restart) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus) refers to ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd) refers to ht32f5xxxx_wdt.o(.text.WDT_LockCmd) for [Anonymous Symbol]
    ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig) refers to ht32f5xxxx_wdt.o(.text.WDT_SourceConfig) for [Anonymous Symbol]
    ht32_retarget.o(.text.RETARGET_Configuration) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for HT32F_DVB_COMInit
    ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration) refers to ht32_retarget.o(.text.RETARGET_Configuration) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text.__backspace) refers to ht32_retarget.o(.text.__backspace) for [Anonymous Symbol]
    ht32_retarget.o(.text._read) refers to ht32_serial.o(.text.SERIAL_GetChar) for SERIAL_GetChar
    ht32_retarget.o(.ARM.exidx.text._read) refers to ht32_retarget.o(.text._read) for [Anonymous Symbol]
    ht32_retarget.o(.text._write) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text._write) refers to ht32_retarget.o(.text._write) for [Anonymous Symbol]
    ht32_retarget.o(.text.putchar) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text.putchar) refers to ht32_retarget.o(.text.putchar) for [Anonymous Symbol]
    ht32_retarget.o(.text.fputc) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text.fputc) refers to ht32_retarget.o(.text.fputc) for [Anonymous Symbol]
    ht32_retarget.o(.text.fgetc) refers to ht32_serial.o(.text.SERIAL_GetChar) for SERIAL_GetChar
    ht32_retarget.o(.ARM.exidx.text.fgetc) refers to ht32_retarget.o(.text.fgetc) for [Anonymous Symbol]
    ht32_retarget.o(.text._ttywrch) refers to ht32_serial.o(.text.SERIAL_PutChar) for SERIAL_PutChar
    ht32_retarget.o(.ARM.exidx.text._ttywrch) refers to ht32_retarget.o(.text._ttywrch) for [Anonymous Symbol]
    ht32_retarget.o(.ARM.exidx.text._sys_exit) refers to ht32_retarget.o(.text._sys_exit) for [Anonymous Symbol]
    ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar) refers to ht32_serial.o(.text.SERIAL_PutChar) for [Anonymous Symbol]
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_GetFlagStatus) for USART_GetFlagStatus
    ht32_serial.o(.text.SERIAL_GetChar) refers to ht32f5xxxx_usart.o(.text.USART_ReceiveData) for USART_ReceiveData
    ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar) refers to ht32_serial.o(.text.SERIAL_GetChar) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit) refers to ht32_board.o(.text.HT32F_DVB_LEDInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff) refers to ht32_board.o(.text.HT32F_DVB_LEDOff) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn) refers to ht32_board.o(.text.HT32F_DVB_LEDOn) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.rodata.LED_GPIO_PIN) for LED_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle) refers to ht32_board.o(.text.HT32F_DVB_LEDToggle) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig) for GPIO_PullResistorConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.GPIO_InputConfig) for GPIO_InputConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig) for AFIO_EXTISourceConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_Init) for EXTI_Init
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.text.EXTI_IntConfig) for EXTI_IntConfig
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32_board.o(.rodata.BUTTON_GPIO_PINNum) for BUTTON_GPIO_PINNum
    ht32_board.o(.text.HT32F_DVB_PBInit) refers to ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn) for gEXTIn_IRQn
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit) refers to ht32_board.o(.text.HT32F_DVB_PBInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit) for GPIO_ReadInBit
    ht32_board.o(.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.rodata.BUTTON_GPIO_PIN) for BUTTON_GPIO_PIN
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState) refers to ht32_board.o(.text.HT32F_DVB_PBGetState) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_Init) for USART_Init
    ht32_board.o(.text.HT32F_DVB_COMInit) refers to ht32f5xxxx_usart.o(.text.USART_TxRxCmd) for USART_TxRxCmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit) refers to ht32_board.o(.text.HT32F_DVB_COMInit) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency) for CKCU_GetClocksFrequency
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to uidiv_div0.o(.text) for __aeabi_uidiv
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_UpdateCmd) for TM_UpdateCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_DeInit) for TM_DeInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig) for GPIO_DriveConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit) for TM_TimeBaseStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_TimeBaseInit) for TM_TimeBaseInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_ClearFlag) for TM_ClearFlag
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputStructInit) for TM_OutputStructInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_OutputInit) for TM_OutputInit
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig) for TM_CHCCRPreloadConfig
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd) for TM_CRRPreloadCmd
    ht32_board.o(.text.HT32F_DVB_BuzzerFun) refers to ht32f5xxxx_tm.o(.text.TM_Cmd) for TM_Cmd
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun) refers to ht32_board.o(.text.HT32F_DVB_BuzzerFun) for [Anonymous Symbol]
    ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32f5xxxx_tm.o(.text.TM_ChannelConfig) for TM_ChannelConfig
    ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd) refers to ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Init) for EBI_Init
    ebi_lcd.o(.text.LCD_Init) refers to ht32f5xxxx_ebi.o(.text.EBI_Cmd) for EBI_Cmd
    ebi_lcd.o(.text.LCD_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Init) refers to ebi_lcd.o(.text.LCD_Init) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_Config) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    ebi_lcd.o(.text.LCD_Config) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    ebi_lcd.o(.ARM.exidx.text.LCD_Config) refers to ebi_lcd.o(.text.LCD_Config) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg) refers to ebi_lcd.o(.text.LCD_WriteReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_Clear) refers to ebi_lcd.o(.text.LCD_Clear) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg) refers to ebi_lcd.o(.text.LCD_ReadReg) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet) refers to ebi_lcd.o(.text.LCD_StarterSet) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior) refers to ebi_lcd.o(.text.LCD_WriteRAMPrior) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM) refers to ebi_lcd.o(.text.LCD_WriteRAM) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_BackColorSet) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet) refers to ebi_lcd.o(.text.LCD_BackColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_TextColorSet) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet) refers to ebi_lcd.o(.text.LCD_TextColorSet) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.rodata.ASCII_Font_Table) for ASCII_Font_Table
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDisplay) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.data.Color_Back) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CharDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw) refers to ebi_lcd.o(.text.LCD_CharDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff) refers to ebi_lcd.o(.text.LCD_DisplayOff) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn) refers to ebi_lcd.o(.text.LCD_DisplayOn) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_CharDisplay) for LCD_CharDisplay
    ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay) refers to ebi_lcd.o(.text.LCD_StringLineDisplay) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_LineDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw) refers to ebi_lcd.o(.text.LCD_LineDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord) refers to ebi_lcd.o(.text.LCD_WriteRAMWord) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_CircleDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw) refers to ebi_lcd.o(.text.LCD_CircleDraw) for [Anonymous Symbol]
    ebi_lcd.o(.text.LCD_RectDraw) refers to ebi_lcd.o(.bss.Color_Text) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw) refers to ebi_lcd.o(.text.LCD_RectDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw) refers to ebi_lcd.o(.text.LCD_PicDraw) for [Anonymous Symbol]
    ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea) refers to ebi_lcd.o(.text.LCD_SetDisplayArea) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Init) for I2C_Init
    i2c_eeprom.o(.text.I2C_EEPROM_Init) refers to ht32f5xxxx_i2c.o(.text.I2C_Cmd) for I2C_Cmd
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init) refers to i2c_eeprom.o(.text.I2C_EEPROM_Init) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling) refers to i2c_eeprom.o(.text._I2C_EEPROM_AckPolling) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_PageWrite) for I2C_EEPROM_PageWrite
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite) for [Anonymous Symbol]
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus) for I2C_GetFlagStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig) for I2C_TargetAddressConfig
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ClearFlag) for I2C_ClearFlag
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_CheckStatus) for I2C_CheckStatus
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_SendData) for I2C_SendData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_AckCmd) for I2C_AckCmd
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_ReceiveData) for I2C_ReceiveData
    i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) refers to ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP) for I2C_GenerateSTOP
    i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead) refers to i2c_eeprom.o(.text.I2C_EEPROM_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig) for GPIO_DirectionConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig) for AFIO_GPxConfig
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Init) for SPI_Init
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd) for SPI_SELOutputCmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32f5xxxx_spi.o(.text.SPI_Cmd) for SPI_Cmd
    spi_flash.o(.text.SPI_FLASH_Init) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init) refers to spi_flash.o(.text.SPI_FLASH_Init) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_SectorErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase) refers to spi_flash.o(.text.SPI_FLASH_SectorErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteEnable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_SendByte) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte) refers to spi_flash.o(.text.SPI_FLASH_SendByte) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_BlockErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase) refers to spi_flash.o(.text.SPI_FLASH_BlockErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_ChipErase) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase) refers to spi_flash.o(.text.SPI_FLASH_ChipErase) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_PageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_PageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite) refers to spi_flash.o(.text.SPI_FLASH_PageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWrite) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA) refers to spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA) for [Anonymous Symbol]
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy) refers to spi_flash.o(.text.SPI_FLASH_BufferWriteBy) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead) refers to spi_flash.o(.text.SPI_FLASH_BufferRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead) refers to spi_flash.o(.text.SPI_FLASH_BufferDualRead) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_DUALCmd) for SPI_DUALCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA) refers to spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadRead) for [Anonymous Symbol]
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig) for CKCU_PeripClockConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_SetDataLength) for SPI_SetDataLength
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_QuadCmd) for QSPI_QuadCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig) for QSPI_DirectionConfig
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_Config) for PDMA_Config
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd) for PDMA_EnaCmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_spi.o(.text.SPI_PDMACmd) for SPI_PDMACmd
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA) refers to spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_ReadJEDECID) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID) refers to spi_flash.o(.text.SPI_FLASH_ReadJEDECID) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteEnable) for SPI_FLASH_WriteEnable
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd) for SPI_FLASH_WaitForWriteEnd
    spi_flash.o(.text.SPI_FLASH_WriteStatus2) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2) refers to spi_flash.o(.text.SPI_FLASH_WriteStatus2) for [Anonymous Symbol]
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits) for GPIO_ClearOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus) for SPI_GetFlagStatus
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_SendData) for SPI_SendData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_spi.o(.text.SPI_ReceiveData) for SPI_ReceiveData
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits) for GPIO_SetOutBits
    spi_flash.o(.text.SPI_FLASH_WriteDisable) refers to ht32_board.o(.rodata.GPIO_PORT) for GPIO_PORT
    spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable) refers to spi_flash.o(.text.SPI_FLASH_WriteDisable) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_ht32f5xxxx_03.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    idiv_div0.o(.text) refers to uidiv_div0.o(.text) for __aeabi_uidivmod
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.rodata.voice_table), (10 bytes).
    Removing main.o(.data.volume), (1 bytes).
    Removing main.o(.bss.keycode), (1 bytes).
    Removing main.o(.bss.keyStatus), (1 bytes).
    Removing main.o(.bss.lastKeyStatus), (1 bytes).
    Removing main.o(.bss.playStatus), (1 bytes).
    Removing main.o(.bss.playNum), (1 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing ht32f5xxxx_01_it.o(.text), (0 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.HardFault_Handler), (8 bytes).
    Removing ht32f5xxxx_01_it.o(.ARM.exidx.text.USB_IRQHandler), (8 bytes).
    Removing bmv31t001.o(.text), (0 bytes).
    Removing bmv31t001.o(.text.BMV31T001_reset), (36 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_reset), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_Init), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_setVolume), (348 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setVolume), (8 bytes).
    Removing bmv31t001.o(.text.writeCmd), (972 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.writeCmd), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playVoice), (208 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playVoice), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playSentence), (512 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playSentence), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playStop), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playStop), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playPause), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playPause), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playContinue), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playContinue), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_playRepeat), (180 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_playRepeat), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_isPlaying), (20 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isPlaying), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_scanKey), (140 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_scanKey), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_isKeyAction), (24 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isKeyAction), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_readKeyValue), (12 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_readKeyValue), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setPower), (8 bytes).
    Removing bmv31t001.o(.text.BMV31T001_setLED), (20 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_setLED), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_initAudioUpdate), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_isUpdateBegin), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.BMV31T001_executeUpdate), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashPageWrite), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashWriteEnable), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.SPIFlashWaitForWriteEnd), (8 bytes).
    Removing bmv31t001.o(.ARM.exidx.text.sendData), (8 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.step), (1 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.lastKey), (1 bytes).
    Removing bmv31t001.o(.bss.BMV31T001_scanKey.last_tick), (4 bytes).
    Removing delay.o(.text), (0 bytes).
    Removing delay.o(.text.Get_Sys_ms), (12 bytes).
    Removing delay.o(.ARM.exidx.text.Get_Sys_ms), (8 bytes).
    Removing delay.o(.text.Get_Sys_us), (44 bytes).
    Removing delay.o(.ARM.exidx.text.Get_Sys_us), (8 bytes).
    Removing delay.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_us), (8 bytes).
    Removing delay.o(.ARM.exidx.text.delay_ms), (8 bytes).
    Removing delay.o(.text.rand_0_1), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_1), (8 bytes).
    Removing delay.o(.text.rand_0_3), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_3), (8 bytes).
    Removing delay.o(.text.rand_0_7), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_7), (8 bytes).
    Removing delay.o(.text.rand_0_15), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_15), (8 bytes).
    Removing delay.o(.text.rand_0_31), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_31), (8 bytes).
    Removing delay.o(.text.rand_0_63), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_63), (8 bytes).
    Removing delay.o(.text.rand_0_127), (16 bytes).
    Removing delay.o(.ARM.exidx.text.rand_0_127), (8 bytes).
    Removing delay.o(.text.delay_MS), (356 bytes).
    Removing delay.o(.ARM.exidx.text.delay_MS), (8 bytes).
    Removing ht32_usbd_class.o(.text), (0 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Init), (12 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Init), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_ReadByte), (34 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_ReadByte), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_WriteByte), (42 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_WriteByte), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Read), (54 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Read), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Write), (68 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Write), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_isEmpty), (12 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_isEmpty), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_isFull), (28 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_isFull), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_GetLength), (20 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_GetLength), (8 bytes).
    Removing ht32_usbd_class.o(.text.Buffer_Discard), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.Buffer_Discard), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Init), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_MainRoutine), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Reset), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Request), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint1), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint2), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_Endpoint3), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USBDClass_CDC_Tx), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_CDC_avilable), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Serial_rx), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Connected), (8 bytes).
    Removing ht32_usbd_class.o(.ARM.exidx.text.USB_Configured), (8 bytes).
    Removing ht32_usbd_descriptor.o(.text), (0 bytes).
    Removing ht32_usbd_descriptor.o(.ARM.exidx.text.USBDDesc_Init), (8 bytes).
    Removing usb_init.o(.text), (0 bytes).
    Removing usb_init.o(.text.USBCKCU_Configuration), (16 bytes).
    Removing usb_init.o(.ARM.exidx.text.USBCKCU_Configuration), (8 bytes).
    Removing usb_init.o(.ARM.exidx.text.USB_Configuration), (8 bytes).
    Removing usb_init.o(.text.USBPLL_Configuration), (46 bytes).
    Removing usb_init.o(.ARM.exidx.text.USBPLL_Configuration), (8 bytes).
    Removing usb_init.o(.ARM.exidx.text.Suspend), (8 bytes).
    Removing usb_init.o(.ARM.exidx.text.USB_Serial), (8 bytes).
    Removing usb_vcp.o(.text), (0 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_begin), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_end), (12 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_end), (8 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_available), (8 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_readBytes), (8 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_write_byte), (8 bytes).
    Removing usb_vcp.o(.text.USBSerial_write), (50 bytes).
    Removing usb_vcp.o(.ARM.exidx.text.USBSerial_write), (8 bytes).
    Removing usb_vcp.o(.bss.USBSerialisConnect), (1 bytes).
    Removing system_ht32f5xxxx_03.o(.text), (0 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_ht32f5xxxx_03.o(.text.SystemCoreClockUpdate), (136 bytes).
    Removing system_ht32f5xxxx_03.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing startup_ht32f5xxxx_03.o(HEAP), (0 bytes).
    Removing ht32_usbd_core.o(.text), (0 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_Init), (8 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IRQHandler), (8 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_MainRoutine), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_IsSuspend), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_IsSuspend), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_GetRemoteWakeUpFeature), (10 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetRemoteWakeUpFeature), (8 bytes).
    Removing ht32_usbd_core.o(.text.USBDCore_TriggerRemoteWakeup), (12 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_TriggerRemoteWakeup), (8 bytes).
    Removing ht32_usbd_core.o(.ARM.exidx.text.USBDCore_GetStatus), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text), (0 bytes).
    Removing ht32_cm0plus_misc.o(.text.DIV32_Init), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.DIV32_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.Rand_Init), (32 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.Rand_Init), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetVectorTable), (20 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetVectorTable), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_LowPowerConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_LowPowerConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.NVIC_SetPendingSystemHandler), (16 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.NVIC_SetPendingSystemHandler), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_ClockSourceConfig), (28 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_ClockSourceConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_CounterCmd), (40 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_CounterCmd), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_IntConfig), (24 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_IntConfig), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.SYSTICK_SetReloadValue), (12 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.SYSTICK_SetReloadValue), (8 bytes).
    Removing ht32_cm0plus_misc.o(.text.RBIT), (192 bytes).
    Removing ht32_cm0plus_misc.o(.ARM.exidx.text.RBIT), (8 bytes).
    Removing ht32_cm0plus_misc.o(.data.Data), (348 bytes).
    Removing ht32_cm0plus_misc.o(.bss.UDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.bss.SDIV32), (4 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData), (308 bytes).
    Removing ht32_cm0plus_misc.o(.rodata.RandData2), (36 bytes).
    Removing ht32_cm0plus_misc.o(.bss.Rand_Get), (4 bytes).
    Removing ht32f5xxxx_adc.o(.text), (0 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_DeInit), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_DeInit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Reset), (34 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Reset), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_Cmd), (54 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_Cmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularGroupConfig), (36 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularGroupConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularChannelConfig), (28 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_RegularTrigConfig), (14 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_RegularTrigConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SamplingTimeConfig), (4 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SamplingTimeConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_SoftwareStartConvCmd), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_SoftwareStartConvCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetConversionData), (10 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetConversionData), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_IntConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetIntStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_ClearIntPendingBit), (6 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDConfig), (12 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDSingleChannelConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDSingleChannelConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_AWDThresholdsConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_PDMAConfig), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFCmd), (20 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFCmd), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_VREFConfig), (16 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_VREFConfig), (8 bytes).
    Removing ht32f5xxxx_adc.o(.text.ADC_MVDDACmd), (24 bytes).
    Removing ht32f5xxxx_adc.o(.ARM.exidx.text.ADC_MVDDACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text), (0 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_DeInit), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_DeInit), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_FIFOFlush), (24 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_FIFOFlush), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_Cmd), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_Cmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_StartKey), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_StartKey), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_ECB_Init), (56 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_ECB_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_IntConfig), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_IntConfig), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CBC_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CBC_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_CTR_Init), (60 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_CTR_Init), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetStatus), (10 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetInputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetInputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_GetOutputData), (4 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_GetOutputData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetKeyTable), (140 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetKeyTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AES_SetVectorTable), (18 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AES_SetVectorTable), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text._AES_CryptData), (152 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text._AES_CryptData), (8 bytes).
    Removing ht32f5xxxx_aes.o(.text.AESCore_IRQHandler), (112 bytes).
    Removing ht32f5xxxx_aes.o(.ARM.exidx.text.AESCore_IRQHandler), (8 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32OutputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputSize), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gu32InputIndex), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32InputBuff), (4 bytes).
    Removing ht32f5xxxx_aes.o(.bss.gpu32OutputBuff), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.text), (0 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_DeInit), (44 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_DeInit), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_EnaCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCompare), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCompare), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_SetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetCounter), (4 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_OneShotModeCmd), (18 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_OneShotModeCmd), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_IntConfig), (16 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_bftm.o(.text.BFTM_ClearFlag), (14 bytes).
    Removing ht32f5xxxx_bftm.o(.ARM.exidx.text.BFTM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_DeInit), (292 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSICmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSICmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClockReadyStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SysClockConfig), (176 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SysClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSECmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSECmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_WaitHSEReady), (124 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_WaitHSEReady), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PLLInit), (52 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBPLLInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_USBClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetSysClockSource), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetSysClockSource), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetHCLKPrescaler), (12 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHCLKPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetCKREFPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetCKREFPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetADCnPrescaler), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetADCnPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetClocksFrequency), (136 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetClocksFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetPLLFrequency), (68 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPLLFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetPeripPrescaler), (44 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetPeripPrescaler), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetPeripFrequency), (156 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetPeripFrequency), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKMCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKMCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_PSRCWKUPCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PSRCWKUPCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_CKOUTConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_CKOUTConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ClearIntFlag), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IntConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IntConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SleepClockConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SleepClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_PLL_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_PLL_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSI_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSI_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_IS_HSE_USED), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_IS_HSE_USED), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_MCUDBGConfig), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_MCUDBGConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_BKISOCmd), (24 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_BKISOCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_PeripClockConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimClkConfig), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimClkConfig), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_ATCInit), (28 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_ATCInit), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimCmd), (32 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimCmd), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_HSIAutoTrimIsReady), (16 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_HSIAutoTrimIsReady), (8 bytes).
    Removing ht32f5xxxx_ckcu.o(.text.CKCU_SetHSEGainMode), (20 bytes).
    Removing ht32f5xxxx_ckcu.o(.ARM.exidx.text.CKCU_SetHSEGainMode), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text), (0 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_DeInit), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_DeInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_UnprotectConfig), (12 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_UnprotectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Init), (60 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Init), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_StructInit), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_StructInit), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_Cmd), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_Cmd), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_IntConfig), (20 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_IntConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_EdgeDetectConfig), (20 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_EdgeDetectConfig), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_ClearFlag), (16 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_GetOutputStatus), (8 bytes).
    Removing ht32f5xxxx_cmp.o(.text.CMP_SetScalerValue), (4 bytes).
    Removing ht32f5xxxx_cmp.o(.ARM.exidx.text.CMP_SetScalerValue), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text), (0 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_DeInit), (16 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_DeInit), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Init), (40 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Init), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_Process), (94 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_Process), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_CCITT), (120 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_CCITT), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_16), (120 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_16), (8 bytes).
    Removing ht32f5xxxx_crc.o(.text.CRC_32), (116 bytes).
    Removing ht32f5xxxx_crc.o(.ARM.exidx.text.CRC_32), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text), (0 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_DeInit), (28 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_DeInit), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ModeConfig), (4 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ModeConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ReferenceConfig), (18 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ReferenceConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_ResolutionConfig), (16 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_ResolutionConfig), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_OutBufCmd), (26 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_OutBufCmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_Cmd), (20 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_Cmd), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_SetData), (8 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_SetData), (8 bytes).
    Removing ht32f5xxxx_dac.o(.text.DAC_GetOutData), (10 bytes).
    Removing ht32f5xxxx_dac.o(.ARM.exidx.text.DAC_GetOutData), (8 bytes).
    Removing ht32f5xxxx_div.o(.text), (0 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_DeInit), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_DeInit), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Div32), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Div32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uDiv32), (156 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uDiv32), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_uGetLastRemainder), (12 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_uGetLastRemainder), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_Mod), (44 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_Mod), (8 bytes).
    Removing ht32f5xxxx_div.o(.text.DIV_IsDivByZero), (16 bytes).
    Removing ht32f5xxxx_div.o(.ARM.exidx.text.DIV_IsDivByZero), (8 bytes).
    Removing ht32f5xxxx_div.o(.bss.guRemainder), (4 bytes).
    Removing ht32f5xxxx_ebi.o(.text), (0 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_DeInit), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_DeInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Init), (120 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Init), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_StructInit), (44 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_StructInit), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_Cmd), (32 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_Cmd), (8 bytes).
    Removing ht32f5xxxx_ebi.o(.text.EBI_GetBusyStatus), (16 bytes).
    Removing ht32f5xxxx_ebi.o(.ARM.exidx.text.EBI_GetBusyStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text), (0 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_DeInit), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_DeInit), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_Init), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_Init), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_IntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventConfig), (52 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_WakeupEventIntConfig), (32 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_WakeupEventIntConfig), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_ClearWakeupFlag), (20 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_ClearWakeupFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeFlag), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeFlag), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetEdgeStatus), (36 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetEdgeStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetWakeupFlagStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetWakeupFlagStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_SWIntCmd), (28 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_SWIntCmd), (8 bytes).
    Removing ht32f5xxxx_exti.o(.text.EXTI_GetSWCmdStatus), (16 bytes).
    Removing ht32f5xxxx_exti.o(.ARM.exidx.text.EXTI_GetSWCmdStatus), (8 bytes).
    Removing ht32f5xxxx_exti.o(.rodata.gEXTIn_IRQn), (16 bytes).
    Removing ht32f5xxxx_flash.o(.text), (0 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetWaitState), (44 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetWaitState), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_PrefetchBufferCmd), (24 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_PrefetchBufferCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_BranchCacheCmd), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_BranchCacheCmd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_SetRemappingMode), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_SetRemappingMode), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ErasePage), (272 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ErasePage), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_WaitForOperationEnd), (260 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_WaitForOperationEnd), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_EraseOptionByte), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_EraseOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_MassErase), (268 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_MassErase), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramWordData), (280 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramWordData), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ProgramOptionByte), (1228 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ProgramOptionByte), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetOptionByteStatus), (68 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetOptionByteStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_IntConfig), (28 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_IntConfig), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_GetIntStatus), (16 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_flash.o(.text.FLASH_ClearIntFlag), (12 bytes).
    Removing ht32f5xxxx_flash.o(.ARM.exidx.text.FLASH_ClearIntFlag), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text), (0 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DeInit), (60 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DirectionConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_PullResistorConfig), (34 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PullResistorConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_InputConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_InputConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_DriveConfig), (222 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_DriveConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_OpenDrainConfig), (20 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_OpenDrainConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadInData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadInData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutBit), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutBit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ReadOutData), (6 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ReadOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_SetOutBits), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_SetOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_ClearOutBits), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_ClearOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutBits), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutBits), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_WriteOutData), (4 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_WriteOutData), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_PinLock), (12 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_PinLock), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPortLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPortLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_IsPinLocked), (10 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_IsPinLocked), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.GPIO_GetID), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_DeInit), (16 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_DeInit), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_GPxConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text.AFIO_EXTISourceConfig), (44 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text.AFIO_EXTISourceConfig), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._GPIO_ClockControl), (52 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._GPIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_gpio.o(.text._AFIO_ClockControl), (48 bytes).
    Removing ht32f5xxxx_gpio.o(.ARM.exidx.text._AFIO_ClockControl), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_DeInit), (40 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_Init), (144 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Init), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_StructInit), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_StructInit), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_Cmd), (18 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GenerateSTOP), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GenerateSTOP), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_IntConfig), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GeneralCallCmd), (18 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GeneralCallCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_AckCmd), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AckCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetOwnAddress), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetOwnAddress), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_TargetAddressConfig), (38 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TargetAddressConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SendData), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SendData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ReadRegister), (22 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ReadRegister), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CheckStatus), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CheckStatus), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_ClearFlag), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLHighPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLHighPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetSCLLowPeriod), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetSCLLowPeriod), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_PDMANACKCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_PDMANACKCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_TimeOutCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_TimeOutCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutValue), (16 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SetTimeOutPrescaler), (10 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SetTimeOutPrescaler), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_AddressMaskConfig), (4 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_AddressMaskConfig), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_GetAddressBuffer), (6 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_GetAddressBuffer), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_CombFilterCmd), (20 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_CombFilterCmd), (8 bytes).
    Removing ht32f5xxxx_i2c.o(.text.I2C_SequentialFilterConfig), (132 bytes).
    Removing ht32f5xxxx_i2c.o(.ARM.exidx.text.I2C_SequentialFilterConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text), (0 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_DeInit), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_DeInit), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Init), (120 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Init), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_Cmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_Cmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_TxMuteCmd), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_TxMuteCmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_PDMACmd), (24 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOReset), (16 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_FIFOTrigLevelConfig), (40 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_FIFOTrigLevelConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_GetFIFOStatus), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_IntConfig), (28 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_IntConfig), (8 bytes).
    Removing ht32f5xxxx_i2s.o(.text.I2S_ClearFlag), (12 bytes).
    Removing ht32f5xxxx_i2s.o(.ARM.exidx.text.I2S_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text), (0 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChNPolarityConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChNPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_ChannelNConfig), (26 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_ChannelNConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHMOECmd), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHMOECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig), (48 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRConfig2), (14 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRConfig2), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_CHBRKCTRStructInit), (18 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_CHBRKCTRStructInit), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMPRECmd), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMPRECmd), (8 bytes).
    Removing ht32f5xxxx_mctm.o(.text.MCTM_COMUSConfig), (20 bytes).
    Removing ht32f5xxxx_mctm.o(.ARM.exidx.text.MCTM_COMUSConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text), (0 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DeInit), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DeInit), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_Config), (48 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_Config), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_AddrConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_AddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SrcAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SrcAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_DstAddrConfig), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_DstAddrConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_TranSizeConfig), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_TranSizeConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_IntConfig), (48 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_IntConfig), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_EnaCmd), (28 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_EnaCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_SwTrigCmd), (32 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_SwTrigCmd), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetFlagStatus), (24 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_ClearFlag), (20 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_pdma.o(.text.PDMA_GetRemainBlkCnt), (16 bytes).
    Removing ht32f5xxxx_pdma.o(.ARM.exidx.text.PDMA_GetRemainBlkCnt), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeInit), (72 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeInit), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_CheckReadyAccessed), (216 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_CheckReadyAccessed), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_ReadBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_ReadBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WriteBackupRegister), (12 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WriteBackupRegister), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_Sleep), (32 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_Sleep), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep1), (88 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep1), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2), (100 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DeepSleep2Ex), (208 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DeepSleep2Ex), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_PowerDown), (96 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_PowerDown), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_SetLVDS), (20 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_SetLVDS), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODCmd), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_BODRISConfig), (24 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_BODRISConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetLVDFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetLVDFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetBODFlagStatus), (16 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetBODFlagStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_GetDMOSStatus), (36 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_GetDMOSStatus), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_DMOSCmd), (40 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_DMOSCmd), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LDOConfig), (52 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LDOConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDIntWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDIntWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_LVDEventWakeupConfig), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_LVDEventWakeupConfig), (8 bytes).
    Removing ht32f5xxxx_pwrcu.o(.text.PWRCU_WakeupPinCmd), (28 bytes).
    Removing ht32f5xxxx_pwrcu.o(.ARM.exidx.text.PWRCU_WakeupPinCmd), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text), (0 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_GetResetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_GetResetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearResetFlag), (16 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.text.RSTCU_ClearAllResetFlag), (12 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_ClearAllResetFlag), (8 bytes).
    Removing ht32f5xxxx_rstcu.o(.ARM.exidx.text.RSTCU_PeripReset), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text), (0 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_DeInit), (60 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_DeInit), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_ClockSourceConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_ClockSourceConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSESMConfig), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSESMConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_LSECmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_LSECmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_CMPCLRCmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_CMPCLRCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_Cmd), (24 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_Cmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCounter), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCounter), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_SetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_SetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetCompare), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetCompare), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_WakeupConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_WakeupConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_IntConfig), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_IntConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetFlagStatus), (12 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutConfig), (56 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutConfig), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_OutCmd), (28 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_OutCmd), (8 bytes).
    Removing ht32f5xxxx_rtc.o(.text.RTC_GetOutStatus), (16 bytes).
    Removing ht32f5xxxx_rtc.o(.ARM.exidx.text.RTC_GetOutStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text), (0 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_DeInit), (32 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_DeInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Init), (30 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Init), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_StructInit), (14 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_StructInit), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_Cmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_Cmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ETUConfig), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ETUConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetGuardTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetGuardTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SetWaitingTimeValue), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SetWaitingTimeValue), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_WaitingTimeCounterCmd), (18 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_WaitingTimeCounterCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SendData), (4 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SendData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClockModeConfig), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClockModeConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_SoftwareClockCmd), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_SoftwareClockCmd), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_OutputDIO), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_OutputDIO), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_IntConfig), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_ClearFlag), (28 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_sci.o(.text.SCI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_sci.o(.ARM.exidx.text.SCI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text), (0 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DeInit), (68 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DeInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Init), (70 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Init), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_StructInit), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_StructInit), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_Cmd), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_Cmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELOutputCmd), (18 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELOutputCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetDataLength), (16 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetDataLength), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELModeConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELModeConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SoftwareSELCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SoftwareSELCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SendData), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SendData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SetTimeOutValue), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_IntConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_IntConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GetFIFOStatus), (18 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_ClearFlag), (4 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_FIFOTriggerLevelConfig), (40 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_FIFOTriggerLevelConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_DUALCmd), (48 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_DUALCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_QuadCmd), (86 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_QuadCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.QSPI_DirectionConfig), (48 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.QSPI_DirectionConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTCmd), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTCmd), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_GUARDTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_GUARDTConfig), (8 bytes).
    Removing ht32f5xxxx_spi.o(.text.SPI_SELHTConfig), (20 bytes).
    Removing ht32f5xxxx_spi.o(.ARM.exidx.text.SPI_SELHTConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text), (0 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DeInit), (116 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DeInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseInit), (68 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputInit), (176 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureInit), (80 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHPSCConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHPSCConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PwmInputInit), (192 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PwmInputInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimeBaseStructInit), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimeBaseStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputStructInit), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CaptureStructInit), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CaptureStructInit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_Cmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_Cmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ItiExternalClockConfig), (34 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ItiExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_StiConfig), (26 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_StiConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChExternalClockConfig), (120 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChExternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PrescalerConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CounterModeConfig), (28 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CounterModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_DecoderConfig), (60 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_DecoderConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ForcedOREF), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ForcedOREF), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CRRPreloadCmd), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CRRPreloadCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCRPreloadConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCRPreloadConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChPolarityConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChPolarityConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ImmActiveConfig), (22 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ImmActiveConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ChannelConfig), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ChannelConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_OutputModeConfig), (32 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_OutputModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UpdateCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UpdateCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_UEVG_IntConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_UEVG_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_HallInterfaceCmd), (24 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_HallInterfaceCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SinglePulseModeCmd), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SinglePulseModeCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_MMSELConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_MMSELConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SlaveModeConfig), (14 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SlaveModeConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_TimSyncCmd), (16 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_TimSyncCmd), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCounterReload), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCounterReload), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_SetAsymmetricCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_SetAsymmetricCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CKDIVConfig), (18 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CKDIVConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCaptureCompare), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCaptureCompare), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetCounter), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetCounter), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetPrescaler), (6 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GenerateEvent), (4 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GenerateEvent), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearFlag), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_IntConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_IntConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_GetIntStatus), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_ClearIntPendingBit), (10 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_ClearIntPendingBit), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_InternalClockConfig), (12 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_InternalClockConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_CHCCDSConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_CHCCDSConfig), (8 bytes).
    Removing ht32f5xxxx_tm.o(.text.TM_PDMAConfig), (20 bytes).
    Removing ht32f5xxxx_tm.o(.ARM.exidx.text.TM_PDMAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text), (0 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_DeInit), (112 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_DeInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_Init), (140 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_Init), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StructInit), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StructInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SendData), (4 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SendData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ReceiveData), (6 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ReceiveData), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetFlagStatus), (10 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetIntStatus), (10 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetIntStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ClearFlag), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IntConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IntConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_TxRxCmd), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TxRxCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_PDMACmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_PDMACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_ForceBreakCmd), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_ForceBreakCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityCmd), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_StickParityConfig), (28 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_StickParityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetGuardTime), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetGuardTime), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_TXRXTLConfig), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_TXRXTLConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetTimeOutValue), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetTimeOutValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_FIFOReset), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_GetFIFOStatus), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_GetFIFOStatus), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_HardwareFlowControlCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_HardwareFlowControlCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDACmd), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDACmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetIrDAPrescaler), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetIrDAPrescaler), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDADirectionConfig), (20 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDADirectionConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_IrDAInvtCmd), (24 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_IrDAInvtCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485TxEnablePolarityConfig), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485TxEnablePolarityConfig), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485NMMCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485NMMCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_RS485AADCmd), (18 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_RS485AADCmd), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SetAddressMatchValue), (16 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SetAddressMatchValue), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockInit), (26 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockInit), (8 bytes).
    Removing ht32f5xxxx_usart.o(.text.USART_SynClockStructInit), (12 bytes).
    Removing ht32f5xxxx_usart.o(.ARM.exidx.text.USART_SynClockStructInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text), (0 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_PreInit), (60 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PreInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_Init), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPpullupCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DPWakeUpCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DPWakeUpCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DeInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerUp), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOff), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_PowerOn), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_SRAMResetConditionCmd), (28 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SRAMResetConditionCmd), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableDefaultPull), (12 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableDefaultPull), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_RemoteWakeup), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_RemoteWakeup), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ReadSETUPData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_SetAddress), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_DisableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_DisableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_ClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_GetEPTnINTNumber), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTInit), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReset), (20 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReset), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTEnableINT), (16 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTEnableINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearINT), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSendSTALL), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTSetHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearHalt), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTWaitSTALLSent), (56 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWaitSTALLSent), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTClearDTG), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer0Addr), (32 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer0Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetBuffer1Addr), (40 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBuffer1Addr), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetBufferLen), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTGetTransferCount), (24 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTGetTransferCount), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTWriteINData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text._USBD_CopyMemory), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadOUTData), (8 bytes).
    Removing ht32f5xxxx_usbd.o(.text.USBD_EPTReadMemory), (100 bytes).
    Removing ht32f5xxxx_usbd.o(.ARM.exidx.text.USBD_EPTReadMemory), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text), (0 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_DeInit), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_DeInit), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Cmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Cmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_HaltConfig), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_HaltConfig), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ResetCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ResetCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_ProtectCmd), (28 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_ProtectCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetReloadValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetReloadValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetDeltaValue), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetDeltaValue), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SetPrescaler), (24 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetPrescaler), (20 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetPrescaler), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_Restart), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_Restart), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_GetFlagStatus), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_GetFlagStatus), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_LockCmd), (36 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_LockCmd), (8 bytes).
    Removing ht32f5xxxx_wdt.o(.text.WDT_SourceConfig), (16 bytes).
    Removing ht32f5xxxx_wdt.o(.ARM.exidx.text.WDT_SourceConfig), (8 bytes).
    Removing ht32_retarget.o(.text), (0 bytes).
    Removing ht32_retarget.o(.text.RETARGET_Configuration), (32 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.RETARGET_Configuration), (8 bytes).
    Removing ht32_retarget.o(.text.__backspace), (4 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.__backspace), (8 bytes).
    Removing ht32_retarget.o(.text._read), (42 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._read), (8 bytes).
    Removing ht32_retarget.o(.text._write), (30 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._write), (8 bytes).
    Removing ht32_retarget.o(.text.putchar), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.putchar), (8 bytes).
    Removing ht32_retarget.o(.text.fputc), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fputc), (8 bytes).
    Removing ht32_retarget.o(.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text.fgetc), (8 bytes).
    Removing ht32_retarget.o(.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._ttywrch), (8 bytes).
    Removing ht32_retarget.o(.text._sys_exit), (2 bytes).
    Removing ht32_retarget.o(.ARM.exidx.text._sys_exit), (8 bytes).
    Removing ht32_serial.o(.text), (0 bytes).
    Removing ht32_serial.o(.text.SERIAL_PutChar), (44 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_PutChar), (8 bytes).
    Removing ht32_serial.o(.text.SERIAL_GetChar), (26 bytes).
    Removing ht32_serial.o(.ARM.exidx.text.SERIAL_GetChar), (8 bytes).
    Removing ht32_board.o(.text), (0 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDInit), (84 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOff), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOff), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDOn), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDOn), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_LEDToggle), (24 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_LEDToggle), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBInit), (184 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_PBGetState), (24 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_PBGetState), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_COMInit), (80 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_COMInit), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerFun), (288 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerFun), (8 bytes).
    Removing ht32_board.o(.text.HT32F_DVB_BuzzerOutputCmd), (20 bytes).
    Removing ht32_board.o(.ARM.exidx.text.HT32F_DVB_BuzzerOutputCmd), (8 bytes).
    Removing ht32_board.o(.rodata.GPIO_PORT), (24 bytes).
    Removing ht32_board.o(.rodata.LED_GPIO_ID), (3 bytes).
    Removing ht32_board.o(.rodata.LED_GPIO_PIN), (6 bytes).
    Removing ht32_board.o(.rodata.LED_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_ID), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PIN), (6 bytes).
    Removing ht32_board.o(.rodata.BUTTON_AFIO_MODE), (3 bytes).
    Removing ht32_board.o(.rodata.BUTTON_GPIO_PINNum), (3 bytes).
    Removing ht32_board.o(.rodata.gCOMInfo), (16 bytes).
    Removing ebi_lcd.o(.text), (0 bytes).
    Removing ebi_lcd.o(.text.LCD_Init), (236 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Init), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Config), (1180 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Config), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteReg), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_Clear), (248 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_Clear), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_ReadReg), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_ReadReg), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StarterSet), (34 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StarterSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMPrior), (10 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMPrior), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAM), (16 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAM), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_BackColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_BackColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_TextColorSet), (12 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_TextColorSet), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDisplay), (380 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CharDraw), (272 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CharDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOff), (14 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOff), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_DisplayOn), (14 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_DisplayOn), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_StringLineDisplay), (46 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_StringLineDisplay), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_LineDraw), (544 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_LineDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_WriteRAMWord), (20 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_WriteRAMWord), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_CircleDraw), (480 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_CircleDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_RectDraw), (1188 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_RectDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_PicDraw), (276 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_PicDraw), (8 bytes).
    Removing ebi_lcd.o(.text.LCD_SetDisplayArea), (70 bytes).
    Removing ebi_lcd.o(.ARM.exidx.text.LCD_SetDisplayArea), (8 bytes).
    Removing ebi_lcd.o(.rodata.ASCII_Font_Table), (4560 bytes).
    Removing ebi_lcd.o(.data.Color_Back), (2 bytes).
    Removing ebi_lcd.o(.bss.Color_Text), (2 bytes).
    Removing i2c_eeprom.o(.text), (0 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_Init), (88 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_Init), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_PageWrite), (172 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_PageWrite), (8 bytes).
    Removing i2c_eeprom.o(.text._I2C_EEPROM_AckPolling), (92 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text._I2C_EEPROM_AckPolling), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferWrite), (58 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferWrite), (8 bytes).
    Removing i2c_eeprom.o(.text.I2C_EEPROM_BufferRead), (232 bytes).
    Removing i2c_eeprom.o(.ARM.exidx.text.I2C_EEPROM_BufferRead), (8 bytes).
    Removing spi_flash.o(.text), (0 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_Init), (152 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_Init), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SectorErase), (200 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SectorErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteEnable), (72 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteEnable), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_SendByte), (52 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_SendByte), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WaitForWriteEnd), (120 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WaitForWriteEnd), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BlockErase), (200 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BlockErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ChipErase), (80 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ChipErase), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWriteByDMA), (424 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_PageWrite), (260 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_PageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWrite), (304 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWrite), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_QuadPageWriteByDMA), (468 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_QuadPageWriteByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferWriteBy), (196 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferWriteBy), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferReadByDMA), (416 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferRead), (252 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualRead), (304 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualRead), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_BufferDualReadByDMA), (484 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_BufferDualReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadRead), (368 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadRead), (8 bytes).
    Removing spi_flash.o(.text.QSPI_FLASH_BufferQuadReadByDMA), (540 bytes).
    Removing spi_flash.o(.ARM.exidx.text.QSPI_FLASH_BufferQuadReadByDMA), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_ReadJEDECID), (204 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_ReadJEDECID), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus), (120 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteStatus2), (164 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteStatus2), (8 bytes).
    Removing spi_flash.o(.text.SPI_FLASH_WriteDisable), (72 bytes).
    Removing spi_flash.o(.ARM.exidx.text.SPI_FLASH_WriteDisable), (8 bytes).

1209 unused section(s) (total 41870 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast.o ABSOLUTE
    ../clib/division.s                       0x00000000   Number         0  aeabi_sdivfast_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv_div0.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  idiv0.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    BMV31T001.c                              0x00000000   Number         0  bmv31t001.o ABSOLUTE
    USB_VCP.c                                0x00000000   Number         0  usb_vcp.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    delay.c                                  0x00000000   Number         0  delay.o ABSOLUTE
    ebi_lcd.c                                0x00000000   Number         0  ebi_lcd.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    ht32_board.c                             0x00000000   Number         0  ht32_board.o ABSOLUTE
    ht32_cm0plus_misc.c                      0x00000000   Number         0  ht32_cm0plus_misc.o ABSOLUTE
    ht32_op.s                                0x00000000   Number         0  ht32_op.o ABSOLUTE
    ht32_retarget.c                          0x00000000   Number         0  ht32_retarget.o ABSOLUTE
    ht32_serial.c                            0x00000000   Number         0  ht32_serial.o ABSOLUTE
    ht32_usbd_class.c                        0x00000000   Number         0  ht32_usbd_class.o ABSOLUTE
    ht32_usbd_core.c                         0x00000000   Number         0  ht32_usbd_core.o ABSOLUTE
    ht32_usbd_descriptor.c                   0x00000000   Number         0  ht32_usbd_descriptor.o ABSOLUTE
    ht32f5xxxx_01_it.c                       0x00000000   Number         0  ht32f5xxxx_01_it.o ABSOLUTE
    ht32f5xxxx_adc.c                         0x00000000   Number         0  ht32f5xxxx_adc.o ABSOLUTE
    ht32f5xxxx_aes.c                         0x00000000   Number         0  ht32f5xxxx_aes.o ABSOLUTE
    ht32f5xxxx_bftm.c                        0x00000000   Number         0  ht32f5xxxx_bftm.o ABSOLUTE
    ht32f5xxxx_ckcu.c                        0x00000000   Number         0  ht32f5xxxx_ckcu.o ABSOLUTE
    ht32f5xxxx_cmp.c                         0x00000000   Number         0  ht32f5xxxx_cmp.o ABSOLUTE
    ht32f5xxxx_crc.c                         0x00000000   Number         0  ht32f5xxxx_crc.o ABSOLUTE
    ht32f5xxxx_dac.c                         0x00000000   Number         0  ht32f5xxxx_dac.o ABSOLUTE
    ht32f5xxxx_div.c                         0x00000000   Number         0  ht32f5xxxx_div.o ABSOLUTE
    ht32f5xxxx_ebi.c                         0x00000000   Number         0  ht32f5xxxx_ebi.o ABSOLUTE
    ht32f5xxxx_exti.c                        0x00000000   Number         0  ht32f5xxxx_exti.o ABSOLUTE
    ht32f5xxxx_flash.c                       0x00000000   Number         0  ht32f5xxxx_flash.o ABSOLUTE
    ht32f5xxxx_gpio.c                        0x00000000   Number         0  ht32f5xxxx_gpio.o ABSOLUTE
    ht32f5xxxx_i2c.c                         0x00000000   Number         0  ht32f5xxxx_i2c.o ABSOLUTE
    ht32f5xxxx_i2s.c                         0x00000000   Number         0  ht32f5xxxx_i2s.o ABSOLUTE
    ht32f5xxxx_mctm.c                        0x00000000   Number         0  ht32f5xxxx_mctm.o ABSOLUTE
    ht32f5xxxx_pdma.c                        0x00000000   Number         0  ht32f5xxxx_pdma.o ABSOLUTE
    ht32f5xxxx_pwrcu.c                       0x00000000   Number         0  ht32f5xxxx_pwrcu.o ABSOLUTE
    ht32f5xxxx_rstcu.c                       0x00000000   Number         0  ht32f5xxxx_rstcu.o ABSOLUTE
    ht32f5xxxx_rtc.c                         0x00000000   Number         0  ht32f5xxxx_rtc.o ABSOLUTE
    ht32f5xxxx_sci.c                         0x00000000   Number         0  ht32f5xxxx_sci.o ABSOLUTE
    ht32f5xxxx_spi.c                         0x00000000   Number         0  ht32f5xxxx_spi.o ABSOLUTE
    ht32f5xxxx_tm.c                          0x00000000   Number         0  ht32f5xxxx_tm.o ABSOLUTE
    ht32f5xxxx_usart.c                       0x00000000   Number         0  ht32f5xxxx_usart.o ABSOLUTE
    ht32f5xxxx_usbd.c                        0x00000000   Number         0  ht32f5xxxx_usbd.o ABSOLUTE
    ht32f5xxxx_wdt.c                         0x00000000   Number         0  ht32f5xxxx_wdt.o ABSOLUTE
    i2c_eeprom.c                             0x00000000   Number         0  i2c_eeprom.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    spi_flash.c                              0x00000000   Number         0  spi_flash.o ABSOLUTE
    startup_ht32f5xxxx_03.s                  0x00000000   Number         0  startup_ht32f5xxxx_03.o ABSOLUTE
    system_ht32f5xxxx_03.c                   0x00000000   Number         0  system_ht32f5xxxx_03.o ABSOLUTE
    usb_init.c                               0x00000000   Number         0  usb_init.o ABSOLUTE
    RESET                                    0x00000000   Section      356  startup_ht32f5xxxx_03.o(RESET)
    BootProcess                              0x000000cd   Thumb Code    94  startup_ht32f5xxxx_03.o(RESET)
    .ARM.Collect$$$$00000000                 0x00000164   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x00000164   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000168   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x0000016c   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x0000016c   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x0000016c   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000174   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x00000174   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000174   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x00000174   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x00000178   Section        0  uidiv_div0.o(.text)
    .text                                    0x000001b8   Section       48  init.o(.text)
    [Anonymous Symbol]                       0x000001e8   Section        0  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    __arm_cp.19_0                            0x00000360   Number         4  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    [Anonymous Symbol]                       0x00000364   Section        0  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_0                             0x000004cc   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_1                             0x000004d0   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_2                             0x000004d4   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_3                             0x000004d8   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_4                             0x000004dc   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    __arm_cp.1_5                             0x000004e0   Number         4  bmv31t001.o(.text.BMV31T001_Init)
    [Anonymous Symbol]                       0x000004e4   Section        0  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_23                           0x00000834   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_24                           0x00000838   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_33                           0x0000085c   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_34                           0x00000860   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_36                           0x00000868   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_37                           0x00000b10   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_39                           0x00000b18   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_40                           0x00000b1c   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_42                           0x00000b24   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_43                           0x00000b28   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_44                           0x00000b2c   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_46                           0x00000bac   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_0                            0x00001240   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_6                            0x00001244   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_8                            0x00001248   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_9                            0x0000124c   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_10                           0x00001250   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_12                           0x00001254   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_13                           0x00001258   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_19                           0x0000125c   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_20                           0x00001260   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    __arm_cp.18_21                           0x00001264   Number         4  bmv31t001.o(.text.BMV31T001_executeUpdate)
    [Anonymous Symbol]                       0x00001268   Section        0  bmv31t001.o(.text.BMV31T001_initAudioUpdate)
    __arm_cp.16_0                            0x00001284   Number         4  bmv31t001.o(.text.BMV31T001_initAudioUpdate)
    [Anonymous Symbol]                       0x00001288   Section        0  bmv31t001.o(.text.BMV31T001_isUpdateBegin)
    [Anonymous Symbol]                       0x00001294   Section        0  bmv31t001.o(.text.BMV31T001_setPower)
    __arm_cp.14_0                            0x000012b4   Number         4  bmv31t001.o(.text.BMV31T001_setPower)
    [Anonymous Symbol]                       0x000012b8   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus)
    __arm_cp.2_0                             0x000012c4   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus)
    [Anonymous Symbol]                       0x000012c8   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    __arm_cp.31_0                            0x000012fc   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    [Anonymous Symbol]                       0x00001300   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig)
    [Anonymous Symbol]                       0x00001314   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd)
    __arm_cp.6_0                             0x00001324   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd)
    [Anonymous Symbol]                       0x00001328   Section        0  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit)
    __arm_cp.9_0                             0x00001348   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit)
    __arm_cp.9_1                             0x0000134c   Number         4  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit)
    [Anonymous Symbol]                       0x00001350   Section        0  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    __arm_cp.0_0                             0x0000136c   Number         4  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    [Anonymous Symbol]                       0x00001370   Section        0  ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset)
    __arm_cp.3_0                             0x000013a4   Number         4  ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset)
    SPIFlashPageWrite                        0x000013a9   Thumb Code  1552  bmv31t001.o(.text.SPIFlashPageWrite)
    [Anonymous Symbol]                       0x000013a8   Section        0  bmv31t001.o(.text.SPIFlashPageWrite)
    __arm_cp.19_0                            0x000019b8   Number         4  bmv31t001.o(.text.SPIFlashPageWrite)
    SPIFlashWaitForWriteEnd                  0x000019bd   Thumb Code   472  bmv31t001.o(.text.SPIFlashWaitForWriteEnd)
    [Anonymous Symbol]                       0x000019bc   Section        0  bmv31t001.o(.text.SPIFlashWaitForWriteEnd)
    __arm_cp.21_0                            0x00001b94   Number         4  bmv31t001.o(.text.SPIFlashWaitForWriteEnd)
    SPIFlashWriteEnable                      0x00001b99   Thumb Code   248  bmv31t001.o(.text.SPIFlashWriteEnable)
    [Anonymous Symbol]                       0x00001b98   Section        0  bmv31t001.o(.text.SPIFlashWriteEnable)
    __arm_cp.20_0                            0x00001c90   Number         4  bmv31t001.o(.text.SPIFlashWriteEnable)
    [Anonymous Symbol]                       0x00001c94   Section        0  usb_init.o(.text.Suspend)
    __arm_cp.3_0                             0x00001cac   Number         4  usb_init.o(.text.Suspend)
    __arm_cp.3_1                             0x00001cb0   Number         4  usb_init.o(.text.Suspend)
    __arm_cp.3_2                             0x00001cb4   Number         4  usb_init.o(.text.Suspend)
    [Anonymous Symbol]                       0x00001cb8   Section        0  delay.o(.text.SysTick_Handler)
    __arm_cp.2_0                             0x00001cc4   Number         4  delay.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00001cc8   Section        0  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_0                             0x00001e34   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_1                             0x00001e38   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_2                             0x00001e3c   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    __arm_cp.0_3                             0x00001e40   Number         4  system_ht32f5xxxx_03.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00001e44   Section        0  ht32_usbd_class.o(.text.USBDClass_CDC_Tx)
    __arm_cp.16_1                            0x00001ef8   Number         4  ht32_usbd_class.o(.text.USBDClass_CDC_Tx)
    __arm_cp.16_2                            0x00001efc   Number         4  ht32_usbd_class.o(.text.USBDClass_CDC_Tx)
    __arm_cp.16_3                            0x00001f00   Number         4  ht32_usbd_class.o(.text.USBDClass_CDC_Tx)
    USBDClass_Endpoint1                      0x00001f05   Thumb Code     8  ht32_usbd_class.o(.text.USBDClass_Endpoint1)
    [Anonymous Symbol]                       0x00001f04   Section        0  ht32_usbd_class.o(.text.USBDClass_Endpoint1)
    USBDClass_Endpoint2                      0x00001f0d   Thumb Code     2  ht32_usbd_class.o(.text.USBDClass_Endpoint2)
    [Anonymous Symbol]                       0x00001f0c   Section        0  ht32_usbd_class.o(.text.USBDClass_Endpoint2)
    USBDClass_Endpoint3                      0x00001f11   Thumb Code    80  ht32_usbd_class.o(.text.USBDClass_Endpoint3)
    [Anonymous Symbol]                       0x00001f10   Section        0  ht32_usbd_class.o(.text.USBDClass_Endpoint3)
    __arm_cp.15_0                            0x00001f60   Number         4  ht32_usbd_class.o(.text.USBDClass_Endpoint3)
    [Anonymous Symbol]                       0x00001f64   Section        0  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_1                             0x00001f94   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_2                             0x00001f98   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_3                             0x00001f9c   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_4                             0x00001fa0   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_5                             0x00001fa4   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_6                             0x00001fa8   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    __arm_cp.9_7                             0x00001fac   Number         4  ht32_usbd_class.o(.text.USBDClass_Init)
    USBDClass_MainRoutine                    0x00001fb1   Thumb Code    48  ht32_usbd_class.o(.text.USBDClass_MainRoutine)
    [Anonymous Symbol]                       0x00001fb0   Section        0  ht32_usbd_class.o(.text.USBDClass_MainRoutine)
    __arm_cp.10_2                            0x00001fe0   Number         4  ht32_usbd_class.o(.text.USBDClass_MainRoutine)
    USBDClass_Request                        0x00001fe5   Thumb Code    68  ht32_usbd_class.o(.text.USBDClass_Request)
    [Anonymous Symbol]                       0x00001fe4   Section        0  ht32_usbd_class.o(.text.USBDClass_Request)
    __arm_cp.12_0                            0x00002028   Number         4  ht32_usbd_class.o(.text.USBDClass_Request)
    USBDClass_Reset                          0x0000202d   Thumb Code    16  ht32_usbd_class.o(.text.USBDClass_Reset)
    [Anonymous Symbol]                       0x0000202c   Section        0  ht32_usbd_class.o(.text.USBDClass_Reset)
    __arm_cp.11_0                            0x0000203c   Number         4  ht32_usbd_class.o(.text.USBDClass_Reset)
    __arm_cp.11_1                            0x00002040   Number         4  ht32_usbd_class.o(.text.USBDClass_Reset)
    [Anonymous Symbol]                       0x00002044   Section        0  ht32_usbd_core.o(.text.USBDCore_GetStatus)
    __arm_cp.6_0                             0x00002050   Number         4  ht32_usbd_core.o(.text.USBDCore_GetStatus)
    [Anonymous Symbol]                       0x00002054   Section        0  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_0                             0x000024c0   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_1                             0x000024c4   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_2                             0x000024c8   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_3                             0x000024cc   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_4                             0x000024d0   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_5                             0x000024d4   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    __arm_cp.1_6                             0x000024d8   Number         4  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    [Anonymous Symbol]                       0x000024dc   Section        0  ht32_usbd_core.o(.text.USBDCore_Init)
    __arm_cp.0_0                             0x000024f4   Number         4  ht32_usbd_core.o(.text.USBDCore_Init)
    [Anonymous Symbol]                       0x000024f8   Section        0  ht32_usbd_core.o(.text.USBDCore_MainRoutine)
    [Anonymous Symbol]                       0x00002538   Section        0  ht32_usbd_descriptor.o(.text.USBDDesc_Init)
    __arm_cp.0_0                             0x0000254c   Number         4  ht32_usbd_descriptor.o(.text.USBDDesc_Init)
    __arm_cp.0_1                             0x00002550   Number         4  ht32_usbd_descriptor.o(.text.USBDDesc_Init)
    __arm_cp.0_2                             0x00002554   Number         4  ht32_usbd_descriptor.o(.text.USBDDesc_Init)
    [Anonymous Symbol]                       0x00002558   Section        0  ht32f5xxxx_usbd.o(.text.USBD_ClearINT)
    [Anonymous Symbol]                       0x00002560   Section        0  ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd)
    [Anonymous Symbol]                       0x00002578   Section        0  ht32f5xxxx_usbd.o(.text.USBD_DeInit)
    [Anonymous Symbol]                       0x00002588   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG)
    [Anonymous Symbol]                       0x00002598   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt)
    [Anonymous Symbol]                       0x000025a8   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT)
    __arm_cp.22_0                            0x000025b4   Number         4  ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT)
    [Anonymous Symbol]                       0x000025b8   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen)
    __arm_cp.31_0                            0x000025c8   Number         4  ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen)
    [Anonymous Symbol]                       0x000025cc   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt)
    [Anonymous Symbol]                       0x000025ec   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT)
    [Anonymous Symbol]                       0x000025fc   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTInit)
    [Anonymous Symbol]                       0x00002624   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData)
    [Anonymous Symbol]                       0x0000268c   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL)
    [Anonymous Symbol]                       0x00002698   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt)
    [Anonymous Symbol]                       0x000026b0   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData)
    __arm_cp.33_0                            0x000026fc   Number         4  ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData)
    __arm_cp.33_1                            0x00002700   Number         4  ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData)
    __arm_cp.33_2                            0x00002704   Number         4  ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData)
    [Anonymous Symbol]                       0x00002708   Section        0  ht32f5xxxx_usbd.o(.text.USBD_EnableINT)
    [Anonymous Symbol]                       0x00002714   Section        0  ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber)
    [Anonymous Symbol]                       0x00002764   Section        0  ht32f5xxxx_usbd.o(.text.USBD_GetINT)
    __arm_cp.15_0                            0x00002774   Number         4  ht32f5xxxx_usbd.o(.text.USBD_GetINT)
    [Anonymous Symbol]                       0x00002778   Section        0  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_0                             0x0000279c   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_1                             0x000027a0   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_2                             0x000027a4   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_3                             0x000027a8   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_4                             0x000027ac   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    __arm_cp.1_5                             0x000027b0   Number         4  ht32f5xxxx_usbd.o(.text.USBD_Init)
    [Anonymous Symbol]                       0x000027b4   Section        0  ht32f5xxxx_usbd.o(.text.USBD_PowerOff)
    [Anonymous Symbol]                       0x000027c0   Section        0  ht32f5xxxx_usbd.o(.text.USBD_PowerOn)
    [Anonymous Symbol]                       0x000027d8   Section        0  ht32f5xxxx_usbd.o(.text.USBD_PowerUp)
    __arm_cp.5_0                             0x0000285c   Number         4  ht32f5xxxx_usbd.o(.text.USBD_PowerUp)
    __arm_cp.5_1                             0x00002860   Number         4  ht32f5xxxx_usbd.o(.text.USBD_PowerUp)
    __arm_cp.5_2                             0x00002864   Number         4  ht32f5xxxx_usbd.o(.text.USBD_PowerUp)
    [Anonymous Symbol]                       0x00002868   Section        0  ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData)
    __arm_cp.12_0                            0x00002874   Number         4  ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData)
    [Anonymous Symbol]                       0x00002878   Section        0  ht32f5xxxx_usbd.o(.text.USBD_SetAddress)
    __arm_cp.13_0                            0x00002888   Number         4  ht32f5xxxx_usbd.o(.text.USBD_SetAddress)
    [Anonymous Symbol]                       0x0000288c   Section        0  usb_vcp.o(.text.USBSerial_available)
    [Anonymous Symbol]                       0x00002894   Section        0  usb_vcp.o(.text.USBSerial_begin)
    __arm_cp.0_0                             0x000028b0   Number         4  usb_vcp.o(.text.USBSerial_begin)
    [Anonymous Symbol]                       0x000028b4   Section        0  usb_vcp.o(.text.USBSerial_readBytes)
    [Anonymous Symbol]                       0x000028d6   Section        0  usb_vcp.o(.text.USBSerial_write_byte)
    [Anonymous Symbol]                       0x00002900   Section        0  ht32_usbd_class.o(.text.USB_CDC_avilable)
    [Anonymous Symbol]                       0x00002910   Section        0  usb_init.o(.text.USB_Configuration)
    __arm_cp.1_1                             0x0000296c   Number         4  usb_init.o(.text.USB_Configuration)
    __arm_cp.1_2                             0x00002970   Number         4  usb_init.o(.text.USB_Configuration)
    __arm_cp.1_3                             0x00002974   Number         4  usb_init.o(.text.USB_Configuration)
    [Anonymous Symbol]                       0x00002978   Section        0  ht32_usbd_class.o(.text.USB_Configured)
    [Anonymous Symbol]                       0x00002986   Section        0  ht32_usbd_class.o(.text.USB_Connected)
    [Anonymous Symbol]                       0x00002994   Section        0  ht32f5xxxx_01_it.o(.text.USB_IRQHandler)
    [Anonymous Symbol]                       0x000029a0   Section        0  usb_init.o(.text.USB_Serial)
    __arm_cp.4_0                             0x000029c4   Number         4  usb_init.o(.text.USB_Serial)
    [Anonymous Symbol]                       0x000029c8   Section        0  ht32_usbd_class.o(.text.USB_Serial_rx)
    __arm_cp.18_0                            0x00002a30   Number         4  ht32_usbd_class.o(.text.USB_Serial_rx)
    _USBD_CopyMemory                         0x00002a35   Thumb Code   708  ht32f5xxxx_usbd.o(.text._USBD_CopyMemory)
    [Anonymous Symbol]                       0x00002a34   Section        0  ht32f5xxxx_usbd.o(.text._USBD_CopyMemory)
    __arm_cp.34_0                            0x00002cf8   Number         4  ht32f5xxxx_usbd.o(.text._USBD_CopyMemory)
    [Anonymous Symbol]                       0x00002cfc   Section        0  delay.o(.text.delay_ms)
    __arm_cp.4_0                             0x00002e34   Number         4  delay.o(.text.delay_ms)
    [Anonymous Symbol]                       0x00002e38   Section        0  delay.o(.text.delay_us)
    __arm_cp.3_0                             0x00002e68   Number         4  delay.o(.text.delay_us)
    [Anonymous Symbol]                       0x00002e6c   Section        0  main.o(.text.main)
    __arm_cp.0_0                             0x00002ec8   Number         4  main.o(.text.main)
    __arm_cp.0_1                             0x00002ecc   Number         4  main.o(.text.main)
    __arm_cp.0_2                             0x00002ed0   Number         4  main.o(.text.main)
    __arm_cp.0_3                             0x00002ed4   Number         4  main.o(.text.main)
    sendData                                 0x00002ed9   Thumb Code   136  bmv31t001.o(.text.sendData)
    [Anonymous Symbol]                       0x00002ed8   Section        0  bmv31t001.o(.text.sendData)
    __arm_cp.22_0                            0x00002f60   Number         4  bmv31t001.o(.text.sendData)
    i.__scatterload_copy                     0x00002f64   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00002f72   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00002f74   Section       14  handlers.o(i.__scatterload_zeroinit)
    crc_table                                0x00002f82   Data         256  bmv31t001.o(.rodata.crc_table)
    [Anonymous Symbol]                       0x00002f82   Section        0  bmv31t001.o(.rodata.crc_table)
    guUSB_ConfnDesc                          0x00003084   Data          75  ht32_usbd_descriptor.o(.rodata.guUSB_ConfnDesc)
    [Anonymous Symbol]                       0x00003084   Section        0  ht32_usbd_descriptor.o(.rodata.guUSB_ConfnDesc)
    guUSB_DeviceDesc                         0x000030d0   Data          18  ht32_usbd_descriptor.o(.rodata.guUSB_DeviceDesc)
    [Anonymous Symbol]                       0x000030d0   Section        0  ht32_usbd_descriptor.o(.rodata.guUSB_DeviceDesc)
    guUSB_StringDescLANGID                   0x000030e4   Data           4  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescLANGID)
    [Anonymous Symbol]                       0x000030e4   Section        0  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescLANGID)
    guUSB_StringDescManufacture              0x000030e8   Data          14  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescManufacture)
    [Anonymous Symbol]                       0x000030e8   Section        0  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescManufacture)
    guUSB_StringDescProduct                  0x000030f8   Data          26  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescProduct)
    [Anonymous Symbol]                       0x000030f8   Section        0  ht32_usbd_descriptor.o(.rodata.guUSB_StringDescProduct)
    gIsCDCEPINEmpty                          0x20000004   Data           4  ht32_usbd_class.o(.data.gIsCDCEPINEmpty)
    [Anonymous Symbol]                       0x20000004   Section        0  ht32_usbd_class.o(.data.gIsCDCEPINEmpty)
    guUSB_StringDescSerialNum                0x2000001c   Data          20  ht32_usbd_descriptor.o(.data.guUSB_StringDescSerialNum)
    [Anonymous Symbol]                       0x2000001c   Section        0  ht32_usbd_descriptor.o(.data.guUSB_StringDescSerialNum)
    BMV31T001_executeUpdate.dataLength       0x20000030   Data           1  bmv31t001.o(.bss.BMV31T001_executeUpdate.dataLength)
    [Anonymous Symbol]                       0x20000030   Section        0  bmv31t001.o(.bss.BMV31T001_executeUpdate.dataLength)
    HardFault_Handler.gIsContinue            0x20000034   Data           4  ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue)
    [Anonymous Symbol]                       0x20000034   Section        0  ht32f5xxxx_01_it.o(.bss.HardFault_Handler.gIsContinue)
    USBDClassVCPLineCoding                   0x2000003c   Data           8  ht32_usbd_class.o(.bss.USBDClassVCPLineCoding)
    [Anonymous Symbol]                       0x2000003c   Section        0  ht32_usbd_class.o(.bss.USBDClassVCPLineCoding)
    _flashAddr                               0x20000044   Data           4  bmv31t001.o(.bss._flashAddr)
    [Anonymous Symbol]                       0x20000044   Section        0  bmv31t001.o(.bss._flashAddr)
    _hasBegun                                0x20000048   Data           1  usb_vcp.o(.bss._hasBegun)
    [Anonymous Symbol]                       0x20000048   Section        0  usb_vcp.o(.bss._hasBegun)
    _isKey                                   0x20000049   Data           1  bmv31t001.o(.bss._isKey)
    [Anonymous Symbol]                       0x20000049   Section        0  bmv31t001.o(.bss._isKey)
    _keyValue                                0x2000004a   Data           1  bmv31t001.o(.bss._keyValue)
    [Anonymous Symbol]                       0x2000004a   Section        0  bmv31t001.o(.bss._keyValue)
    ack.i                                    0x2000004b   Data           1  bmv31t001.o(.bss.ack.i)
    [Anonymous Symbol]                       0x2000004b   Section        0  bmv31t001.o(.bss.ack.i)
    deviceSFDPBuf                            0x2000004c   Data           4  bmv31t001.o(.bss.deviceSFDPBuf)
    [Anonymous Symbol]                       0x2000004c   Section        0  bmv31t001.o(.bss.deviceSFDPBuf)
    dummyClocks.i                            0x20000050   Data           2  bmv31t001.o(.bss.dummyClocks.i)
    [Anonymous Symbol]                       0x20000050   Section        0  bmv31t001.o(.bss.dummyClocks.i)
    gIsFirstPowered                          0x20000054   Data           1  ht32f5xxxx_usbd.o(.bss.gIsFirstPowered)
    [Anonymous Symbol]                       0x20000054   Section        0  ht32f5xxxx_usbd.o(.bss.gIsFirstPowered)
    gIsZLP_Require                           0x20000058   Data           1  ht32_usbd_class.o(.bss.gIsZLP_Require)
    [Anonymous Symbol]                       0x20000058   Section        0  ht32_usbd_class.o(.bss.gIsZLP_Require)
    gOutputDataBuffer                        0x2000005c   Data          64  ht32_usbd_class.o(.bss.gOutputDataBuffer)
    [Anonymous Symbol]                       0x2000005c   Section        0  ht32_usbd_class.o(.bss.gOutputDataBuffer)
    gRingBuffer                              0x2000009c   Data          16  ht32_usbd_class.o(.bss.gRingBuffer)
    [Anonymous Symbol]                       0x2000009c   Section        0  ht32_usbd_class.o(.bss.gRingBuffer)
    gRingDataBuffer                          0x200000ac   Data         512  ht32_usbd_class.o(.bss.gRingDataBuffer)
    [Anonymous Symbol]                       0x200000ac   Section        0  ht32_usbd_class.o(.bss.gRingDataBuffer)
    programEntry.retransmissionTimes         0x20000388   Data           1  bmv31t001.o(.bss.programEntry.retransmissionTimes)
    [Anonymous Symbol]                       0x20000388   Section        0  bmv31t001.o(.bss.programEntry.retransmissionTimes)
    recAudioData.dataLength                  0x20000389   Data           1  bmv31t001.o(.bss.recAudioData.dataLength)
    [Anonymous Symbol]                       0x20000389   Section        0  bmv31t001.o(.bss.recAudioData.dataLength)
    recAudioData.remainder                   0x2000038a   Data           1  bmv31t001.o(.bss.recAudioData.remainder)
    [Anonymous Symbol]                       0x2000038a   Section        0  bmv31t001.o(.bss.recAudioData.remainder)
    recAudioData.sumDataCnt                  0x2000038c   Data           4  bmv31t001.o(.bss.recAudioData.sumDataCnt)
    [Anonymous Symbol]                       0x2000038c   Section        0  bmv31t001.o(.bss.recAudioData.sumDataCnt)
    rxBuffer                                 0x20000390   Data          64  bmv31t001.o(.bss.rxBuffer)
    [Anonymous Symbol]                       0x20000390   Section        0  bmv31t001.o(.bss.rxBuffer)
    switchSPIMode.correctFlag                0x200003d0   Data           1  bmv31t001.o(.bss.switchSPIMode.correctFlag)
    [Anonymous Symbol]                       0x200003d0   Section        0  bmv31t001.o(.bss.switchSPIMode.correctFlag)
    switchSPIMode.retransmissionTimes        0x200003d1   Data           1  bmv31t001.o(.bss.switchSPIMode.retransmissionTimes)
    [Anonymous Symbol]                       0x200003d1   Section        0  bmv31t001.o(.bss.switchSPIMode.retransmissionTimes)
    STACK                                    0x200003d8   Section     1024  startup_ht32f5xxxx_03.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv3M$S$PE$A:L22$X:L11$S22$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           0  startup_ht32f5xxxx_03.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    Reset_Handler                            0x000000c1   Thumb Code    12  startup_ht32f5xxxx_03.o(RESET)
    NMI_Handler                              0x0000012b   Thumb Code     2  startup_ht32f5xxxx_03.o(RESET)
    SVC_Handler                              0x0000012f   Thumb Code     2  startup_ht32f5xxxx_03.o(RESET)
    PendSV_Handler                           0x00000131   Thumb Code     2  startup_ht32f5xxxx_03.o(RESET)
    ADC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    AES_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    BFTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_DAC_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    COMP_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EVWUP_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI0_1_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI2_3_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    EXTI4_15_IRQHandler                      0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    FLASH_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    GPTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2C0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2C1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    I2S_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    LVD_BOD_IRQHandler                       0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    MCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH0_1_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PDMA_CH2_5_IRQHandler                    0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    PWM1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    QSPI_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    RTC_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCI_IRQHandler                           0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SCTM1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SPI0_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    SPI1_IRQHandler                          0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART0_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART0_UART2_IRQHandler                   0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART1_IRQHandler                         0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    UART1_UART3_IRQHandler                   0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USART0_IRQHandler                        0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    USART1_IRQHandler                        0x00000135   Thumb Code     0  startup_ht32f5xxxx_03.o(RESET)
    __main                                   0x00000165   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000165   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000169   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x0000016d   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x0000016d   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x0000016d   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x0000016d   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000175   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000175   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    __aeabi_uidiv                            0x00000179   Thumb Code     0  uidiv_div0.o(.text)
    __aeabi_uidivmod                         0x00000179   Thumb Code    62  uidiv_div0.o(.text)
    __scatterload                            0x000001b9   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x000001b9   Thumb Code     0  init.o(.text)
    AFIO_GPxConfig                           0x000001e9   Thumb Code   376  ht32f5xxxx_gpio.o(.text.AFIO_GPxConfig)
    BMV31T001_Init                           0x00000365   Thumb Code   360  bmv31t001.o(.text.BMV31T001_Init)
    BMV31T001_executeUpdate                  0x000004e5   Thumb Code  3420  bmv31t001.o(.text.BMV31T001_executeUpdate)
    BMV31T001_initAudioUpdate                0x00001269   Thumb Code    28  bmv31t001.o(.text.BMV31T001_initAudioUpdate)
    BMV31T001_isUpdateBegin                  0x00001289   Thumb Code    12  bmv31t001.o(.text.BMV31T001_isUpdateBegin)
    BMV31T001_setPower                       0x00001295   Thumb Code    32  bmv31t001.o(.text.BMV31T001_setPower)
    CKCU_GetClockReadyStatus                 0x000012b9   Thumb Code    12  ht32f5xxxx_ckcu.o(.text.CKCU_GetClockReadyStatus)
    CKCU_PeripClockConfig                    0x000012c9   Thumb Code    52  ht32f5xxxx_ckcu.o(.text.CKCU_PeripClockConfig)
    CKCU_USBClockConfig                      0x00001301   Thumb Code    20  ht32f5xxxx_ckcu.o(.text.CKCU_USBClockConfig)
    CKCU_USBPLLCmd                           0x00001315   Thumb Code    16  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLCmd)
    CKCU_USBPLLInit                          0x00001329   Thumb Code    32  ht32f5xxxx_ckcu.o(.text.CKCU_USBPLLInit)
    HardFault_Handler                        0x00001351   Thumb Code    28  ht32f5xxxx_01_it.o(.text.HardFault_Handler)
    RSTCU_PeripReset                         0x00001371   Thumb Code    52  ht32f5xxxx_rstcu.o(.text.RSTCU_PeripReset)
    Suspend                                  0x00001c95   Thumb Code    24  usb_init.o(.text.Suspend)
    SysTick_Handler                          0x00001cb9   Thumb Code    12  delay.o(.text.SysTick_Handler)
    SystemInit                               0x00001cc9   Thumb Code   364  system_ht32f5xxxx_03.o(.text.SystemInit)
    USBDClass_CDC_Tx                         0x00001e45   Thumb Code   180  ht32_usbd_class.o(.text.USBDClass_CDC_Tx)
    USBDClass_Init                           0x00001f65   Thumb Code    48  ht32_usbd_class.o(.text.USBDClass_Init)
    USBDCore_GetStatus                       0x00002045   Thumb Code    12  ht32_usbd_core.o(.text.USBDCore_GetStatus)
    USBDCore_IRQHandler                      0x00002055   Thumb Code  1132  ht32_usbd_core.o(.text.USBDCore_IRQHandler)
    USBDCore_Init                            0x000024dd   Thumb Code    24  ht32_usbd_core.o(.text.USBDCore_Init)
    USBDCore_MainRoutine                     0x000024f9   Thumb Code    62  ht32_usbd_core.o(.text.USBDCore_MainRoutine)
    USBDDesc_Init                            0x00002539   Thumb Code    20  ht32_usbd_descriptor.o(.text.USBDDesc_Init)
    USBD_ClearINT                            0x00002559   Thumb Code     8  ht32f5xxxx_usbd.o(.text.USBD_ClearINT)
    USBD_DPpullupCmd                         0x00002561   Thumb Code    24  ht32f5xxxx_usbd.o(.text.USBD_DPpullupCmd)
    USBD_DeInit                              0x00002579   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_DeInit)
    USBD_EPTClearDTG                         0x00002589   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_EPTClearDTG)
    USBD_EPTClearHalt                        0x00002599   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_EPTClearHalt)
    USBD_EPTClearINT                         0x000025a9   Thumb Code    12  ht32f5xxxx_usbd.o(.text.USBD_EPTClearINT)
    USBD_EPTGetBufferLen                     0x000025b9   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_EPTGetBufferLen)
    USBD_EPTGetHalt                          0x000025cd   Thumb Code    32  ht32f5xxxx_usbd.o(.text.USBD_EPTGetHalt)
    USBD_EPTGetINT                           0x000025ed   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_EPTGetINT)
    USBD_EPTInit                             0x000025fd   Thumb Code    40  ht32f5xxxx_usbd.o(.text.USBD_EPTInit)
    USBD_EPTReadOUTData                      0x00002625   Thumb Code   104  ht32f5xxxx_usbd.o(.text.USBD_EPTReadOUTData)
    USBD_EPTSendSTALL                        0x0000268d   Thumb Code    12  ht32f5xxxx_usbd.o(.text.USBD_EPTSendSTALL)
    USBD_EPTSetHalt                          0x00002699   Thumb Code    24  ht32f5xxxx_usbd.o(.text.USBD_EPTSetHalt)
    USBD_EPTWriteINData                      0x000026b1   Thumb Code    76  ht32f5xxxx_usbd.o(.text.USBD_EPTWriteINData)
    USBD_EnableINT                           0x00002709   Thumb Code    12  ht32f5xxxx_usbd.o(.text.USBD_EnableINT)
    USBD_GetEPTnINTNumber                    0x00002715   Thumb Code    78  ht32f5xxxx_usbd.o(.text.USBD_GetEPTnINTNumber)
    USBD_GetINT                              0x00002765   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_GetINT)
    USBD_Init                                0x00002779   Thumb Code    36  ht32f5xxxx_usbd.o(.text.USBD_Init)
    USBD_PowerOff                            0x000027b5   Thumb Code    12  ht32f5xxxx_usbd.o(.text.USBD_PowerOff)
    USBD_PowerOn                             0x000027c1   Thumb Code    24  ht32f5xxxx_usbd.o(.text.USBD_PowerOn)
    USBD_PowerUp                             0x000027d9   Thumb Code   132  ht32f5xxxx_usbd.o(.text.USBD_PowerUp)
    USBD_ReadSETUPData                       0x00002869   Thumb Code    12  ht32f5xxxx_usbd.o(.text.USBD_ReadSETUPData)
    USBD_SetAddress                          0x00002879   Thumb Code    16  ht32f5xxxx_usbd.o(.text.USBD_SetAddress)
    USBSerial_available                      0x0000288d   Thumb Code     8  usb_vcp.o(.text.USBSerial_available)
    USBSerial_begin                          0x00002895   Thumb Code    28  usb_vcp.o(.text.USBSerial_begin)
    USBSerial_readBytes                      0x000028b5   Thumb Code    34  usb_vcp.o(.text.USBSerial_readBytes)
    USBSerial_write_byte                     0x000028d7   Thumb Code    42  usb_vcp.o(.text.USBSerial_write_byte)
    USB_CDC_avilable                         0x00002901   Thumb Code    16  ht32_usbd_class.o(.text.USB_CDC_avilable)
    USB_Configuration                        0x00002911   Thumb Code    92  usb_init.o(.text.USB_Configuration)
    USB_Configured                           0x00002979   Thumb Code    14  ht32_usbd_class.o(.text.USB_Configured)
    USB_Connected                            0x00002987   Thumb Code    12  ht32_usbd_class.o(.text.USB_Connected)
    USB_IRQHandler                           0x00002995   Thumb Code    12  ht32f5xxxx_01_it.o(.text.USB_IRQHandler)
    USB_Serial                               0x000029a1   Thumb Code    36  usb_init.o(.text.USB_Serial)
    USB_Serial_rx                            0x000029c9   Thumb Code   104  ht32_usbd_class.o(.text.USB_Serial_rx)
    delay_ms                                 0x00002cfd   Thumb Code   312  delay.o(.text.delay_ms)
    delay_us                                 0x00002e39   Thumb Code    48  delay.o(.text.delay_us)
    main                                     0x00002e6d   Thumb Code    92  main.o(.text.main)
    __scatterload_copy                       0x00002f65   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00002f73   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00002f75   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x00003114   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00003134   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000000   Data           4  system_ht32f5xxxx_03.o(.data.SystemCoreClock)
    gIsLowPowerAllowed                       0x20000008   Data           4  usb_init.o(.data.gIsLowPowerAllowed)
    gpStringDesc                             0x2000000c   Data          16  ht32_usbd_descriptor.o(.data.gpStringDesc)
    Systick_count                            0x20000038   Data           4  delay.o(.bss.Systick_count)
    gUSBCore                                 0x200002ac   Data         148  usb_init.o(.bss.gUSBCore)
    gUSBDriver                               0x20000340   Data          68  usb_init.o(.bss.gUSBDriver)
    pUSBCore                                 0x20000384   Data           4  ht32_usbd_core.o(.bss.pUSBCore)
    __HT_check_sp                            0x200003d8   Data           0  startup_ht32f5xxxx_03.o(STACK)
    __initial_sp                             0x200007d8   Data           0  startup_ht32f5xxxx_03.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_1 (Base: 0x00000000, Size: 0x00003164, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00003134, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000164   Code   RO          266  * RESET               startup_ht32f5xxxx_03.o
    0x00000164   0x00000164   0x00000000   Code   RO         1614  * .ARM.Collect$$$$00000000  mc_p.l(entry.o)
    0x00000164   0x00000164   0x00000004   Code   RO         1625    .ARM.Collect$$$$00000001  mc_p.l(entry2.o)
    0x00000168   0x00000168   0x00000004   Code   RO         1628    .ARM.Collect$$$$00000004  mc_p.l(entry5.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         1630    .ARM.Collect$$$$00000008  mc_p.l(entry7b.o)
    0x0000016c   0x0000016c   0x00000000   Code   RO         1632    .ARM.Collect$$$$0000000A  mc_p.l(entry8b.o)
    0x0000016c   0x0000016c   0x00000008   Code   RO         1633    .ARM.Collect$$$$0000000B  mc_p.l(entry9a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         1635    .ARM.Collect$$$$0000000D  mc_p.l(entry10a.o)
    0x00000174   0x00000174   0x00000000   Code   RO         1637    .ARM.Collect$$$$0000000F  mc_p.l(entry11a.o)
    0x00000174   0x00000174   0x00000004   Code   RO         1626    .ARM.Collect$$$$00002712  mc_p.l(entry2.o)
    0x00000178   0x00000178   0x0000003e   Code   RO         1643    .text               mc_p.l(uidiv_div0.o)
    0x000001b6   0x000001b6   0x00000002   PAD
    0x000001b8   0x000001b8   0x00000030   Code   RO         1649    .text               mc_p.l(init.o)
    0x000001e8   0x000001e8   0x0000017c   Code   RO          755    .text.AFIO_GPxConfig  ht32f5xxxx_gpio.o
    0x00000364   0x00000364   0x00000180   Code   RO           33    .text.BMV31T001_Init  bmv31t001.o
    0x000004e4   0x000004e4   0x00000d84   Code   RO           67    .text.BMV31T001_executeUpdate  bmv31t001.o
    0x00001268   0x00001268   0x00000020   Code   RO           63    .text.BMV31T001_initAudioUpdate  bmv31t001.o
    0x00001288   0x00001288   0x0000000c   Code   RO           65    .text.BMV31T001_isUpdateBegin  bmv31t001.o
    0x00001294   0x00001294   0x00000024   Code   RO           59    .text.BMV31T001_setPower  bmv31t001.o
    0x000012b8   0x000012b8   0x00000010   Code   RO          457    .text.CKCU_GetClockReadyStatus  ht32f5xxxx_ckcu.o
    0x000012c8   0x000012c8   0x00000038   Code   RO          515    .text.CKCU_PeripClockConfig  ht32f5xxxx_ckcu.o
    0x00001300   0x00001300   0x00000014   Code   RO          473    .text.CKCU_USBClockConfig  ht32f5xxxx_ckcu.o
    0x00001314   0x00001314   0x00000014   Code   RO          465    .text.CKCU_USBPLLCmd  ht32f5xxxx_ckcu.o
    0x00001328   0x00001328   0x00000028   Code   RO          471    .text.CKCU_USBPLLInit  ht32f5xxxx_ckcu.o
    0x00001350   0x00001350   0x00000020   Code   RO           19    .text.HardFault_Handler  ht32f5xxxx_01_it.o
    0x00001370   0x00001370   0x00000038   Code   RO          977    .text.RSTCU_PeripReset  ht32f5xxxx_rstcu.o
    0x000013a8   0x000013a8   0x00000614   Code   RO           69    .text.SPIFlashPageWrite  bmv31t001.o
    0x000019bc   0x000019bc   0x000001dc   Code   RO           73    .text.SPIFlashWaitForWriteEnd  bmv31t001.o
    0x00001b98   0x00001b98   0x000000fc   Code   RO           71    .text.SPIFlashWriteEnable  bmv31t001.o
    0x00001c94   0x00001c94   0x00000024   Code   RO          215    .text.Suspend       usb_init.o
    0x00001cb8   0x00001cb8   0x00000010   Code   RO          107    .text.SysTick_Handler  delay.o
    0x00001cc8   0x00001cc8   0x0000017c   Code   RO          252    .text.SystemInit    system_ht32f5xxxx_03.o
    0x00001e44   0x00001e44   0x000000c0   Code   RO          170    .text.USBDClass_CDC_Tx  ht32_usbd_class.o
    0x00001f04   0x00001f04   0x00000008   Code   RO          164    .text.USBDClass_Endpoint1  ht32_usbd_class.o
    0x00001f0c   0x00001f0c   0x00000002   Code   RO          166    .text.USBDClass_Endpoint2  ht32_usbd_class.o
    0x00001f0e   0x00001f0e   0x00000002   PAD
    0x00001f10   0x00001f10   0x00000054   Code   RO          168    .text.USBDClass_Endpoint3  ht32_usbd_class.o
    0x00001f64   0x00001f64   0x0000004c   Code   RO          156    .text.USBDClass_Init  ht32_usbd_class.o
    0x00001fb0   0x00001fb0   0x00000034   Code   RO          158    .text.USBDClass_MainRoutine  ht32_usbd_class.o
    0x00001fe4   0x00001fe4   0x00000048   Code   RO          162    .text.USBDClass_Request  ht32_usbd_class.o
    0x0000202c   0x0000202c   0x00000018   Code   RO          160    .text.USBDClass_Reset  ht32_usbd_class.o
    0x00002044   0x00002044   0x00000010   Code   RO          285    .text.USBDCore_GetStatus  ht32_usbd_core.o
    0x00002054   0x00002054   0x00000488   Code   RO          275    .text.USBDCore_IRQHandler  ht32_usbd_core.o
    0x000024dc   0x000024dc   0x0000001c   Code   RO          273    .text.USBDCore_Init  ht32_usbd_core.o
    0x000024f8   0x000024f8   0x0000003e   Code   RO          277    .text.USBDCore_MainRoutine  ht32_usbd_core.o
    0x00002536   0x00002536   0x00000002   PAD
    0x00002538   0x00002538   0x00000020   Code   RO          194    .text.USBDDesc_Init  ht32_usbd_descriptor.o
    0x00002558   0x00002558   0x00000008   Code   RO         1331    .text.USBD_ClearINT  ht32f5xxxx_usbd.o
    0x00002560   0x00002560   0x00000018   Code   RO         1303    .text.USBD_DPpullupCmd  ht32f5xxxx_usbd.o
    0x00002578   0x00002578   0x00000010   Code   RO         1307    .text.USBD_DeInit   ht32f5xxxx_usbd.o
    0x00002588   0x00002588   0x00000010   Code   RO         1355    .text.USBD_EPTClearDTG  ht32f5xxxx_usbd.o
    0x00002598   0x00002598   0x00000010   Code   RO         1351    .text.USBD_EPTClearHalt  ht32f5xxxx_usbd.o
    0x000025a8   0x000025a8   0x00000010   Code   RO         1343    .text.USBD_EPTClearINT  ht32f5xxxx_usbd.o
    0x000025b8   0x000025b8   0x00000014   Code   RO         1361    .text.USBD_EPTGetBufferLen  ht32f5xxxx_usbd.o
    0x000025cc   0x000025cc   0x00000020   Code   RO         1345    .text.USBD_EPTGetHalt  ht32f5xxxx_usbd.o
    0x000025ec   0x000025ec   0x00000010   Code   RO         1341    .text.USBD_EPTGetINT  ht32f5xxxx_usbd.o
    0x000025fc   0x000025fc   0x00000028   Code   RO         1335    .text.USBD_EPTInit  ht32f5xxxx_usbd.o
    0x00002624   0x00002624   0x00000068   Code   RO         1369    .text.USBD_EPTReadOUTData  ht32f5xxxx_usbd.o
    0x0000268c   0x0000268c   0x0000000c   Code   RO         1347    .text.USBD_EPTSendSTALL  ht32f5xxxx_usbd.o
    0x00002698   0x00002698   0x00000018   Code   RO         1349    .text.USBD_EPTSetHalt  ht32f5xxxx_usbd.o
    0x000026b0   0x000026b0   0x00000058   Code   RO         1365    .text.USBD_EPTWriteINData  ht32f5xxxx_usbd.o
    0x00002708   0x00002708   0x0000000c   Code   RO         1311    .text.USBD_EnableINT  ht32f5xxxx_usbd.o
    0x00002714   0x00002714   0x0000004e   Code   RO         1333    .text.USBD_GetEPTnINTNumber  ht32f5xxxx_usbd.o
    0x00002762   0x00002762   0x00000002   PAD
    0x00002764   0x00002764   0x00000014   Code   RO         1329    .text.USBD_GetINT   ht32f5xxxx_usbd.o
    0x00002778   0x00002778   0x0000003c   Code   RO         1301    .text.USBD_Init     ht32f5xxxx_usbd.o
    0x000027b4   0x000027b4   0x0000000c   Code   RO         1313    .text.USBD_PowerOff  ht32f5xxxx_usbd.o
    0x000027c0   0x000027c0   0x00000018   Code   RO         1315    .text.USBD_PowerOn  ht32f5xxxx_usbd.o
    0x000027d8   0x000027d8   0x00000090   Code   RO         1309    .text.USBD_PowerUp  ht32f5xxxx_usbd.o
    0x00002868   0x00002868   0x00000010   Code   RO         1323    .text.USBD_ReadSETUPData  ht32f5xxxx_usbd.o
    0x00002878   0x00002878   0x00000014   Code   RO         1325    .text.USBD_SetAddress  ht32f5xxxx_usbd.o
    0x0000288c   0x0000288c   0x00000008   Code   RO          234    .text.USBSerial_available  usb_vcp.o
    0x00002894   0x00002894   0x00000020   Code   RO          230    .text.USBSerial_begin  usb_vcp.o
    0x000028b4   0x000028b4   0x00000022   Code   RO          236    .text.USBSerial_readBytes  usb_vcp.o
    0x000028d6   0x000028d6   0x0000002a   Code   RO          238    .text.USBSerial_write_byte  usb_vcp.o
    0x00002900   0x00002900   0x00000010   Code   RO          172    .text.USB_CDC_avilable  ht32_usbd_class.o
    0x00002910   0x00002910   0x00000068   Code   RO          211    .text.USB_Configuration  usb_init.o
    0x00002978   0x00002978   0x0000000e   Code   RO          178    .text.USB_Configured  ht32_usbd_class.o
    0x00002986   0x00002986   0x0000000c   Code   RO          176    .text.USB_Connected  ht32_usbd_class.o
    0x00002992   0x00002992   0x00000002   PAD
    0x00002994   0x00002994   0x0000000c   Code   RO           21    .text.USB_IRQHandler  ht32f5xxxx_01_it.o
    0x000029a0   0x000029a0   0x00000028   Code   RO          217    .text.USB_Serial    usb_init.o
    0x000029c8   0x000029c8   0x0000006c   Code   RO          174    .text.USB_Serial_rx  ht32_usbd_class.o
    0x00002a34   0x00002a34   0x000002c8   Code   RO         1367    .text._USBD_CopyMemory  ht32f5xxxx_usbd.o
    0x00002cfc   0x00002cfc   0x0000013c   Code   RO          111    .text.delay_ms      delay.o
    0x00002e38   0x00002e38   0x00000034   Code   RO          109    .text.delay_us      delay.o
    0x00002e6c   0x00002e6c   0x0000006c   Code   RO            2    .text.main          main.o
    0x00002ed8   0x00002ed8   0x0000008c   Code   RO           75    .text.sendData      bmv31t001.o
    0x00002f64   0x00002f64   0x0000000e   Code   RO         1653    i.__scatterload_copy  mc_p.l(handlers.o)
    0x00002f72   0x00002f72   0x00000002   Code   RO         1654    i.__scatterload_null  mc_p.l(handlers.o)
    0x00002f74   0x00002f74   0x0000000e   Code   RO         1655    i.__scatterload_zeroinit  mc_p.l(handlers.o)
    0x00002f82   0x00002f82   0x00000100   Data   RO           94    .rodata.crc_table   bmv31t001.o
    0x00003082   0x00003082   0x00000002   PAD
    0x00003084   0x00003084   0x0000004b   Data   RO          202    .rodata.guUSB_ConfnDesc  ht32_usbd_descriptor.o
    0x000030cf   0x000030cf   0x00000001   PAD
    0x000030d0   0x000030d0   0x00000012   Data   RO          201    .rodata.guUSB_DeviceDesc  ht32_usbd_descriptor.o
    0x000030e2   0x000030e2   0x00000002   PAD
    0x000030e4   0x000030e4   0x00000004   Data   RO          196    .rodata.guUSB_StringDescLANGID  ht32_usbd_descriptor.o
    0x000030e8   0x000030e8   0x0000000e   Data   RO          197    .rodata.guUSB_StringDescManufacture  ht32_usbd_descriptor.o
    0x000030f6   0x000030f6   0x00000002   PAD
    0x000030f8   0x000030f8   0x0000001a   Data   RO          198    .rodata.guUSB_StringDescProduct  ht32_usbd_descriptor.o
    0x00003112   0x00003112   0x00000002   PAD
    0x00003114   0x00003114   0x00000020   Data   RO         1652    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x00003134, Size: 0x00000030, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00003134   0x00000004   Data   RW          256    .data.SystemCoreClock  system_ht32f5xxxx_03.o
    0x20000004   0x00003138   0x00000004   Data   RW          182    .data.gIsCDCEPINEmpty  ht32_usbd_class.o
    0x20000008   0x0000313c   0x00000004   Data   RW          219    .data.gIsLowPowerAllowed  usb_init.o
    0x2000000c   0x00003140   0x00000010   Data   RW          200    .data.gpStringDesc  ht32_usbd_descriptor.o
    0x2000001c   0x00003150   0x00000014   Data   RW          199    .data.guUSB_StringDescSerialNum  ht32_usbd_descriptor.o


    Execution Region ER_ZI (Exec base: 0x20000030, Load base: 0x00003164, Size: 0x000007a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000030        -       0x00000001   Zero   RW           83    .bss.BMV31T001_executeUpdate.dataLength  bmv31t001.o
    0x20000031   0x00003164   0x00000003   PAD
    0x20000034        -       0x00000004   Zero   RW           23    .bss.HardFault_Handler.gIsContinue  ht32f5xxxx_01_it.o
    0x20000038        -       0x00000004   Zero   RW          129    .bss.Systick_count  delay.o
    0x2000003c        -       0x00000008   Zero   RW          184    .bss.USBDClassVCPLineCoding  ht32_usbd_class.o
    0x20000044        -       0x00000004   Zero   RW           79    .bss._flashAddr     bmv31t001.o
    0x20000048        -       0x00000001   Zero   RW          242    .bss._hasBegun      usb_vcp.o
    0x20000049        -       0x00000001   Zero   RW           78    .bss._isKey         bmv31t001.o
    0x2000004a        -       0x00000001   Zero   RW           77    .bss._keyValue      bmv31t001.o
    0x2000004b        -       0x00000001   Zero   RW           92    .bss.ack.i          bmv31t001.o
    0x2000004c        -       0x00000004   Zero   RW           90    .bss.deviceSFDPBuf  bmv31t001.o
    0x20000050        -       0x00000002   Zero   RW           93    .bss.dummyClocks.i  bmv31t001.o
    0x20000052   0x00003164   0x00000002   PAD
    0x20000054        -       0x00000001   Zero   RW         1373    .bss.gIsFirstPowered  ht32f5xxxx_usbd.o
    0x20000055   0x00003164   0x00000003   PAD
    0x20000058        -       0x00000001   Zero   RW          183    .bss.gIsZLP_Require  ht32_usbd_class.o
    0x20000059   0x00003164   0x00000003   PAD
    0x2000005c        -       0x00000040   Zero   RW          185    .bss.gOutputDataBuffer  ht32_usbd_class.o
    0x2000009c        -       0x00000010   Zero   RW          180    .bss.gRingBuffer    ht32_usbd_class.o
    0x200000ac        -       0x00000200   Zero   RW          181    .bss.gRingDataBuffer  ht32_usbd_class.o
    0x200002ac        -       0x00000094   Zero   RW          221    .bss.gUSBCore       usb_init.o
    0x20000340        -       0x00000044   Zero   RW          220    .bss.gUSBDriver     usb_init.o
    0x20000384        -       0x00000004   Zero   RW          287    .bss.pUSBCore       ht32_usbd_core.o
    0x20000388        -       0x00000001   Zero   RW           91    .bss.programEntry.retransmissionTimes  bmv31t001.o
    0x20000389        -       0x00000001   Zero   RW           85    .bss.recAudioData.dataLength  bmv31t001.o
    0x2000038a        -       0x00000001   Zero   RW           86    .bss.recAudioData.remainder  bmv31t001.o
    0x2000038b   0x00003164   0x00000001   PAD
    0x2000038c        -       0x00000004   Zero   RW           87    .bss.recAudioData.sumDataCnt  bmv31t001.o
    0x20000390        -       0x00000040   Zero   RW           84    .bss.rxBuffer       bmv31t001.o
    0x200003d0        -       0x00000001   Zero   RW           88    .bss.switchSPIMode.correctFlag  bmv31t001.o
    0x200003d1        -       0x00000001   Zero   RW           89    .bss.switchSPIMode.retransmissionTimes  bmv31t001.o
    0x200003d2   0x00003164   0x00000006   PAD
    0x200003d8        -       0x00000400   Zero   RW          264    STACK               startup_ht32f5xxxx_03.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      6348        208        256          0         87      21101   bmv31t001.o
       384         12          0          0          4       5264   delay.o
       660         64          0          4        601      11469   ht32_usbd_class.o
      1266         40          0          0          4       9385   ht32_usbd_core.o
        32         12        137         36          0       1451   ht32_usbd_descriptor.o
        44          4          0          0          4       1422   ht32f5xxxx_01_it.o
       152         20          0          0          0      17766   ht32f5xxxx_ckcu.o
       380          4          0          0          0      11501   ht32f5xxxx_gpio.o
        56          4          0          0          0       3510   ht32f5xxxx_rstcu.o
      1530         72          0          0          1      18634   ht32f5xxxx_usbd.o
       108         16          0          0          0       4526   main.o
       356        238          0          0       1024        764   startup_ht32f5xxxx_03.o
       380         16          0          4          0       3212   system_ht32f5xxxx_03.o
       180         28          0          4        216       8997   usb_init.o
       116          4          0          0          1       2450   usb_vcp.o

    ----------------------------------------------------------------------
     12000        742        434         48       1960     121452   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          9          0         18          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
        62          0          0          0          0         72   uidiv_div0.o

    ----------------------------------------------------------------------
       162         18          0          0          0        140   Library Totals
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       160         18          0          0          0        140   mc_p.l

    ----------------------------------------------------------------------
       162         18          0          0          0        140   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12162        760        434         48       1960     121484   Grand Totals
     12162        760        434         48       1960     121484   ELF Image Totals
     12162        760        434         48          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                12596 (  12.30kB)
    Total RW  Size (RW Data + ZI Data)              2008 (   1.96kB)
    Total ROM Size (Code + RO Data + RW Data)      12644 (  12.35kB)

==============================================================================

